program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "5.33.5"}, {"coremlc-version", "1877.40.3"}, {"coremltools-component-torch", "2.2.1"}, {"coremltools-source-dialect", "TorchScript"}, {"coremltools-version", "7.1"}})]
{
    func main<ios16>(tensor<int32, [1]> cache_length, tensor<fp16, [1, 224]> decoder_key_padding_mask, tensor<fp16, [1, 768, 1, 1500]> encoder_output_embeds, tensor<int32, [1]> input_ids, tensor<fp16, [1, 9216, 1, 224]> key_cache, tensor<fp16, [1, 224]> kv_cache_update_mask, tensor<fp16, [1, 9216, 1, 224]> value_cache) {
            tensor<int32, []> var_40_axis_0 = const()[name = tensor<string, []>("op_40_axis_0"), val = tensor<int32, []>(0)];
            tensor<int32, []> var_40_batch_dims_0 = const()[name = tensor<string, []>("op_40_batch_dims_0"), val = tensor<int32, []>(0)];
            tensor<fp16, [51865, 768]> embed_tokens_weight_to_fp16 = const()[name = tensor<string, []>("embed_tokens_weight_to_fp16"), val = tensor<fp16, [51865, 768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [1, 768]> var_40_cast_fp16 = gather(axis = var_40_axis_0, batch_dims = var_40_batch_dims_0, indices = input_ids, x = embed_tokens_weight_to_fp16)[name = tensor<string, []>("op_40_cast_fp16")];
            tensor<int32, []> var_44_axis_0 = const()[name = tensor<string, []>("op_44_axis_0"), val = tensor<int32, []>(0)];
            tensor<int32, []> var_44_batch_dims_0 = const()[name = tensor<string, []>("op_44_batch_dims_0"), val = tensor<int32, []>(0)];
            tensor<fp16, [448, 768]> embed_positions_weight_to_fp16 = const()[name = tensor<string, []>("embed_positions_weight_to_fp16"), val = tensor<fp16, [448, 768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(79664768)))];
            tensor<fp16, [1, 768]> var_44_cast_fp16 = gather(axis = var_44_axis_0, batch_dims = var_44_batch_dims_0, indices = cache_length, x = embed_positions_weight_to_fp16)[name = tensor<string, []>("op_44_cast_fp16")];
            tensor<fp16, [1, 768]> hidden_states_1_cast_fp16 = add(x = var_40_cast_fp16, y = var_44_cast_fp16)[name = tensor<string, []>("hidden_states_1_cast_fp16")];
            tensor<int32, [1]> var_58_axes_0 = const()[name = tensor<string, []>("op_58_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [1, 768, 1]> var_58_cast_fp16 = expand_dims(axes = var_58_axes_0, x = hidden_states_1_cast_fp16)[name = tensor<string, []>("op_58_cast_fp16")];
            tensor<int32, [1]> inputs_1_axes_0 = const()[name = tensor<string, []>("inputs_1_axes_0"), val = tensor<int32, [1]>([3])];
            tensor<fp16, [1, 768, 1, 1]> inputs_1_cast_fp16 = expand_dims(axes = inputs_1_axes_0, x = var_58_cast_fp16)[name = tensor<string, []>("inputs_1_cast_fp16")];
            tensor<int32, [12]> tile_0 = const()[name = tensor<string, []>("tile_0"), val = tensor<int32, [12]>([768, 768, 768, 768, 768, 768, 768, 768, 768, 768, 768, 768])];
            tensor<int32, []> var_63_axis_0 = const()[name = tensor<string, []>("op_63_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 768, 1, 224]> var_63_cast_fp16_0, tensor<fp16, [1, 768, 1, 224]> var_63_cast_fp16_1, tensor<fp16, [1, 768, 1, 224]> var_63_cast_fp16_2, tensor<fp16, [1, 768, 1, 224]> var_63_cast_fp16_3, tensor<fp16, [1, 768, 1, 224]> var_63_cast_fp16_4, tensor<fp16, [1, 768, 1, 224]> var_63_cast_fp16_5, tensor<fp16, [1, 768, 1, 224]> var_63_cast_fp16_6, tensor<fp16, [1, 768, 1, 224]> var_63_cast_fp16_7, tensor<fp16, [1, 768, 1, 224]> var_63_cast_fp16_8, tensor<fp16, [1, 768, 1, 224]> var_63_cast_fp16_9, tensor<fp16, [1, 768, 1, 224]> var_63_cast_fp16_10, tensor<fp16, [1, 768, 1, 224]> var_63_cast_fp16_11 = split(axis = var_63_axis_0, split_sizes = tile_0, x = key_cache)[name = tensor<string, []>("op_63_cast_fp16")];
            tensor<int32, [12]> tile_1 = const()[name = tensor<string, []>("tile_1"), val = tensor<int32, [12]>([768, 768, 768, 768, 768, 768, 768, 768, 768, 768, 768, 768])];
            tensor<int32, []> var_78_axis_0 = const()[name = tensor<string, []>("op_78_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 768, 1, 224]> var_78_cast_fp16_0, tensor<fp16, [1, 768, 1, 224]> var_78_cast_fp16_1, tensor<fp16, [1, 768, 1, 224]> var_78_cast_fp16_2, tensor<fp16, [1, 768, 1, 224]> var_78_cast_fp16_3, tensor<fp16, [1, 768, 1, 224]> var_78_cast_fp16_4, tensor<fp16, [1, 768, 1, 224]> var_78_cast_fp16_5, tensor<fp16, [1, 768, 1, 224]> var_78_cast_fp16_6, tensor<fp16, [1, 768, 1, 224]> var_78_cast_fp16_7, tensor<fp16, [1, 768, 1, 224]> var_78_cast_fp16_8, tensor<fp16, [1, 768, 1, 224]> var_78_cast_fp16_9, tensor<fp16, [1, 768, 1, 224]> var_78_cast_fp16_10, tensor<fp16, [1, 768, 1, 224]> var_78_cast_fp16_11 = split(axis = var_78_axis_0, split_sizes = tile_1, x = value_cache)[name = tensor<string, []>("op_78_cast_fp16")];
            tensor<int32, []> var_96 = const()[name = tensor<string, []>("op_96"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_103 = const()[name = tensor<string, []>("op_103"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_104 = const()[name = tensor<string, []>("op_104"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_116 = const()[name = tensor<string, []>("op_116"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_1_cast_fp16 = reduce_mean(axes = var_116, keep_dims = var_104, x = inputs_1_cast_fp16)[name = tensor<string, []>("channels_mean_1_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_1_cast_fp16 = sub(x = inputs_1_cast_fp16, y = channels_mean_1_cast_fp16)[name = tensor<string, []>("zero_mean_1_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_1_cast_fp16 = mul(x = zero_mean_1_cast_fp16, y = zero_mean_1_cast_fp16)[name = tensor<string, []>("zero_mean_sq_1_cast_fp16")];
            tensor<int32, [1]> var_120 = const()[name = tensor<string, []>("op_120"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_121_cast_fp16 = reduce_mean(axes = var_120, keep_dims = var_104, x = zero_mean_sq_1_cast_fp16)[name = tensor<string, []>("op_121_cast_fp16")];
            tensor<fp16, []> var_122_to_fp16 = const()[name = tensor<string, []>("op_122_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_123_cast_fp16 = add(x = var_121_cast_fp16, y = var_122_to_fp16)[name = tensor<string, []>("op_123_cast_fp16")];
            tensor<fp16, []> denom_1_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_1_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_1_cast_fp16 = rsqrt(epsilon = denom_1_epsilon_0_to_fp16, x = var_123_cast_fp16)[name = tensor<string, []>("denom_1_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_1_cast_fp16 = mul(x = zero_mean_1_cast_fp16, y = denom_1_cast_fp16)[name = tensor<string, []>("out_1_cast_fp16")];
            tensor<fp16, [768]> obj_1_mean_0_to_fp16 = const()[name = tensor<string, []>("obj_1_mean_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80352960)))];
            tensor<fp16, [768]> obj_1_variance_0_to_fp16 = const()[name = tensor<string, []>("obj_1_variance_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80354560)))];
            tensor<fp16, [768]> obj_1_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_1_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80356160)))];
            tensor<fp16, [768]> obj_1_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_1_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80357760)))];
            tensor<fp16, []> obj_1_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_1_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_1_cast_fp16 = batch_norm(beta = obj_1_beta_0_to_fp16, epsilon = obj_1_epsilon_0_to_fp16, gamma = obj_1_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_1_cast_fp16)[name = tensor<string, []>("obj_1_cast_fp16")];
            tensor<int32, [2]> var_138 = const()[name = tensor<string, []>("op_138"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_140 = const()[name = tensor<string, []>("op_140"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_1_pad_type_0 = const()[name = tensor<string, []>("query_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_1_pad_0 = const()[name = tensor<string, []>("query_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_0_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80359360)))];
            tensor<fp16, [768]> layers_0_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(81539072)))];
            tensor<fp16, [1, 768, 1, 1]> query_1_cast_fp16 = conv(bias = layers_0_self_attn_q_proj_bias_to_fp16, dilations = var_140, groups = var_103, pad = query_1_pad_0, pad_type = query_1_pad_type_0, strides = var_138, weight = layers_0_self_attn_q_proj_weight_to_fp16, x = obj_1_cast_fp16)[name = tensor<string, []>("query_1_cast_fp16")];
            tensor<int32, [2]> var_144 = const()[name = tensor<string, []>("op_144"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_146 = const()[name = tensor<string, []>("op_146"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_1_pad_type_0 = const()[name = tensor<string, []>("current_key_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_1_pad_0 = const()[name = tensor<string, []>("current_key_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_0_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(81540672)))];
            tensor<fp16, [1, 768, 1, 1]> current_key_1_cast_fp16 = conv(dilations = var_146, groups = var_103, pad = current_key_1_pad_0, pad_type = current_key_1_pad_type_0, strides = var_144, weight = layers_0_self_attn_k_proj_weight_to_fp16, x = obj_1_cast_fp16)[name = tensor<string, []>("current_key_1_cast_fp16")];
            tensor<int32, [2]> var_151 = const()[name = tensor<string, []>("op_151"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_153 = const()[name = tensor<string, []>("op_153"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_1_pad_type_0 = const()[name = tensor<string, []>("current_value_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_1_pad_0 = const()[name = tensor<string, []>("current_value_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_0_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82720384)))];
            tensor<fp16, [768]> layers_0_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(83900096)))];
            tensor<fp16, [1, 768, 1, 1]> current_value_1_cast_fp16 = conv(bias = layers_0_self_attn_v_proj_bias_to_fp16, dilations = var_153, groups = var_103, pad = current_value_1_pad_0, pad_type = current_value_1_pad_type_0, strides = var_151, weight = layers_0_self_attn_v_proj_weight_to_fp16, x = obj_1_cast_fp16)[name = tensor<string, []>("current_value_1_cast_fp16")];
            tensor<int32, [1]> var_157_axes_0 = const()[name = tensor<string, []>("op_157_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 224]> var_157_cast_fp16 = expand_dims(axes = var_157_axes_0, x = kv_cache_update_mask)[name = tensor<string, []>("op_157_cast_fp16")];
            tensor<int32, [1]> var_158_axes_0 = const()[name = tensor<string, []>("op_158_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [1, 1, 1, 224]> var_158_cast_fp16 = expand_dims(axes = var_158_axes_0, x = var_157_cast_fp16)[name = tensor<string, []>("op_158_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_160_cast_fp16 = mul(x = current_key_1_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_160_cast_fp16")];
            tensor<fp16, []> var_97_to_fp16 = const()[name = tensor<string, []>("op_97_to_fp16"), val = tensor<fp16, []>(0x1p+0)];
            tensor<fp16, [1, 1, 1, 224]> var_161_cast_fp16 = sub(x = var_97_to_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_161_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_162_cast_fp16 = mul(x = var_63_cast_fp16_0, y = var_161_cast_fp16)[name = tensor<string, []>("op_162_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> key_1_cast_fp16 = add(x = var_160_cast_fp16, y = var_162_cast_fp16)[name = tensor<string, []>("key_1_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_164_cast_fp16 = mul(x = current_value_1_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_164_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_166_cast_fp16 = mul(x = var_78_cast_fp16_0, y = var_161_cast_fp16)[name = tensor<string, []>("op_166_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> value_1_cast_fp16 = add(x = var_164_cast_fp16, y = var_166_cast_fp16)[name = tensor<string, []>("value_1_cast_fp16")];
            tensor<int32, [4]> var_169 = const()[name = tensor<string, []>("op_169"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_170_cast_fp16 = reshape(shape = var_169, x = query_1_cast_fp16)[name = tensor<string, []>("op_170_cast_fp16")];
            tensor<fp16, []> var_171_to_fp16 = const()[name = tensor<string, []>("op_171_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_172_cast_fp16 = mul(x = var_170_cast_fp16, y = var_171_to_fp16)[name = tensor<string, []>("op_172_cast_fp16")];
            tensor<int32, [4]> var_173 = const()[name = tensor<string, []>("op_173"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_174_cast_fp16 = reshape(shape = var_173, x = key_1_cast_fp16)[name = tensor<string, []>("op_174_cast_fp16")];
            tensor<bool, []> mh_w_1_transpose_x_0 = const()[name = tensor<string, []>("mh_w_1_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_1_transpose_y_0 = const()[name = tensor<string, []>("mh_w_1_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 224]> mh_w_1_cast_fp16 = matmul(transpose_x = mh_w_1_transpose_x_0, transpose_y = mh_w_1_transpose_y_0, x = var_172_cast_fp16, y = var_174_cast_fp16)[name = tensor<string, []>("mh_w_1_cast_fp16")];
            tensor<int32, [1]> var_178_axes_0 = const()[name = tensor<string, []>("op_178_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 224]> var_178_cast_fp16 = expand_dims(axes = var_178_axes_0, x = decoder_key_padding_mask)[name = tensor<string, []>("op_178_cast_fp16")];
            tensor<int32, [1]> var_179_axes_0 = const()[name = tensor<string, []>("op_179_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [1, 1, 1, 224]> var_179_cast_fp16 = expand_dims(axes = var_179_axes_0, x = var_178_cast_fp16)[name = tensor<string, []>("op_179_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> mh_w_3_cast_fp16 = add(x = mh_w_1_cast_fp16, y = var_179_cast_fp16)[name = tensor<string, []>("mh_w_3_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> var_182_cast_fp16 = softmax(axis = var_96, x = mh_w_3_cast_fp16)[name = tensor<string, []>("op_182_cast_fp16")];
            tensor<int32, [4]> var_183 = const()[name = tensor<string, []>("op_183"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_184_cast_fp16 = reshape(shape = var_183, x = value_1_cast_fp16)[name = tensor<string, []>("op_184_cast_fp16")];
            tensor<bool, []> attn_1_transpose_x_0 = const()[name = tensor<string, []>("attn_1_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_1_transpose_y_0 = const()[name = tensor<string, []>("attn_1_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_1_cast_fp16 = matmul(transpose_x = attn_1_transpose_x_0, transpose_y = attn_1_transpose_y_0, x = var_184_cast_fp16, y = var_182_cast_fp16)[name = tensor<string, []>("attn_1_cast_fp16")];
            tensor<int32, [4]> var_187 = const()[name = tensor<string, []>("op_187"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_1_cast_fp16 = reshape(shape = var_187, x = attn_1_cast_fp16)[name = tensor<string, []>("input_1_cast_fp16")];
            tensor<int32, [2]> var_191 = const()[name = tensor<string, []>("op_191"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_193 = const()[name = tensor<string, []>("op_193"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_7_pad_type_0 = const()[name = tensor<string, []>("obj_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_7_pad_0 = const()[name = tensor<string, []>("obj_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_0_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(83901696)))];
            tensor<fp16, [768]> layers_0_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85081408)))];
            tensor<fp16, [1, 768, 1, 1]> obj_7_cast_fp16 = conv(bias = layers_0_self_attn_o_proj_bias_to_fp16, dilations = var_193, groups = var_103, pad = obj_7_pad_0, pad_type = obj_7_pad_type_0, strides = var_191, weight = layers_0_self_attn_o_proj_weight_to_fp16, x = input_1_cast_fp16)[name = tensor<string, []>("obj_7_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_3_cast_fp16 = add(x = inputs_1_cast_fp16, y = obj_7_cast_fp16)[name = tensor<string, []>("inputs_3_cast_fp16")];
            tensor<int32, [1]> var_203 = const()[name = tensor<string, []>("op_203"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_3_cast_fp16 = reduce_mean(axes = var_203, keep_dims = var_104, x = inputs_3_cast_fp16)[name = tensor<string, []>("channels_mean_3_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_3_cast_fp16 = sub(x = inputs_3_cast_fp16, y = channels_mean_3_cast_fp16)[name = tensor<string, []>("zero_mean_3_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_3_cast_fp16 = mul(x = zero_mean_3_cast_fp16, y = zero_mean_3_cast_fp16)[name = tensor<string, []>("zero_mean_sq_3_cast_fp16")];
            tensor<int32, [1]> var_207 = const()[name = tensor<string, []>("op_207"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_208_cast_fp16 = reduce_mean(axes = var_207, keep_dims = var_104, x = zero_mean_sq_3_cast_fp16)[name = tensor<string, []>("op_208_cast_fp16")];
            tensor<fp16, []> var_209_to_fp16 = const()[name = tensor<string, []>("op_209_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_210_cast_fp16 = add(x = var_208_cast_fp16, y = var_209_to_fp16)[name = tensor<string, []>("op_210_cast_fp16")];
            tensor<fp16, []> denom_3_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_3_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_3_cast_fp16 = rsqrt(epsilon = denom_3_epsilon_0_to_fp16, x = var_210_cast_fp16)[name = tensor<string, []>("denom_3_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_3_cast_fp16 = mul(x = zero_mean_3_cast_fp16, y = denom_3_cast_fp16)[name = tensor<string, []>("out_3_cast_fp16")];
            tensor<fp16, [768]> obj_9_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_9_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85083008)))];
            tensor<fp16, [768]> obj_9_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_9_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85084608)))];
            tensor<fp16, []> obj_9_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_9_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_9_cast_fp16 = batch_norm(beta = obj_9_beta_0_to_fp16, epsilon = obj_9_epsilon_0_to_fp16, gamma = obj_9_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_3_cast_fp16)[name = tensor<string, []>("obj_9_cast_fp16")];
            tensor<int32, [2]> var_225 = const()[name = tensor<string, []>("op_225"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_227 = const()[name = tensor<string, []>("op_227"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_3_pad_type_0 = const()[name = tensor<string, []>("query_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_3_pad_0 = const()[name = tensor<string, []>("query_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_0_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85086208)))];
            tensor<fp16, [768]> layers_0_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86265920)))];
            tensor<fp16, [1, 768, 1, 1]> query_3_cast_fp16 = conv(bias = layers_0_encoder_attn_q_proj_bias_to_fp16, dilations = var_227, groups = var_103, pad = query_3_pad_0, pad_type = query_3_pad_type_0, strides = var_225, weight = layers_0_encoder_attn_q_proj_weight_to_fp16, x = obj_9_cast_fp16)[name = tensor<string, []>("query_3_cast_fp16")];
            tensor<int32, [2]> var_231 = const()[name = tensor<string, []>("op_231"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_233 = const()[name = tensor<string, []>("op_233"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_3_pad_type_0 = const()[name = tensor<string, []>("key_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_3_pad_0 = const()[name = tensor<string, []>("key_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_0_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86267520)))];
            tensor<fp16, [1, 768, 1, 1500]> key_3_cast_fp16 = conv(dilations = var_233, groups = var_103, pad = key_3_pad_0, pad_type = key_3_pad_type_0, strides = var_231, weight = layers_0_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_3_cast_fp16")];
            tensor<int32, [2]> var_238 = const()[name = tensor<string, []>("op_238"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_240 = const()[name = tensor<string, []>("op_240"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_3_pad_type_0 = const()[name = tensor<string, []>("value_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_3_pad_0 = const()[name = tensor<string, []>("value_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_0_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(87447232)))];
            tensor<fp16, [768]> layers_0_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(88626944)))];
            tensor<fp16, [1, 768, 1, 1500]> value_3_cast_fp16 = conv(bias = layers_0_encoder_attn_v_proj_bias_to_fp16, dilations = var_240, groups = var_103, pad = value_3_pad_0, pad_type = value_3_pad_type_0, strides = var_238, weight = layers_0_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_3_cast_fp16")];
            tensor<int32, [4]> var_244 = const()[name = tensor<string, []>("op_244"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_245_cast_fp16 = reshape(shape = var_244, x = query_3_cast_fp16)[name = tensor<string, []>("op_245_cast_fp16")];
            tensor<fp16, []> var_246_to_fp16 = const()[name = tensor<string, []>("op_246_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_247_cast_fp16 = mul(x = var_245_cast_fp16, y = var_246_to_fp16)[name = tensor<string, []>("op_247_cast_fp16")];
            tensor<int32, [4]> var_248 = const()[name = tensor<string, []>("op_248"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_249_cast_fp16 = reshape(shape = var_248, x = key_3_cast_fp16)[name = tensor<string, []>("op_249_cast_fp16")];
            tensor<bool, []> mh_w_5_transpose_x_0 = const()[name = tensor<string, []>("mh_w_5_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_5_transpose_y_0 = const()[name = tensor<string, []>("mh_w_5_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 1500]> mh_w_5_cast_fp16 = matmul(transpose_x = mh_w_5_transpose_x_0, transpose_y = mh_w_5_transpose_y_0, x = var_247_cast_fp16, y = var_249_cast_fp16)[name = tensor<string, []>("mh_w_5_cast_fp16")];
            tensor<fp16, [1, 12, 1, 1500]> obj_13_cast_fp16 = softmax(axis = var_96, x = mh_w_5_cast_fp16)[name = tensor<string, []>("obj_13_cast_fp16")];
            tensor<int32, [4]> var_253 = const()[name = tensor<string, []>("op_253"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_254_cast_fp16 = reshape(shape = var_253, x = value_3_cast_fp16)[name = tensor<string, []>("op_254_cast_fp16")];
            tensor<bool, []> attn_3_transpose_x_0 = const()[name = tensor<string, []>("attn_3_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_3_transpose_y_0 = const()[name = tensor<string, []>("attn_3_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_3_cast_fp16 = matmul(transpose_x = attn_3_transpose_x_0, transpose_y = attn_3_transpose_y_0, x = var_254_cast_fp16, y = obj_13_cast_fp16)[name = tensor<string, []>("attn_3_cast_fp16")];
            tensor<int32, [4]> var_257 = const()[name = tensor<string, []>("op_257"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_3_cast_fp16 = reshape(shape = var_257, x = attn_3_cast_fp16)[name = tensor<string, []>("input_3_cast_fp16")];
            tensor<int32, [2]> var_261 = const()[name = tensor<string, []>("op_261"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_263 = const()[name = tensor<string, []>("op_263"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_11_pad_type_0 = const()[name = tensor<string, []>("obj_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_11_pad_0 = const()[name = tensor<string, []>("obj_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_0_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(88628544)))];
            tensor<fp16, [768]> layers_0_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89808256)))];
            tensor<fp16, [1, 768, 1, 1]> obj_11_cast_fp16 = conv(bias = layers_0_encoder_attn_o_proj_bias_to_fp16, dilations = var_263, groups = var_103, pad = obj_11_pad_0, pad_type = obj_11_pad_type_0, strides = var_261, weight = layers_0_encoder_attn_o_proj_weight_to_fp16, x = input_3_cast_fp16)[name = tensor<string, []>("obj_11_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_5_cast_fp16 = add(x = inputs_3_cast_fp16, y = obj_11_cast_fp16)[name = tensor<string, []>("inputs_5_cast_fp16")];
            tensor<int32, [1]> var_269 = const()[name = tensor<string, []>("op_269"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_5_cast_fp16 = reduce_mean(axes = var_269, keep_dims = var_104, x = inputs_5_cast_fp16)[name = tensor<string, []>("channels_mean_5_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_5_cast_fp16 = sub(x = inputs_5_cast_fp16, y = channels_mean_5_cast_fp16)[name = tensor<string, []>("zero_mean_5_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_5_cast_fp16 = mul(x = zero_mean_5_cast_fp16, y = zero_mean_5_cast_fp16)[name = tensor<string, []>("zero_mean_sq_5_cast_fp16")];
            tensor<int32, [1]> var_273 = const()[name = tensor<string, []>("op_273"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_274_cast_fp16 = reduce_mean(axes = var_273, keep_dims = var_104, x = zero_mean_sq_5_cast_fp16)[name = tensor<string, []>("op_274_cast_fp16")];
            tensor<fp16, []> var_275_to_fp16 = const()[name = tensor<string, []>("op_275_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_276_cast_fp16 = add(x = var_274_cast_fp16, y = var_275_to_fp16)[name = tensor<string, []>("op_276_cast_fp16")];
            tensor<fp16, []> denom_5_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_5_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_5_cast_fp16 = rsqrt(epsilon = denom_5_epsilon_0_to_fp16, x = var_276_cast_fp16)[name = tensor<string, []>("denom_5_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_5_cast_fp16 = mul(x = zero_mean_5_cast_fp16, y = denom_5_cast_fp16)[name = tensor<string, []>("out_5_cast_fp16")];
            tensor<fp16, [768]> input_5_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_5_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89809856)))];
            tensor<fp16, [768]> input_5_beta_0_to_fp16 = const()[name = tensor<string, []>("input_5_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89811456)))];
            tensor<fp16, []> input_5_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_5_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> input_5_cast_fp16 = batch_norm(beta = input_5_beta_0_to_fp16, epsilon = input_5_epsilon_0_to_fp16, gamma = input_5_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_5_cast_fp16)[name = tensor<string, []>("input_5_cast_fp16")];
            tensor<int32, [2]> var_287 = const()[name = tensor<string, []>("op_287"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_289 = const()[name = tensor<string, []>("op_289"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_7_pad_type_0 = const()[name = tensor<string, []>("input_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_7_pad_0 = const()[name = tensor<string, []>("input_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [3072, 768, 1, 1]> layers_0_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_fc1_weight_to_fp16"), val = tensor<fp16, [3072, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89813056)))];
            tensor<fp16, [3072]> layers_0_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_fc1_bias_to_fp16"), val = tensor<fp16, [3072]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(94531712)))];
            tensor<fp16, [1, 3072, 1, 1]> input_7_cast_fp16 = conv(bias = layers_0_fc1_bias_to_fp16, dilations = var_289, groups = var_103, pad = input_7_pad_0, pad_type = input_7_pad_type_0, strides = var_287, weight = layers_0_fc1_weight_to_fp16, x = input_5_cast_fp16)[name = tensor<string, []>("input_7_cast_fp16")];
            tensor<string, []> input_9_mode_0 = const()[name = tensor<string, []>("input_9_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 3072, 1, 1]> input_9_cast_fp16 = gelu(mode = input_9_mode_0, x = input_7_cast_fp16)[name = tensor<string, []>("input_9_cast_fp16")];
            tensor<int32, [2]> var_295 = const()[name = tensor<string, []>("op_295"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_297 = const()[name = tensor<string, []>("op_297"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_3_pad_type_0 = const()[name = tensor<string, []>("hidden_states_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_3_pad_0 = const()[name = tensor<string, []>("hidden_states_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 3072, 1, 1]> layers_0_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_fc2_weight_to_fp16"), val = tensor<fp16, [768, 3072, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(94537920)))];
            tensor<fp16, [768]> layers_0_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_fc2_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(99256576)))];
            tensor<fp16, [1, 768, 1, 1]> hidden_states_3_cast_fp16 = conv(bias = layers_0_fc2_bias_to_fp16, dilations = var_297, groups = var_103, pad = hidden_states_3_pad_0, pad_type = hidden_states_3_pad_type_0, strides = var_295, weight = layers_0_fc2_weight_to_fp16, x = input_9_cast_fp16)[name = tensor<string, []>("hidden_states_3_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_7_cast_fp16 = add(x = inputs_5_cast_fp16, y = hidden_states_3_cast_fp16)[name = tensor<string, []>("inputs_7_cast_fp16")];
            tensor<int32, []> var_310 = const()[name = tensor<string, []>("op_310"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_317 = const()[name = tensor<string, []>("op_317"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_318 = const()[name = tensor<string, []>("op_318"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_330 = const()[name = tensor<string, []>("op_330"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_7_cast_fp16 = reduce_mean(axes = var_330, keep_dims = var_318, x = inputs_7_cast_fp16)[name = tensor<string, []>("channels_mean_7_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_7_cast_fp16 = sub(x = inputs_7_cast_fp16, y = channels_mean_7_cast_fp16)[name = tensor<string, []>("zero_mean_7_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_7_cast_fp16 = mul(x = zero_mean_7_cast_fp16, y = zero_mean_7_cast_fp16)[name = tensor<string, []>("zero_mean_sq_7_cast_fp16")];
            tensor<int32, [1]> var_334 = const()[name = tensor<string, []>("op_334"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_335_cast_fp16 = reduce_mean(axes = var_334, keep_dims = var_318, x = zero_mean_sq_7_cast_fp16)[name = tensor<string, []>("op_335_cast_fp16")];
            tensor<fp16, []> var_336_to_fp16 = const()[name = tensor<string, []>("op_336_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_337_cast_fp16 = add(x = var_335_cast_fp16, y = var_336_to_fp16)[name = tensor<string, []>("op_337_cast_fp16")];
            tensor<fp16, []> denom_7_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_7_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_7_cast_fp16 = rsqrt(epsilon = denom_7_epsilon_0_to_fp16, x = var_337_cast_fp16)[name = tensor<string, []>("denom_7_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_7_cast_fp16 = mul(x = zero_mean_7_cast_fp16, y = denom_7_cast_fp16)[name = tensor<string, []>("out_7_cast_fp16")];
            tensor<fp16, [768]> obj_15_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_15_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(99258176)))];
            tensor<fp16, [768]> obj_15_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_15_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(99259776)))];
            tensor<fp16, []> obj_15_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_15_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_15_cast_fp16 = batch_norm(beta = obj_15_beta_0_to_fp16, epsilon = obj_15_epsilon_0_to_fp16, gamma = obj_15_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_7_cast_fp16)[name = tensor<string, []>("obj_15_cast_fp16")];
            tensor<int32, [2]> var_352 = const()[name = tensor<string, []>("op_352"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_354 = const()[name = tensor<string, []>("op_354"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_5_pad_type_0 = const()[name = tensor<string, []>("query_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_5_pad_0 = const()[name = tensor<string, []>("query_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_1_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(99261376)))];
            tensor<fp16, [768]> layers_1_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(100441088)))];
            tensor<fp16, [1, 768, 1, 1]> query_5_cast_fp16 = conv(bias = layers_1_self_attn_q_proj_bias_to_fp16, dilations = var_354, groups = var_317, pad = query_5_pad_0, pad_type = query_5_pad_type_0, strides = var_352, weight = layers_1_self_attn_q_proj_weight_to_fp16, x = obj_15_cast_fp16)[name = tensor<string, []>("query_5_cast_fp16")];
            tensor<int32, [2]> var_358 = const()[name = tensor<string, []>("op_358"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_360 = const()[name = tensor<string, []>("op_360"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_3_pad_type_0 = const()[name = tensor<string, []>("current_key_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_3_pad_0 = const()[name = tensor<string, []>("current_key_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_1_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(100442688)))];
            tensor<fp16, [1, 768, 1, 1]> current_key_3_cast_fp16 = conv(dilations = var_360, groups = var_317, pad = current_key_3_pad_0, pad_type = current_key_3_pad_type_0, strides = var_358, weight = layers_1_self_attn_k_proj_weight_to_fp16, x = obj_15_cast_fp16)[name = tensor<string, []>("current_key_3_cast_fp16")];
            tensor<int32, [2]> var_365 = const()[name = tensor<string, []>("op_365"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_367 = const()[name = tensor<string, []>("op_367"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_3_pad_type_0 = const()[name = tensor<string, []>("current_value_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_3_pad_0 = const()[name = tensor<string, []>("current_value_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_1_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(101622400)))];
            tensor<fp16, [768]> layers_1_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(102802112)))];
            tensor<fp16, [1, 768, 1, 1]> current_value_3_cast_fp16 = conv(bias = layers_1_self_attn_v_proj_bias_to_fp16, dilations = var_367, groups = var_317, pad = current_value_3_pad_0, pad_type = current_value_3_pad_type_0, strides = var_365, weight = layers_1_self_attn_v_proj_weight_to_fp16, x = obj_15_cast_fp16)[name = tensor<string, []>("current_value_3_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_374_cast_fp16 = mul(x = current_key_3_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_374_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_376_cast_fp16 = mul(x = var_63_cast_fp16_1, y = var_161_cast_fp16)[name = tensor<string, []>("op_376_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> key_5_cast_fp16 = add(x = var_374_cast_fp16, y = var_376_cast_fp16)[name = tensor<string, []>("key_5_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_378_cast_fp16 = mul(x = current_value_3_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_378_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_380_cast_fp16 = mul(x = var_78_cast_fp16_1, y = var_161_cast_fp16)[name = tensor<string, []>("op_380_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> value_5_cast_fp16 = add(x = var_378_cast_fp16, y = var_380_cast_fp16)[name = tensor<string, []>("value_5_cast_fp16")];
            tensor<int32, [4]> var_383 = const()[name = tensor<string, []>("op_383"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_384_cast_fp16 = reshape(shape = var_383, x = query_5_cast_fp16)[name = tensor<string, []>("op_384_cast_fp16")];
            tensor<fp16, []> var_385_to_fp16 = const()[name = tensor<string, []>("op_385_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_386_cast_fp16 = mul(x = var_384_cast_fp16, y = var_385_to_fp16)[name = tensor<string, []>("op_386_cast_fp16")];
            tensor<int32, [4]> var_387 = const()[name = tensor<string, []>("op_387"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_388_cast_fp16 = reshape(shape = var_387, x = key_5_cast_fp16)[name = tensor<string, []>("op_388_cast_fp16")];
            tensor<bool, []> mh_w_7_transpose_x_0 = const()[name = tensor<string, []>("mh_w_7_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_7_transpose_y_0 = const()[name = tensor<string, []>("mh_w_7_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 224]> mh_w_7_cast_fp16 = matmul(transpose_x = mh_w_7_transpose_x_0, transpose_y = mh_w_7_transpose_y_0, x = var_386_cast_fp16, y = var_388_cast_fp16)[name = tensor<string, []>("mh_w_7_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> mh_w_9_cast_fp16 = add(x = mh_w_7_cast_fp16, y = var_179_cast_fp16)[name = tensor<string, []>("mh_w_9_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> var_396_cast_fp16 = softmax(axis = var_310, x = mh_w_9_cast_fp16)[name = tensor<string, []>("op_396_cast_fp16")];
            tensor<int32, [4]> var_397 = const()[name = tensor<string, []>("op_397"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_398_cast_fp16 = reshape(shape = var_397, x = value_5_cast_fp16)[name = tensor<string, []>("op_398_cast_fp16")];
            tensor<bool, []> attn_5_transpose_x_0 = const()[name = tensor<string, []>("attn_5_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_5_transpose_y_0 = const()[name = tensor<string, []>("attn_5_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_5_cast_fp16 = matmul(transpose_x = attn_5_transpose_x_0, transpose_y = attn_5_transpose_y_0, x = var_398_cast_fp16, y = var_396_cast_fp16)[name = tensor<string, []>("attn_5_cast_fp16")];
            tensor<int32, [4]> var_401 = const()[name = tensor<string, []>("op_401"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_11_cast_fp16 = reshape(shape = var_401, x = attn_5_cast_fp16)[name = tensor<string, []>("input_11_cast_fp16")];
            tensor<int32, [2]> var_405 = const()[name = tensor<string, []>("op_405"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_407 = const()[name = tensor<string, []>("op_407"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_21_pad_type_0 = const()[name = tensor<string, []>("obj_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_21_pad_0 = const()[name = tensor<string, []>("obj_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_1_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(102803712)))];
            tensor<fp16, [768]> layers_1_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(103983424)))];
            tensor<fp16, [1, 768, 1, 1]> obj_21_cast_fp16 = conv(bias = layers_1_self_attn_o_proj_bias_to_fp16, dilations = var_407, groups = var_317, pad = obj_21_pad_0, pad_type = obj_21_pad_type_0, strides = var_405, weight = layers_1_self_attn_o_proj_weight_to_fp16, x = input_11_cast_fp16)[name = tensor<string, []>("obj_21_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_9_cast_fp16 = add(x = inputs_7_cast_fp16, y = obj_21_cast_fp16)[name = tensor<string, []>("inputs_9_cast_fp16")];
            tensor<int32, [1]> var_417 = const()[name = tensor<string, []>("op_417"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_9_cast_fp16 = reduce_mean(axes = var_417, keep_dims = var_318, x = inputs_9_cast_fp16)[name = tensor<string, []>("channels_mean_9_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_9_cast_fp16 = sub(x = inputs_9_cast_fp16, y = channels_mean_9_cast_fp16)[name = tensor<string, []>("zero_mean_9_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_9_cast_fp16 = mul(x = zero_mean_9_cast_fp16, y = zero_mean_9_cast_fp16)[name = tensor<string, []>("zero_mean_sq_9_cast_fp16")];
            tensor<int32, [1]> var_421 = const()[name = tensor<string, []>("op_421"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_422_cast_fp16 = reduce_mean(axes = var_421, keep_dims = var_318, x = zero_mean_sq_9_cast_fp16)[name = tensor<string, []>("op_422_cast_fp16")];
            tensor<fp16, []> var_423_to_fp16 = const()[name = tensor<string, []>("op_423_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_424_cast_fp16 = add(x = var_422_cast_fp16, y = var_423_to_fp16)[name = tensor<string, []>("op_424_cast_fp16")];
            tensor<fp16, []> denom_9_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_9_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_9_cast_fp16 = rsqrt(epsilon = denom_9_epsilon_0_to_fp16, x = var_424_cast_fp16)[name = tensor<string, []>("denom_9_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_9_cast_fp16 = mul(x = zero_mean_9_cast_fp16, y = denom_9_cast_fp16)[name = tensor<string, []>("out_9_cast_fp16")];
            tensor<fp16, [768]> obj_23_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_23_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(103985024)))];
            tensor<fp16, [768]> obj_23_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_23_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(103986624)))];
            tensor<fp16, []> obj_23_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_23_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_23_cast_fp16 = batch_norm(beta = obj_23_beta_0_to_fp16, epsilon = obj_23_epsilon_0_to_fp16, gamma = obj_23_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_9_cast_fp16)[name = tensor<string, []>("obj_23_cast_fp16")];
            tensor<int32, [2]> var_439 = const()[name = tensor<string, []>("op_439"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_441 = const()[name = tensor<string, []>("op_441"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_7_pad_type_0 = const()[name = tensor<string, []>("query_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_7_pad_0 = const()[name = tensor<string, []>("query_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_1_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(103988224)))];
            tensor<fp16, [768]> layers_1_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(105167936)))];
            tensor<fp16, [1, 768, 1, 1]> query_7_cast_fp16 = conv(bias = layers_1_encoder_attn_q_proj_bias_to_fp16, dilations = var_441, groups = var_317, pad = query_7_pad_0, pad_type = query_7_pad_type_0, strides = var_439, weight = layers_1_encoder_attn_q_proj_weight_to_fp16, x = obj_23_cast_fp16)[name = tensor<string, []>("query_7_cast_fp16")];
            tensor<int32, [2]> var_445 = const()[name = tensor<string, []>("op_445"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_447 = const()[name = tensor<string, []>("op_447"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_7_pad_type_0 = const()[name = tensor<string, []>("key_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_7_pad_0 = const()[name = tensor<string, []>("key_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_1_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(105169536)))];
            tensor<fp16, [1, 768, 1, 1500]> key_7_cast_fp16 = conv(dilations = var_447, groups = var_317, pad = key_7_pad_0, pad_type = key_7_pad_type_0, strides = var_445, weight = layers_1_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_7_cast_fp16")];
            tensor<int32, [2]> var_452 = const()[name = tensor<string, []>("op_452"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_454 = const()[name = tensor<string, []>("op_454"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_7_pad_type_0 = const()[name = tensor<string, []>("value_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_7_pad_0 = const()[name = tensor<string, []>("value_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_1_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(106349248)))];
            tensor<fp16, [768]> layers_1_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(107528960)))];
            tensor<fp16, [1, 768, 1, 1500]> value_7_cast_fp16 = conv(bias = layers_1_encoder_attn_v_proj_bias_to_fp16, dilations = var_454, groups = var_317, pad = value_7_pad_0, pad_type = value_7_pad_type_0, strides = var_452, weight = layers_1_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_7_cast_fp16")];
            tensor<int32, [4]> var_458 = const()[name = tensor<string, []>("op_458"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_459_cast_fp16 = reshape(shape = var_458, x = query_7_cast_fp16)[name = tensor<string, []>("op_459_cast_fp16")];
            tensor<fp16, []> var_460_to_fp16 = const()[name = tensor<string, []>("op_460_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_461_cast_fp16 = mul(x = var_459_cast_fp16, y = var_460_to_fp16)[name = tensor<string, []>("op_461_cast_fp16")];
            tensor<int32, [4]> var_462 = const()[name = tensor<string, []>("op_462"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_463_cast_fp16 = reshape(shape = var_462, x = key_7_cast_fp16)[name = tensor<string, []>("op_463_cast_fp16")];
            tensor<bool, []> mh_w_11_transpose_x_0 = const()[name = tensor<string, []>("mh_w_11_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_11_transpose_y_0 = const()[name = tensor<string, []>("mh_w_11_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 1500]> mh_w_11_cast_fp16 = matmul(transpose_x = mh_w_11_transpose_x_0, transpose_y = mh_w_11_transpose_y_0, x = var_461_cast_fp16, y = var_463_cast_fp16)[name = tensor<string, []>("mh_w_11_cast_fp16")];
            tensor<fp16, [1, 12, 1, 1500]> obj_27_cast_fp16 = softmax(axis = var_310, x = mh_w_11_cast_fp16)[name = tensor<string, []>("obj_27_cast_fp16")];
            tensor<int32, [4]> var_467 = const()[name = tensor<string, []>("op_467"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_468_cast_fp16 = reshape(shape = var_467, x = value_7_cast_fp16)[name = tensor<string, []>("op_468_cast_fp16")];
            tensor<bool, []> attn_7_transpose_x_0 = const()[name = tensor<string, []>("attn_7_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_7_transpose_y_0 = const()[name = tensor<string, []>("attn_7_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_7_cast_fp16 = matmul(transpose_x = attn_7_transpose_x_0, transpose_y = attn_7_transpose_y_0, x = var_468_cast_fp16, y = obj_27_cast_fp16)[name = tensor<string, []>("attn_7_cast_fp16")];
            tensor<int32, [4]> var_471 = const()[name = tensor<string, []>("op_471"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_13_cast_fp16 = reshape(shape = var_471, x = attn_7_cast_fp16)[name = tensor<string, []>("input_13_cast_fp16")];
            tensor<int32, [2]> var_475 = const()[name = tensor<string, []>("op_475"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_477 = const()[name = tensor<string, []>("op_477"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_25_pad_type_0 = const()[name = tensor<string, []>("obj_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_25_pad_0 = const()[name = tensor<string, []>("obj_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_1_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(107530560)))];
            tensor<fp16, [768]> layers_1_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(108710272)))];
            tensor<fp16, [1, 768, 1, 1]> obj_25_cast_fp16 = conv(bias = layers_1_encoder_attn_o_proj_bias_to_fp16, dilations = var_477, groups = var_317, pad = obj_25_pad_0, pad_type = obj_25_pad_type_0, strides = var_475, weight = layers_1_encoder_attn_o_proj_weight_to_fp16, x = input_13_cast_fp16)[name = tensor<string, []>("obj_25_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_11_cast_fp16 = add(x = inputs_9_cast_fp16, y = obj_25_cast_fp16)[name = tensor<string, []>("inputs_11_cast_fp16")];
            tensor<int32, [1]> var_483 = const()[name = tensor<string, []>("op_483"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_11_cast_fp16 = reduce_mean(axes = var_483, keep_dims = var_318, x = inputs_11_cast_fp16)[name = tensor<string, []>("channels_mean_11_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_11_cast_fp16 = sub(x = inputs_11_cast_fp16, y = channels_mean_11_cast_fp16)[name = tensor<string, []>("zero_mean_11_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_11_cast_fp16 = mul(x = zero_mean_11_cast_fp16, y = zero_mean_11_cast_fp16)[name = tensor<string, []>("zero_mean_sq_11_cast_fp16")];
            tensor<int32, [1]> var_487 = const()[name = tensor<string, []>("op_487"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_488_cast_fp16 = reduce_mean(axes = var_487, keep_dims = var_318, x = zero_mean_sq_11_cast_fp16)[name = tensor<string, []>("op_488_cast_fp16")];
            tensor<fp16, []> var_489_to_fp16 = const()[name = tensor<string, []>("op_489_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_490_cast_fp16 = add(x = var_488_cast_fp16, y = var_489_to_fp16)[name = tensor<string, []>("op_490_cast_fp16")];
            tensor<fp16, []> denom_11_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_11_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_11_cast_fp16 = rsqrt(epsilon = denom_11_epsilon_0_to_fp16, x = var_490_cast_fp16)[name = tensor<string, []>("denom_11_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_11_cast_fp16 = mul(x = zero_mean_11_cast_fp16, y = denom_11_cast_fp16)[name = tensor<string, []>("out_11_cast_fp16")];
            tensor<fp16, [768]> input_15_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_15_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(108711872)))];
            tensor<fp16, [768]> input_15_beta_0_to_fp16 = const()[name = tensor<string, []>("input_15_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(108713472)))];
            tensor<fp16, []> input_15_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_15_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> input_15_cast_fp16 = batch_norm(beta = input_15_beta_0_to_fp16, epsilon = input_15_epsilon_0_to_fp16, gamma = input_15_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_11_cast_fp16)[name = tensor<string, []>("input_15_cast_fp16")];
            tensor<int32, [2]> var_501 = const()[name = tensor<string, []>("op_501"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_503 = const()[name = tensor<string, []>("op_503"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_17_pad_type_0 = const()[name = tensor<string, []>("input_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_17_pad_0 = const()[name = tensor<string, []>("input_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [3072, 768, 1, 1]> layers_1_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_fc1_weight_to_fp16"), val = tensor<fp16, [3072, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(108715072)))];
            tensor<fp16, [3072]> layers_1_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_fc1_bias_to_fp16"), val = tensor<fp16, [3072]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(113433728)))];
            tensor<fp16, [1, 3072, 1, 1]> input_17_cast_fp16 = conv(bias = layers_1_fc1_bias_to_fp16, dilations = var_503, groups = var_317, pad = input_17_pad_0, pad_type = input_17_pad_type_0, strides = var_501, weight = layers_1_fc1_weight_to_fp16, x = input_15_cast_fp16)[name = tensor<string, []>("input_17_cast_fp16")];
            tensor<string, []> input_19_mode_0 = const()[name = tensor<string, []>("input_19_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 3072, 1, 1]> input_19_cast_fp16 = gelu(mode = input_19_mode_0, x = input_17_cast_fp16)[name = tensor<string, []>("input_19_cast_fp16")];
            tensor<int32, [2]> var_509 = const()[name = tensor<string, []>("op_509"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_511 = const()[name = tensor<string, []>("op_511"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_5_pad_type_0 = const()[name = tensor<string, []>("hidden_states_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_5_pad_0 = const()[name = tensor<string, []>("hidden_states_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 3072, 1, 1]> layers_1_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_fc2_weight_to_fp16"), val = tensor<fp16, [768, 3072, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(113439936)))];
            tensor<fp16, [768]> layers_1_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_fc2_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(118158592)))];
            tensor<fp16, [1, 768, 1, 1]> hidden_states_5_cast_fp16 = conv(bias = layers_1_fc2_bias_to_fp16, dilations = var_511, groups = var_317, pad = hidden_states_5_pad_0, pad_type = hidden_states_5_pad_type_0, strides = var_509, weight = layers_1_fc2_weight_to_fp16, x = input_19_cast_fp16)[name = tensor<string, []>("hidden_states_5_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_13_cast_fp16 = add(x = inputs_11_cast_fp16, y = hidden_states_5_cast_fp16)[name = tensor<string, []>("inputs_13_cast_fp16")];
            tensor<int32, []> var_524 = const()[name = tensor<string, []>("op_524"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_531 = const()[name = tensor<string, []>("op_531"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_532 = const()[name = tensor<string, []>("op_532"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_544 = const()[name = tensor<string, []>("op_544"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_13_cast_fp16 = reduce_mean(axes = var_544, keep_dims = var_532, x = inputs_13_cast_fp16)[name = tensor<string, []>("channels_mean_13_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_13_cast_fp16 = sub(x = inputs_13_cast_fp16, y = channels_mean_13_cast_fp16)[name = tensor<string, []>("zero_mean_13_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_13_cast_fp16 = mul(x = zero_mean_13_cast_fp16, y = zero_mean_13_cast_fp16)[name = tensor<string, []>("zero_mean_sq_13_cast_fp16")];
            tensor<int32, [1]> var_548 = const()[name = tensor<string, []>("op_548"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_549_cast_fp16 = reduce_mean(axes = var_548, keep_dims = var_532, x = zero_mean_sq_13_cast_fp16)[name = tensor<string, []>("op_549_cast_fp16")];
            tensor<fp16, []> var_550_to_fp16 = const()[name = tensor<string, []>("op_550_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_551_cast_fp16 = add(x = var_549_cast_fp16, y = var_550_to_fp16)[name = tensor<string, []>("op_551_cast_fp16")];
            tensor<fp16, []> denom_13_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_13_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_13_cast_fp16 = rsqrt(epsilon = denom_13_epsilon_0_to_fp16, x = var_551_cast_fp16)[name = tensor<string, []>("denom_13_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_13_cast_fp16 = mul(x = zero_mean_13_cast_fp16, y = denom_13_cast_fp16)[name = tensor<string, []>("out_13_cast_fp16")];
            tensor<fp16, [768]> obj_29_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_29_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(118160192)))];
            tensor<fp16, [768]> obj_29_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_29_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(118161792)))];
            tensor<fp16, []> obj_29_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_29_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_29_cast_fp16 = batch_norm(beta = obj_29_beta_0_to_fp16, epsilon = obj_29_epsilon_0_to_fp16, gamma = obj_29_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_13_cast_fp16)[name = tensor<string, []>("obj_29_cast_fp16")];
            tensor<int32, [2]> var_566 = const()[name = tensor<string, []>("op_566"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_568 = const()[name = tensor<string, []>("op_568"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_9_pad_type_0 = const()[name = tensor<string, []>("query_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_9_pad_0 = const()[name = tensor<string, []>("query_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_2_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(118163392)))];
            tensor<fp16, [768]> layers_2_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(119343104)))];
            tensor<fp16, [1, 768, 1, 1]> query_9_cast_fp16 = conv(bias = layers_2_self_attn_q_proj_bias_to_fp16, dilations = var_568, groups = var_531, pad = query_9_pad_0, pad_type = query_9_pad_type_0, strides = var_566, weight = layers_2_self_attn_q_proj_weight_to_fp16, x = obj_29_cast_fp16)[name = tensor<string, []>("query_9_cast_fp16")];
            tensor<int32, [2]> var_572 = const()[name = tensor<string, []>("op_572"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_574 = const()[name = tensor<string, []>("op_574"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_5_pad_type_0 = const()[name = tensor<string, []>("current_key_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_5_pad_0 = const()[name = tensor<string, []>("current_key_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_2_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(119344704)))];
            tensor<fp16, [1, 768, 1, 1]> current_key_5_cast_fp16 = conv(dilations = var_574, groups = var_531, pad = current_key_5_pad_0, pad_type = current_key_5_pad_type_0, strides = var_572, weight = layers_2_self_attn_k_proj_weight_to_fp16, x = obj_29_cast_fp16)[name = tensor<string, []>("current_key_5_cast_fp16")];
            tensor<int32, [2]> var_579 = const()[name = tensor<string, []>("op_579"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_581 = const()[name = tensor<string, []>("op_581"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_5_pad_type_0 = const()[name = tensor<string, []>("current_value_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_5_pad_0 = const()[name = tensor<string, []>("current_value_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_2_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(120524416)))];
            tensor<fp16, [768]> layers_2_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(121704128)))];
            tensor<fp16, [1, 768, 1, 1]> current_value_5_cast_fp16 = conv(bias = layers_2_self_attn_v_proj_bias_to_fp16, dilations = var_581, groups = var_531, pad = current_value_5_pad_0, pad_type = current_value_5_pad_type_0, strides = var_579, weight = layers_2_self_attn_v_proj_weight_to_fp16, x = obj_29_cast_fp16)[name = tensor<string, []>("current_value_5_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_588_cast_fp16 = mul(x = current_key_5_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_588_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_590_cast_fp16 = mul(x = var_63_cast_fp16_2, y = var_161_cast_fp16)[name = tensor<string, []>("op_590_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> key_9_cast_fp16 = add(x = var_588_cast_fp16, y = var_590_cast_fp16)[name = tensor<string, []>("key_9_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_592_cast_fp16 = mul(x = current_value_5_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_592_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_594_cast_fp16 = mul(x = var_78_cast_fp16_2, y = var_161_cast_fp16)[name = tensor<string, []>("op_594_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> value_9_cast_fp16 = add(x = var_592_cast_fp16, y = var_594_cast_fp16)[name = tensor<string, []>("value_9_cast_fp16")];
            tensor<int32, [4]> var_597 = const()[name = tensor<string, []>("op_597"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_598_cast_fp16 = reshape(shape = var_597, x = query_9_cast_fp16)[name = tensor<string, []>("op_598_cast_fp16")];
            tensor<fp16, []> var_599_to_fp16 = const()[name = tensor<string, []>("op_599_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_600_cast_fp16 = mul(x = var_598_cast_fp16, y = var_599_to_fp16)[name = tensor<string, []>("op_600_cast_fp16")];
            tensor<int32, [4]> var_601 = const()[name = tensor<string, []>("op_601"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_602_cast_fp16 = reshape(shape = var_601, x = key_9_cast_fp16)[name = tensor<string, []>("op_602_cast_fp16")];
            tensor<bool, []> mh_w_13_transpose_x_0 = const()[name = tensor<string, []>("mh_w_13_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_13_transpose_y_0 = const()[name = tensor<string, []>("mh_w_13_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 224]> mh_w_13_cast_fp16 = matmul(transpose_x = mh_w_13_transpose_x_0, transpose_y = mh_w_13_transpose_y_0, x = var_600_cast_fp16, y = var_602_cast_fp16)[name = tensor<string, []>("mh_w_13_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> mh_w_15_cast_fp16 = add(x = mh_w_13_cast_fp16, y = var_179_cast_fp16)[name = tensor<string, []>("mh_w_15_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> var_610_cast_fp16 = softmax(axis = var_524, x = mh_w_15_cast_fp16)[name = tensor<string, []>("op_610_cast_fp16")];
            tensor<int32, [4]> var_611 = const()[name = tensor<string, []>("op_611"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_612_cast_fp16 = reshape(shape = var_611, x = value_9_cast_fp16)[name = tensor<string, []>("op_612_cast_fp16")];
            tensor<bool, []> attn_9_transpose_x_0 = const()[name = tensor<string, []>("attn_9_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_9_transpose_y_0 = const()[name = tensor<string, []>("attn_9_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_9_cast_fp16 = matmul(transpose_x = attn_9_transpose_x_0, transpose_y = attn_9_transpose_y_0, x = var_612_cast_fp16, y = var_610_cast_fp16)[name = tensor<string, []>("attn_9_cast_fp16")];
            tensor<int32, [4]> var_615 = const()[name = tensor<string, []>("op_615"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_21_cast_fp16 = reshape(shape = var_615, x = attn_9_cast_fp16)[name = tensor<string, []>("input_21_cast_fp16")];
            tensor<int32, [2]> var_619 = const()[name = tensor<string, []>("op_619"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_621 = const()[name = tensor<string, []>("op_621"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_35_pad_type_0 = const()[name = tensor<string, []>("obj_35_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_35_pad_0 = const()[name = tensor<string, []>("obj_35_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_2_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(121705728)))];
            tensor<fp16, [768]> layers_2_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(122885440)))];
            tensor<fp16, [1, 768, 1, 1]> obj_35_cast_fp16 = conv(bias = layers_2_self_attn_o_proj_bias_to_fp16, dilations = var_621, groups = var_531, pad = obj_35_pad_0, pad_type = obj_35_pad_type_0, strides = var_619, weight = layers_2_self_attn_o_proj_weight_to_fp16, x = input_21_cast_fp16)[name = tensor<string, []>("obj_35_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_15_cast_fp16 = add(x = inputs_13_cast_fp16, y = obj_35_cast_fp16)[name = tensor<string, []>("inputs_15_cast_fp16")];
            tensor<int32, [1]> var_631 = const()[name = tensor<string, []>("op_631"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_15_cast_fp16 = reduce_mean(axes = var_631, keep_dims = var_532, x = inputs_15_cast_fp16)[name = tensor<string, []>("channels_mean_15_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_15_cast_fp16 = sub(x = inputs_15_cast_fp16, y = channels_mean_15_cast_fp16)[name = tensor<string, []>("zero_mean_15_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_15_cast_fp16 = mul(x = zero_mean_15_cast_fp16, y = zero_mean_15_cast_fp16)[name = tensor<string, []>("zero_mean_sq_15_cast_fp16")];
            tensor<int32, [1]> var_635 = const()[name = tensor<string, []>("op_635"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_636_cast_fp16 = reduce_mean(axes = var_635, keep_dims = var_532, x = zero_mean_sq_15_cast_fp16)[name = tensor<string, []>("op_636_cast_fp16")];
            tensor<fp16, []> var_637_to_fp16 = const()[name = tensor<string, []>("op_637_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_638_cast_fp16 = add(x = var_636_cast_fp16, y = var_637_to_fp16)[name = tensor<string, []>("op_638_cast_fp16")];
            tensor<fp16, []> denom_15_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_15_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_15_cast_fp16 = rsqrt(epsilon = denom_15_epsilon_0_to_fp16, x = var_638_cast_fp16)[name = tensor<string, []>("denom_15_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_15_cast_fp16 = mul(x = zero_mean_15_cast_fp16, y = denom_15_cast_fp16)[name = tensor<string, []>("out_15_cast_fp16")];
            tensor<fp16, [768]> obj_37_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_37_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(122887040)))];
            tensor<fp16, [768]> obj_37_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_37_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(122888640)))];
            tensor<fp16, []> obj_37_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_37_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_37_cast_fp16 = batch_norm(beta = obj_37_beta_0_to_fp16, epsilon = obj_37_epsilon_0_to_fp16, gamma = obj_37_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_15_cast_fp16)[name = tensor<string, []>("obj_37_cast_fp16")];
            tensor<int32, [2]> var_653 = const()[name = tensor<string, []>("op_653"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_655 = const()[name = tensor<string, []>("op_655"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_11_pad_type_0 = const()[name = tensor<string, []>("query_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_11_pad_0 = const()[name = tensor<string, []>("query_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_2_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(122890240)))];
            tensor<fp16, [768]> layers_2_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(124069952)))];
            tensor<fp16, [1, 768, 1, 1]> query_11_cast_fp16 = conv(bias = layers_2_encoder_attn_q_proj_bias_to_fp16, dilations = var_655, groups = var_531, pad = query_11_pad_0, pad_type = query_11_pad_type_0, strides = var_653, weight = layers_2_encoder_attn_q_proj_weight_to_fp16, x = obj_37_cast_fp16)[name = tensor<string, []>("query_11_cast_fp16")];
            tensor<int32, [2]> var_659 = const()[name = tensor<string, []>("op_659"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_661 = const()[name = tensor<string, []>("op_661"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_11_pad_type_0 = const()[name = tensor<string, []>("key_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_11_pad_0 = const()[name = tensor<string, []>("key_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_2_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(124071552)))];
            tensor<fp16, [1, 768, 1, 1500]> key_11_cast_fp16 = conv(dilations = var_661, groups = var_531, pad = key_11_pad_0, pad_type = key_11_pad_type_0, strides = var_659, weight = layers_2_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_11_cast_fp16")];
            tensor<int32, [2]> var_666 = const()[name = tensor<string, []>("op_666"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_668 = const()[name = tensor<string, []>("op_668"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_11_pad_type_0 = const()[name = tensor<string, []>("value_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_11_pad_0 = const()[name = tensor<string, []>("value_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_2_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(125251264)))];
            tensor<fp16, [768]> layers_2_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(126430976)))];
            tensor<fp16, [1, 768, 1, 1500]> value_11_cast_fp16 = conv(bias = layers_2_encoder_attn_v_proj_bias_to_fp16, dilations = var_668, groups = var_531, pad = value_11_pad_0, pad_type = value_11_pad_type_0, strides = var_666, weight = layers_2_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_11_cast_fp16")];
            tensor<int32, [4]> var_672 = const()[name = tensor<string, []>("op_672"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_673_cast_fp16 = reshape(shape = var_672, x = query_11_cast_fp16)[name = tensor<string, []>("op_673_cast_fp16")];
            tensor<fp16, []> var_674_to_fp16 = const()[name = tensor<string, []>("op_674_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_675_cast_fp16 = mul(x = var_673_cast_fp16, y = var_674_to_fp16)[name = tensor<string, []>("op_675_cast_fp16")];
            tensor<int32, [4]> var_676 = const()[name = tensor<string, []>("op_676"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_677_cast_fp16 = reshape(shape = var_676, x = key_11_cast_fp16)[name = tensor<string, []>("op_677_cast_fp16")];
            tensor<bool, []> mh_w_17_transpose_x_0 = const()[name = tensor<string, []>("mh_w_17_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_17_transpose_y_0 = const()[name = tensor<string, []>("mh_w_17_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 1500]> mh_w_17_cast_fp16 = matmul(transpose_x = mh_w_17_transpose_x_0, transpose_y = mh_w_17_transpose_y_0, x = var_675_cast_fp16, y = var_677_cast_fp16)[name = tensor<string, []>("mh_w_17_cast_fp16")];
            tensor<fp16, [1, 12, 1, 1500]> obj_41_cast_fp16 = softmax(axis = var_524, x = mh_w_17_cast_fp16)[name = tensor<string, []>("obj_41_cast_fp16")];
            tensor<int32, [4]> var_681 = const()[name = tensor<string, []>("op_681"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_682_cast_fp16 = reshape(shape = var_681, x = value_11_cast_fp16)[name = tensor<string, []>("op_682_cast_fp16")];
            tensor<bool, []> attn_11_transpose_x_0 = const()[name = tensor<string, []>("attn_11_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_11_transpose_y_0 = const()[name = tensor<string, []>("attn_11_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_11_cast_fp16 = matmul(transpose_x = attn_11_transpose_x_0, transpose_y = attn_11_transpose_y_0, x = var_682_cast_fp16, y = obj_41_cast_fp16)[name = tensor<string, []>("attn_11_cast_fp16")];
            tensor<int32, [4]> var_685 = const()[name = tensor<string, []>("op_685"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_23_cast_fp16 = reshape(shape = var_685, x = attn_11_cast_fp16)[name = tensor<string, []>("input_23_cast_fp16")];
            tensor<int32, [2]> var_689 = const()[name = tensor<string, []>("op_689"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_691 = const()[name = tensor<string, []>("op_691"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_39_pad_type_0 = const()[name = tensor<string, []>("obj_39_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_39_pad_0 = const()[name = tensor<string, []>("obj_39_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_2_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(126432576)))];
            tensor<fp16, [768]> layers_2_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(127612288)))];
            tensor<fp16, [1, 768, 1, 1]> obj_39_cast_fp16 = conv(bias = layers_2_encoder_attn_o_proj_bias_to_fp16, dilations = var_691, groups = var_531, pad = obj_39_pad_0, pad_type = obj_39_pad_type_0, strides = var_689, weight = layers_2_encoder_attn_o_proj_weight_to_fp16, x = input_23_cast_fp16)[name = tensor<string, []>("obj_39_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_17_cast_fp16 = add(x = inputs_15_cast_fp16, y = obj_39_cast_fp16)[name = tensor<string, []>("inputs_17_cast_fp16")];
            tensor<int32, [1]> var_697 = const()[name = tensor<string, []>("op_697"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_17_cast_fp16 = reduce_mean(axes = var_697, keep_dims = var_532, x = inputs_17_cast_fp16)[name = tensor<string, []>("channels_mean_17_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_17_cast_fp16 = sub(x = inputs_17_cast_fp16, y = channels_mean_17_cast_fp16)[name = tensor<string, []>("zero_mean_17_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_17_cast_fp16 = mul(x = zero_mean_17_cast_fp16, y = zero_mean_17_cast_fp16)[name = tensor<string, []>("zero_mean_sq_17_cast_fp16")];
            tensor<int32, [1]> var_701 = const()[name = tensor<string, []>("op_701"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_702_cast_fp16 = reduce_mean(axes = var_701, keep_dims = var_532, x = zero_mean_sq_17_cast_fp16)[name = tensor<string, []>("op_702_cast_fp16")];
            tensor<fp16, []> var_703_to_fp16 = const()[name = tensor<string, []>("op_703_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_704_cast_fp16 = add(x = var_702_cast_fp16, y = var_703_to_fp16)[name = tensor<string, []>("op_704_cast_fp16")];
            tensor<fp16, []> denom_17_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_17_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_17_cast_fp16 = rsqrt(epsilon = denom_17_epsilon_0_to_fp16, x = var_704_cast_fp16)[name = tensor<string, []>("denom_17_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_17_cast_fp16 = mul(x = zero_mean_17_cast_fp16, y = denom_17_cast_fp16)[name = tensor<string, []>("out_17_cast_fp16")];
            tensor<fp16, [768]> input_25_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_25_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(127613888)))];
            tensor<fp16, [768]> input_25_beta_0_to_fp16 = const()[name = tensor<string, []>("input_25_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(127615488)))];
            tensor<fp16, []> input_25_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_25_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> input_25_cast_fp16 = batch_norm(beta = input_25_beta_0_to_fp16, epsilon = input_25_epsilon_0_to_fp16, gamma = input_25_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_17_cast_fp16)[name = tensor<string, []>("input_25_cast_fp16")];
            tensor<int32, [2]> var_715 = const()[name = tensor<string, []>("op_715"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_717 = const()[name = tensor<string, []>("op_717"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_27_pad_type_0 = const()[name = tensor<string, []>("input_27_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_27_pad_0 = const()[name = tensor<string, []>("input_27_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [3072, 768, 1, 1]> layers_2_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_fc1_weight_to_fp16"), val = tensor<fp16, [3072, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(127617088)))];
            tensor<fp16, [3072]> layers_2_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_fc1_bias_to_fp16"), val = tensor<fp16, [3072]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(132335744)))];
            tensor<fp16, [1, 3072, 1, 1]> input_27_cast_fp16 = conv(bias = layers_2_fc1_bias_to_fp16, dilations = var_717, groups = var_531, pad = input_27_pad_0, pad_type = input_27_pad_type_0, strides = var_715, weight = layers_2_fc1_weight_to_fp16, x = input_25_cast_fp16)[name = tensor<string, []>("input_27_cast_fp16")];
            tensor<string, []> input_29_mode_0 = const()[name = tensor<string, []>("input_29_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 3072, 1, 1]> input_29_cast_fp16 = gelu(mode = input_29_mode_0, x = input_27_cast_fp16)[name = tensor<string, []>("input_29_cast_fp16")];
            tensor<int32, [2]> var_723 = const()[name = tensor<string, []>("op_723"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_725 = const()[name = tensor<string, []>("op_725"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_7_pad_type_0 = const()[name = tensor<string, []>("hidden_states_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_7_pad_0 = const()[name = tensor<string, []>("hidden_states_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 3072, 1, 1]> layers_2_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_fc2_weight_to_fp16"), val = tensor<fp16, [768, 3072, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(132341952)))];
            tensor<fp16, [768]> layers_2_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_fc2_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(137060608)))];
            tensor<fp16, [1, 768, 1, 1]> hidden_states_7_cast_fp16 = conv(bias = layers_2_fc2_bias_to_fp16, dilations = var_725, groups = var_531, pad = hidden_states_7_pad_0, pad_type = hidden_states_7_pad_type_0, strides = var_723, weight = layers_2_fc2_weight_to_fp16, x = input_29_cast_fp16)[name = tensor<string, []>("hidden_states_7_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_19_cast_fp16 = add(x = inputs_17_cast_fp16, y = hidden_states_7_cast_fp16)[name = tensor<string, []>("inputs_19_cast_fp16")];
            tensor<int32, []> var_738 = const()[name = tensor<string, []>("op_738"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_745 = const()[name = tensor<string, []>("op_745"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_746 = const()[name = tensor<string, []>("op_746"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_758 = const()[name = tensor<string, []>("op_758"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_19_cast_fp16 = reduce_mean(axes = var_758, keep_dims = var_746, x = inputs_19_cast_fp16)[name = tensor<string, []>("channels_mean_19_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_19_cast_fp16 = sub(x = inputs_19_cast_fp16, y = channels_mean_19_cast_fp16)[name = tensor<string, []>("zero_mean_19_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_19_cast_fp16 = mul(x = zero_mean_19_cast_fp16, y = zero_mean_19_cast_fp16)[name = tensor<string, []>("zero_mean_sq_19_cast_fp16")];
            tensor<int32, [1]> var_762 = const()[name = tensor<string, []>("op_762"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_763_cast_fp16 = reduce_mean(axes = var_762, keep_dims = var_746, x = zero_mean_sq_19_cast_fp16)[name = tensor<string, []>("op_763_cast_fp16")];
            tensor<fp16, []> var_764_to_fp16 = const()[name = tensor<string, []>("op_764_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_765_cast_fp16 = add(x = var_763_cast_fp16, y = var_764_to_fp16)[name = tensor<string, []>("op_765_cast_fp16")];
            tensor<fp16, []> denom_19_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_19_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_19_cast_fp16 = rsqrt(epsilon = denom_19_epsilon_0_to_fp16, x = var_765_cast_fp16)[name = tensor<string, []>("denom_19_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_19_cast_fp16 = mul(x = zero_mean_19_cast_fp16, y = denom_19_cast_fp16)[name = tensor<string, []>("out_19_cast_fp16")];
            tensor<fp16, [768]> obj_43_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_43_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(137062208)))];
            tensor<fp16, [768]> obj_43_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_43_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(137063808)))];
            tensor<fp16, []> obj_43_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_43_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_43_cast_fp16 = batch_norm(beta = obj_43_beta_0_to_fp16, epsilon = obj_43_epsilon_0_to_fp16, gamma = obj_43_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_19_cast_fp16)[name = tensor<string, []>("obj_43_cast_fp16")];
            tensor<int32, [2]> var_780 = const()[name = tensor<string, []>("op_780"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_782 = const()[name = tensor<string, []>("op_782"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_13_pad_type_0 = const()[name = tensor<string, []>("query_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_13_pad_0 = const()[name = tensor<string, []>("query_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_3_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(137065408)))];
            tensor<fp16, [768]> layers_3_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(138245120)))];
            tensor<fp16, [1, 768, 1, 1]> query_13_cast_fp16 = conv(bias = layers_3_self_attn_q_proj_bias_to_fp16, dilations = var_782, groups = var_745, pad = query_13_pad_0, pad_type = query_13_pad_type_0, strides = var_780, weight = layers_3_self_attn_q_proj_weight_to_fp16, x = obj_43_cast_fp16)[name = tensor<string, []>("query_13_cast_fp16")];
            tensor<int32, [2]> var_786 = const()[name = tensor<string, []>("op_786"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_788 = const()[name = tensor<string, []>("op_788"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_7_pad_type_0 = const()[name = tensor<string, []>("current_key_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_7_pad_0 = const()[name = tensor<string, []>("current_key_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_3_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(138246720)))];
            tensor<fp16, [1, 768, 1, 1]> current_key_7_cast_fp16 = conv(dilations = var_788, groups = var_745, pad = current_key_7_pad_0, pad_type = current_key_7_pad_type_0, strides = var_786, weight = layers_3_self_attn_k_proj_weight_to_fp16, x = obj_43_cast_fp16)[name = tensor<string, []>("current_key_7_cast_fp16")];
            tensor<int32, [2]> var_793 = const()[name = tensor<string, []>("op_793"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_795 = const()[name = tensor<string, []>("op_795"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_7_pad_type_0 = const()[name = tensor<string, []>("current_value_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_7_pad_0 = const()[name = tensor<string, []>("current_value_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_3_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(139426432)))];
            tensor<fp16, [768]> layers_3_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(140606144)))];
            tensor<fp16, [1, 768, 1, 1]> current_value_7_cast_fp16 = conv(bias = layers_3_self_attn_v_proj_bias_to_fp16, dilations = var_795, groups = var_745, pad = current_value_7_pad_0, pad_type = current_value_7_pad_type_0, strides = var_793, weight = layers_3_self_attn_v_proj_weight_to_fp16, x = obj_43_cast_fp16)[name = tensor<string, []>("current_value_7_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_802_cast_fp16 = mul(x = current_key_7_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_802_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_804_cast_fp16 = mul(x = var_63_cast_fp16_3, y = var_161_cast_fp16)[name = tensor<string, []>("op_804_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> key_13_cast_fp16 = add(x = var_802_cast_fp16, y = var_804_cast_fp16)[name = tensor<string, []>("key_13_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_806_cast_fp16 = mul(x = current_value_7_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_806_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_808_cast_fp16 = mul(x = var_78_cast_fp16_3, y = var_161_cast_fp16)[name = tensor<string, []>("op_808_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> value_13_cast_fp16 = add(x = var_806_cast_fp16, y = var_808_cast_fp16)[name = tensor<string, []>("value_13_cast_fp16")];
            tensor<int32, [4]> var_811 = const()[name = tensor<string, []>("op_811"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_812_cast_fp16 = reshape(shape = var_811, x = query_13_cast_fp16)[name = tensor<string, []>("op_812_cast_fp16")];
            tensor<fp16, []> var_813_to_fp16 = const()[name = tensor<string, []>("op_813_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_814_cast_fp16 = mul(x = var_812_cast_fp16, y = var_813_to_fp16)[name = tensor<string, []>("op_814_cast_fp16")];
            tensor<int32, [4]> var_815 = const()[name = tensor<string, []>("op_815"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_816_cast_fp16 = reshape(shape = var_815, x = key_13_cast_fp16)[name = tensor<string, []>("op_816_cast_fp16")];
            tensor<bool, []> mh_w_19_transpose_x_0 = const()[name = tensor<string, []>("mh_w_19_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_19_transpose_y_0 = const()[name = tensor<string, []>("mh_w_19_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 224]> mh_w_19_cast_fp16 = matmul(transpose_x = mh_w_19_transpose_x_0, transpose_y = mh_w_19_transpose_y_0, x = var_814_cast_fp16, y = var_816_cast_fp16)[name = tensor<string, []>("mh_w_19_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> mh_w_21_cast_fp16 = add(x = mh_w_19_cast_fp16, y = var_179_cast_fp16)[name = tensor<string, []>("mh_w_21_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> var_824_cast_fp16 = softmax(axis = var_738, x = mh_w_21_cast_fp16)[name = tensor<string, []>("op_824_cast_fp16")];
            tensor<int32, [4]> var_825 = const()[name = tensor<string, []>("op_825"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_826_cast_fp16 = reshape(shape = var_825, x = value_13_cast_fp16)[name = tensor<string, []>("op_826_cast_fp16")];
            tensor<bool, []> attn_13_transpose_x_0 = const()[name = tensor<string, []>("attn_13_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_13_transpose_y_0 = const()[name = tensor<string, []>("attn_13_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_13_cast_fp16 = matmul(transpose_x = attn_13_transpose_x_0, transpose_y = attn_13_transpose_y_0, x = var_826_cast_fp16, y = var_824_cast_fp16)[name = tensor<string, []>("attn_13_cast_fp16")];
            tensor<int32, [4]> var_829 = const()[name = tensor<string, []>("op_829"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_31_cast_fp16 = reshape(shape = var_829, x = attn_13_cast_fp16)[name = tensor<string, []>("input_31_cast_fp16")];
            tensor<int32, [2]> var_833 = const()[name = tensor<string, []>("op_833"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_835 = const()[name = tensor<string, []>("op_835"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_49_pad_type_0 = const()[name = tensor<string, []>("obj_49_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_49_pad_0 = const()[name = tensor<string, []>("obj_49_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_3_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(140607744)))];
            tensor<fp16, [768]> layers_3_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(141787456)))];
            tensor<fp16, [1, 768, 1, 1]> obj_49_cast_fp16 = conv(bias = layers_3_self_attn_o_proj_bias_to_fp16, dilations = var_835, groups = var_745, pad = obj_49_pad_0, pad_type = obj_49_pad_type_0, strides = var_833, weight = layers_3_self_attn_o_proj_weight_to_fp16, x = input_31_cast_fp16)[name = tensor<string, []>("obj_49_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_21_cast_fp16 = add(x = inputs_19_cast_fp16, y = obj_49_cast_fp16)[name = tensor<string, []>("inputs_21_cast_fp16")];
            tensor<int32, [1]> var_845 = const()[name = tensor<string, []>("op_845"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_21_cast_fp16 = reduce_mean(axes = var_845, keep_dims = var_746, x = inputs_21_cast_fp16)[name = tensor<string, []>("channels_mean_21_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_21_cast_fp16 = sub(x = inputs_21_cast_fp16, y = channels_mean_21_cast_fp16)[name = tensor<string, []>("zero_mean_21_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_21_cast_fp16 = mul(x = zero_mean_21_cast_fp16, y = zero_mean_21_cast_fp16)[name = tensor<string, []>("zero_mean_sq_21_cast_fp16")];
            tensor<int32, [1]> var_849 = const()[name = tensor<string, []>("op_849"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_850_cast_fp16 = reduce_mean(axes = var_849, keep_dims = var_746, x = zero_mean_sq_21_cast_fp16)[name = tensor<string, []>("op_850_cast_fp16")];
            tensor<fp16, []> var_851_to_fp16 = const()[name = tensor<string, []>("op_851_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_852_cast_fp16 = add(x = var_850_cast_fp16, y = var_851_to_fp16)[name = tensor<string, []>("op_852_cast_fp16")];
            tensor<fp16, []> denom_21_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_21_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_21_cast_fp16 = rsqrt(epsilon = denom_21_epsilon_0_to_fp16, x = var_852_cast_fp16)[name = tensor<string, []>("denom_21_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_21_cast_fp16 = mul(x = zero_mean_21_cast_fp16, y = denom_21_cast_fp16)[name = tensor<string, []>("out_21_cast_fp16")];
            tensor<fp16, [768]> obj_51_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_51_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(141789056)))];
            tensor<fp16, [768]> obj_51_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_51_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(141790656)))];
            tensor<fp16, []> obj_51_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_51_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_51_cast_fp16 = batch_norm(beta = obj_51_beta_0_to_fp16, epsilon = obj_51_epsilon_0_to_fp16, gamma = obj_51_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_21_cast_fp16)[name = tensor<string, []>("obj_51_cast_fp16")];
            tensor<int32, [2]> var_867 = const()[name = tensor<string, []>("op_867"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_869 = const()[name = tensor<string, []>("op_869"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_15_pad_type_0 = const()[name = tensor<string, []>("query_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_15_pad_0 = const()[name = tensor<string, []>("query_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_3_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(141792256)))];
            tensor<fp16, [768]> layers_3_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(142971968)))];
            tensor<fp16, [1, 768, 1, 1]> query_15_cast_fp16 = conv(bias = layers_3_encoder_attn_q_proj_bias_to_fp16, dilations = var_869, groups = var_745, pad = query_15_pad_0, pad_type = query_15_pad_type_0, strides = var_867, weight = layers_3_encoder_attn_q_proj_weight_to_fp16, x = obj_51_cast_fp16)[name = tensor<string, []>("query_15_cast_fp16")];
            tensor<int32, [2]> var_873 = const()[name = tensor<string, []>("op_873"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_875 = const()[name = tensor<string, []>("op_875"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_15_pad_type_0 = const()[name = tensor<string, []>("key_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_15_pad_0 = const()[name = tensor<string, []>("key_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_3_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(142973568)))];
            tensor<fp16, [1, 768, 1, 1500]> key_15_cast_fp16 = conv(dilations = var_875, groups = var_745, pad = key_15_pad_0, pad_type = key_15_pad_type_0, strides = var_873, weight = layers_3_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_15_cast_fp16")];
            tensor<int32, [2]> var_880 = const()[name = tensor<string, []>("op_880"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_882 = const()[name = tensor<string, []>("op_882"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_15_pad_type_0 = const()[name = tensor<string, []>("value_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_15_pad_0 = const()[name = tensor<string, []>("value_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_3_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(144153280)))];
            tensor<fp16, [768]> layers_3_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(145332992)))];
            tensor<fp16, [1, 768, 1, 1500]> value_15_cast_fp16 = conv(bias = layers_3_encoder_attn_v_proj_bias_to_fp16, dilations = var_882, groups = var_745, pad = value_15_pad_0, pad_type = value_15_pad_type_0, strides = var_880, weight = layers_3_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_15_cast_fp16")];
            tensor<int32, [4]> var_886 = const()[name = tensor<string, []>("op_886"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_887_cast_fp16 = reshape(shape = var_886, x = query_15_cast_fp16)[name = tensor<string, []>("op_887_cast_fp16")];
            tensor<fp16, []> var_888_to_fp16 = const()[name = tensor<string, []>("op_888_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_889_cast_fp16 = mul(x = var_887_cast_fp16, y = var_888_to_fp16)[name = tensor<string, []>("op_889_cast_fp16")];
            tensor<int32, [4]> var_890 = const()[name = tensor<string, []>("op_890"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_891_cast_fp16 = reshape(shape = var_890, x = key_15_cast_fp16)[name = tensor<string, []>("op_891_cast_fp16")];
            tensor<bool, []> mh_w_23_transpose_x_0 = const()[name = tensor<string, []>("mh_w_23_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_23_transpose_y_0 = const()[name = tensor<string, []>("mh_w_23_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 1500]> mh_w_23_cast_fp16 = matmul(transpose_x = mh_w_23_transpose_x_0, transpose_y = mh_w_23_transpose_y_0, x = var_889_cast_fp16, y = var_891_cast_fp16)[name = tensor<string, []>("mh_w_23_cast_fp16")];
            tensor<fp16, [1, 12, 1, 1500]> obj_55_cast_fp16 = softmax(axis = var_738, x = mh_w_23_cast_fp16)[name = tensor<string, []>("obj_55_cast_fp16")];
            tensor<int32, [4]> var_895 = const()[name = tensor<string, []>("op_895"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_896_cast_fp16 = reshape(shape = var_895, x = value_15_cast_fp16)[name = tensor<string, []>("op_896_cast_fp16")];
            tensor<bool, []> attn_15_transpose_x_0 = const()[name = tensor<string, []>("attn_15_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_15_transpose_y_0 = const()[name = tensor<string, []>("attn_15_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_15_cast_fp16 = matmul(transpose_x = attn_15_transpose_x_0, transpose_y = attn_15_transpose_y_0, x = var_896_cast_fp16, y = obj_55_cast_fp16)[name = tensor<string, []>("attn_15_cast_fp16")];
            tensor<int32, [4]> var_899 = const()[name = tensor<string, []>("op_899"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_33_cast_fp16 = reshape(shape = var_899, x = attn_15_cast_fp16)[name = tensor<string, []>("input_33_cast_fp16")];
            tensor<int32, [2]> var_903 = const()[name = tensor<string, []>("op_903"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_905 = const()[name = tensor<string, []>("op_905"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_53_pad_type_0 = const()[name = tensor<string, []>("obj_53_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_53_pad_0 = const()[name = tensor<string, []>("obj_53_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_3_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(145334592)))];
            tensor<fp16, [768]> layers_3_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(146514304)))];
            tensor<fp16, [1, 768, 1, 1]> obj_53_cast_fp16 = conv(bias = layers_3_encoder_attn_o_proj_bias_to_fp16, dilations = var_905, groups = var_745, pad = obj_53_pad_0, pad_type = obj_53_pad_type_0, strides = var_903, weight = layers_3_encoder_attn_o_proj_weight_to_fp16, x = input_33_cast_fp16)[name = tensor<string, []>("obj_53_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_23_cast_fp16 = add(x = inputs_21_cast_fp16, y = obj_53_cast_fp16)[name = tensor<string, []>("inputs_23_cast_fp16")];
            tensor<int32, [1]> var_911 = const()[name = tensor<string, []>("op_911"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_23_cast_fp16 = reduce_mean(axes = var_911, keep_dims = var_746, x = inputs_23_cast_fp16)[name = tensor<string, []>("channels_mean_23_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_23_cast_fp16 = sub(x = inputs_23_cast_fp16, y = channels_mean_23_cast_fp16)[name = tensor<string, []>("zero_mean_23_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_23_cast_fp16 = mul(x = zero_mean_23_cast_fp16, y = zero_mean_23_cast_fp16)[name = tensor<string, []>("zero_mean_sq_23_cast_fp16")];
            tensor<int32, [1]> var_915 = const()[name = tensor<string, []>("op_915"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_916_cast_fp16 = reduce_mean(axes = var_915, keep_dims = var_746, x = zero_mean_sq_23_cast_fp16)[name = tensor<string, []>("op_916_cast_fp16")];
            tensor<fp16, []> var_917_to_fp16 = const()[name = tensor<string, []>("op_917_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_918_cast_fp16 = add(x = var_916_cast_fp16, y = var_917_to_fp16)[name = tensor<string, []>("op_918_cast_fp16")];
            tensor<fp16, []> denom_23_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_23_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_23_cast_fp16 = rsqrt(epsilon = denom_23_epsilon_0_to_fp16, x = var_918_cast_fp16)[name = tensor<string, []>("denom_23_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_23_cast_fp16 = mul(x = zero_mean_23_cast_fp16, y = denom_23_cast_fp16)[name = tensor<string, []>("out_23_cast_fp16")];
            tensor<fp16, [768]> input_35_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_35_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(146515904)))];
            tensor<fp16, [768]> input_35_beta_0_to_fp16 = const()[name = tensor<string, []>("input_35_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(146517504)))];
            tensor<fp16, []> input_35_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_35_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> input_35_cast_fp16 = batch_norm(beta = input_35_beta_0_to_fp16, epsilon = input_35_epsilon_0_to_fp16, gamma = input_35_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_23_cast_fp16)[name = tensor<string, []>("input_35_cast_fp16")];
            tensor<int32, [2]> var_929 = const()[name = tensor<string, []>("op_929"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_931 = const()[name = tensor<string, []>("op_931"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_37_pad_type_0 = const()[name = tensor<string, []>("input_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_37_pad_0 = const()[name = tensor<string, []>("input_37_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [3072, 768, 1, 1]> layers_3_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_fc1_weight_to_fp16"), val = tensor<fp16, [3072, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(146519104)))];
            tensor<fp16, [3072]> layers_3_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_fc1_bias_to_fp16"), val = tensor<fp16, [3072]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(151237760)))];
            tensor<fp16, [1, 3072, 1, 1]> input_37_cast_fp16 = conv(bias = layers_3_fc1_bias_to_fp16, dilations = var_931, groups = var_745, pad = input_37_pad_0, pad_type = input_37_pad_type_0, strides = var_929, weight = layers_3_fc1_weight_to_fp16, x = input_35_cast_fp16)[name = tensor<string, []>("input_37_cast_fp16")];
            tensor<string, []> input_39_mode_0 = const()[name = tensor<string, []>("input_39_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 3072, 1, 1]> input_39_cast_fp16 = gelu(mode = input_39_mode_0, x = input_37_cast_fp16)[name = tensor<string, []>("input_39_cast_fp16")];
            tensor<int32, [2]> var_937 = const()[name = tensor<string, []>("op_937"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_939 = const()[name = tensor<string, []>("op_939"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_9_pad_type_0 = const()[name = tensor<string, []>("hidden_states_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_9_pad_0 = const()[name = tensor<string, []>("hidden_states_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 3072, 1, 1]> layers_3_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_fc2_weight_to_fp16"), val = tensor<fp16, [768, 3072, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(151243968)))];
            tensor<fp16, [768]> layers_3_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_fc2_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(155962624)))];
            tensor<fp16, [1, 768, 1, 1]> hidden_states_9_cast_fp16 = conv(bias = layers_3_fc2_bias_to_fp16, dilations = var_939, groups = var_745, pad = hidden_states_9_pad_0, pad_type = hidden_states_9_pad_type_0, strides = var_937, weight = layers_3_fc2_weight_to_fp16, x = input_39_cast_fp16)[name = tensor<string, []>("hidden_states_9_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_25_cast_fp16 = add(x = inputs_23_cast_fp16, y = hidden_states_9_cast_fp16)[name = tensor<string, []>("inputs_25_cast_fp16")];
            tensor<int32, []> var_952 = const()[name = tensor<string, []>("op_952"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_959 = const()[name = tensor<string, []>("op_959"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_960 = const()[name = tensor<string, []>("op_960"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_972 = const()[name = tensor<string, []>("op_972"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_25_cast_fp16 = reduce_mean(axes = var_972, keep_dims = var_960, x = inputs_25_cast_fp16)[name = tensor<string, []>("channels_mean_25_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_25_cast_fp16 = sub(x = inputs_25_cast_fp16, y = channels_mean_25_cast_fp16)[name = tensor<string, []>("zero_mean_25_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_25_cast_fp16 = mul(x = zero_mean_25_cast_fp16, y = zero_mean_25_cast_fp16)[name = tensor<string, []>("zero_mean_sq_25_cast_fp16")];
            tensor<int32, [1]> var_976 = const()[name = tensor<string, []>("op_976"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_977_cast_fp16 = reduce_mean(axes = var_976, keep_dims = var_960, x = zero_mean_sq_25_cast_fp16)[name = tensor<string, []>("op_977_cast_fp16")];
            tensor<fp16, []> var_978_to_fp16 = const()[name = tensor<string, []>("op_978_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_979_cast_fp16 = add(x = var_977_cast_fp16, y = var_978_to_fp16)[name = tensor<string, []>("op_979_cast_fp16")];
            tensor<fp16, []> denom_25_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_25_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_25_cast_fp16 = rsqrt(epsilon = denom_25_epsilon_0_to_fp16, x = var_979_cast_fp16)[name = tensor<string, []>("denom_25_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_25_cast_fp16 = mul(x = zero_mean_25_cast_fp16, y = denom_25_cast_fp16)[name = tensor<string, []>("out_25_cast_fp16")];
            tensor<fp16, [768]> obj_57_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_57_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(155964224)))];
            tensor<fp16, [768]> obj_57_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_57_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(155965824)))];
            tensor<fp16, []> obj_57_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_57_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_57_cast_fp16 = batch_norm(beta = obj_57_beta_0_to_fp16, epsilon = obj_57_epsilon_0_to_fp16, gamma = obj_57_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_25_cast_fp16)[name = tensor<string, []>("obj_57_cast_fp16")];
            tensor<int32, [2]> var_994 = const()[name = tensor<string, []>("op_994"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_996 = const()[name = tensor<string, []>("op_996"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_17_pad_type_0 = const()[name = tensor<string, []>("query_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_17_pad_0 = const()[name = tensor<string, []>("query_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_4_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(155967424)))];
            tensor<fp16, [768]> layers_4_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_4_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(157147136)))];
            tensor<fp16, [1, 768, 1, 1]> query_17_cast_fp16 = conv(bias = layers_4_self_attn_q_proj_bias_to_fp16, dilations = var_996, groups = var_959, pad = query_17_pad_0, pad_type = query_17_pad_type_0, strides = var_994, weight = layers_4_self_attn_q_proj_weight_to_fp16, x = obj_57_cast_fp16)[name = tensor<string, []>("query_17_cast_fp16")];
            tensor<int32, [2]> var_1000 = const()[name = tensor<string, []>("op_1000"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1002 = const()[name = tensor<string, []>("op_1002"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_9_pad_type_0 = const()[name = tensor<string, []>("current_key_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_9_pad_0 = const()[name = tensor<string, []>("current_key_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_4_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(157148736)))];
            tensor<fp16, [1, 768, 1, 1]> current_key_9_cast_fp16 = conv(dilations = var_1002, groups = var_959, pad = current_key_9_pad_0, pad_type = current_key_9_pad_type_0, strides = var_1000, weight = layers_4_self_attn_k_proj_weight_to_fp16, x = obj_57_cast_fp16)[name = tensor<string, []>("current_key_9_cast_fp16")];
            tensor<int32, [2]> var_1007 = const()[name = tensor<string, []>("op_1007"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1009 = const()[name = tensor<string, []>("op_1009"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_9_pad_type_0 = const()[name = tensor<string, []>("current_value_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_9_pad_0 = const()[name = tensor<string, []>("current_value_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_4_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(158328448)))];
            tensor<fp16, [768]> layers_4_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_4_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(159508160)))];
            tensor<fp16, [1, 768, 1, 1]> current_value_9_cast_fp16 = conv(bias = layers_4_self_attn_v_proj_bias_to_fp16, dilations = var_1009, groups = var_959, pad = current_value_9_pad_0, pad_type = current_value_9_pad_type_0, strides = var_1007, weight = layers_4_self_attn_v_proj_weight_to_fp16, x = obj_57_cast_fp16)[name = tensor<string, []>("current_value_9_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1016_cast_fp16 = mul(x = current_key_9_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_1016_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1018_cast_fp16 = mul(x = var_63_cast_fp16_4, y = var_161_cast_fp16)[name = tensor<string, []>("op_1018_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> key_17_cast_fp16 = add(x = var_1016_cast_fp16, y = var_1018_cast_fp16)[name = tensor<string, []>("key_17_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1020_cast_fp16 = mul(x = current_value_9_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_1020_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1022_cast_fp16 = mul(x = var_78_cast_fp16_4, y = var_161_cast_fp16)[name = tensor<string, []>("op_1022_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> value_17_cast_fp16 = add(x = var_1020_cast_fp16, y = var_1022_cast_fp16)[name = tensor<string, []>("value_17_cast_fp16")];
            tensor<int32, [4]> var_1025 = const()[name = tensor<string, []>("op_1025"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_1026_cast_fp16 = reshape(shape = var_1025, x = query_17_cast_fp16)[name = tensor<string, []>("op_1026_cast_fp16")];
            tensor<fp16, []> var_1027_to_fp16 = const()[name = tensor<string, []>("op_1027_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_1028_cast_fp16 = mul(x = var_1026_cast_fp16, y = var_1027_to_fp16)[name = tensor<string, []>("op_1028_cast_fp16")];
            tensor<int32, [4]> var_1029 = const()[name = tensor<string, []>("op_1029"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_1030_cast_fp16 = reshape(shape = var_1029, x = key_17_cast_fp16)[name = tensor<string, []>("op_1030_cast_fp16")];
            tensor<bool, []> mh_w_25_transpose_x_0 = const()[name = tensor<string, []>("mh_w_25_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_25_transpose_y_0 = const()[name = tensor<string, []>("mh_w_25_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 224]> mh_w_25_cast_fp16 = matmul(transpose_x = mh_w_25_transpose_x_0, transpose_y = mh_w_25_transpose_y_0, x = var_1028_cast_fp16, y = var_1030_cast_fp16)[name = tensor<string, []>("mh_w_25_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> mh_w_27_cast_fp16 = add(x = mh_w_25_cast_fp16, y = var_179_cast_fp16)[name = tensor<string, []>("mh_w_27_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> var_1038_cast_fp16 = softmax(axis = var_952, x = mh_w_27_cast_fp16)[name = tensor<string, []>("op_1038_cast_fp16")];
            tensor<int32, [4]> var_1039 = const()[name = tensor<string, []>("op_1039"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_1040_cast_fp16 = reshape(shape = var_1039, x = value_17_cast_fp16)[name = tensor<string, []>("op_1040_cast_fp16")];
            tensor<bool, []> attn_17_transpose_x_0 = const()[name = tensor<string, []>("attn_17_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_17_transpose_y_0 = const()[name = tensor<string, []>("attn_17_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_17_cast_fp16 = matmul(transpose_x = attn_17_transpose_x_0, transpose_y = attn_17_transpose_y_0, x = var_1040_cast_fp16, y = var_1038_cast_fp16)[name = tensor<string, []>("attn_17_cast_fp16")];
            tensor<int32, [4]> var_1043 = const()[name = tensor<string, []>("op_1043"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_41_cast_fp16 = reshape(shape = var_1043, x = attn_17_cast_fp16)[name = tensor<string, []>("input_41_cast_fp16")];
            tensor<int32, [2]> var_1047 = const()[name = tensor<string, []>("op_1047"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1049 = const()[name = tensor<string, []>("op_1049"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_63_pad_type_0 = const()[name = tensor<string, []>("obj_63_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_63_pad_0 = const()[name = tensor<string, []>("obj_63_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_4_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(159509760)))];
            tensor<fp16, [768]> layers_4_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_4_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(160689472)))];
            tensor<fp16, [1, 768, 1, 1]> obj_63_cast_fp16 = conv(bias = layers_4_self_attn_o_proj_bias_to_fp16, dilations = var_1049, groups = var_959, pad = obj_63_pad_0, pad_type = obj_63_pad_type_0, strides = var_1047, weight = layers_4_self_attn_o_proj_weight_to_fp16, x = input_41_cast_fp16)[name = tensor<string, []>("obj_63_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_27_cast_fp16 = add(x = inputs_25_cast_fp16, y = obj_63_cast_fp16)[name = tensor<string, []>("inputs_27_cast_fp16")];
            tensor<int32, [1]> var_1059 = const()[name = tensor<string, []>("op_1059"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_27_cast_fp16 = reduce_mean(axes = var_1059, keep_dims = var_960, x = inputs_27_cast_fp16)[name = tensor<string, []>("channels_mean_27_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_27_cast_fp16 = sub(x = inputs_27_cast_fp16, y = channels_mean_27_cast_fp16)[name = tensor<string, []>("zero_mean_27_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_27_cast_fp16 = mul(x = zero_mean_27_cast_fp16, y = zero_mean_27_cast_fp16)[name = tensor<string, []>("zero_mean_sq_27_cast_fp16")];
            tensor<int32, [1]> var_1063 = const()[name = tensor<string, []>("op_1063"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1064_cast_fp16 = reduce_mean(axes = var_1063, keep_dims = var_960, x = zero_mean_sq_27_cast_fp16)[name = tensor<string, []>("op_1064_cast_fp16")];
            tensor<fp16, []> var_1065_to_fp16 = const()[name = tensor<string, []>("op_1065_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1066_cast_fp16 = add(x = var_1064_cast_fp16, y = var_1065_to_fp16)[name = tensor<string, []>("op_1066_cast_fp16")];
            tensor<fp16, []> denom_27_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_27_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_27_cast_fp16 = rsqrt(epsilon = denom_27_epsilon_0_to_fp16, x = var_1066_cast_fp16)[name = tensor<string, []>("denom_27_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_27_cast_fp16 = mul(x = zero_mean_27_cast_fp16, y = denom_27_cast_fp16)[name = tensor<string, []>("out_27_cast_fp16")];
            tensor<fp16, [768]> obj_65_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_65_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(160691072)))];
            tensor<fp16, [768]> obj_65_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_65_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(160692672)))];
            tensor<fp16, []> obj_65_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_65_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_65_cast_fp16 = batch_norm(beta = obj_65_beta_0_to_fp16, epsilon = obj_65_epsilon_0_to_fp16, gamma = obj_65_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_27_cast_fp16)[name = tensor<string, []>("obj_65_cast_fp16")];
            tensor<int32, [2]> var_1081 = const()[name = tensor<string, []>("op_1081"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1083 = const()[name = tensor<string, []>("op_1083"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_19_pad_type_0 = const()[name = tensor<string, []>("query_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_19_pad_0 = const()[name = tensor<string, []>("query_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_4_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(160694272)))];
            tensor<fp16, [768]> layers_4_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_4_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(161873984)))];
            tensor<fp16, [1, 768, 1, 1]> query_19_cast_fp16 = conv(bias = layers_4_encoder_attn_q_proj_bias_to_fp16, dilations = var_1083, groups = var_959, pad = query_19_pad_0, pad_type = query_19_pad_type_0, strides = var_1081, weight = layers_4_encoder_attn_q_proj_weight_to_fp16, x = obj_65_cast_fp16)[name = tensor<string, []>("query_19_cast_fp16")];
            tensor<int32, [2]> var_1087 = const()[name = tensor<string, []>("op_1087"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1089 = const()[name = tensor<string, []>("op_1089"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_19_pad_type_0 = const()[name = tensor<string, []>("key_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_19_pad_0 = const()[name = tensor<string, []>("key_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_4_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(161875584)))];
            tensor<fp16, [1, 768, 1, 1500]> key_19_cast_fp16 = conv(dilations = var_1089, groups = var_959, pad = key_19_pad_0, pad_type = key_19_pad_type_0, strides = var_1087, weight = layers_4_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_19_cast_fp16")];
            tensor<int32, [2]> var_1094 = const()[name = tensor<string, []>("op_1094"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1096 = const()[name = tensor<string, []>("op_1096"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_19_pad_type_0 = const()[name = tensor<string, []>("value_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_19_pad_0 = const()[name = tensor<string, []>("value_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_4_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(163055296)))];
            tensor<fp16, [768]> layers_4_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_4_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(164235008)))];
            tensor<fp16, [1, 768, 1, 1500]> value_19_cast_fp16 = conv(bias = layers_4_encoder_attn_v_proj_bias_to_fp16, dilations = var_1096, groups = var_959, pad = value_19_pad_0, pad_type = value_19_pad_type_0, strides = var_1094, weight = layers_4_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_19_cast_fp16")];
            tensor<int32, [4]> var_1100 = const()[name = tensor<string, []>("op_1100"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_1101_cast_fp16 = reshape(shape = var_1100, x = query_19_cast_fp16)[name = tensor<string, []>("op_1101_cast_fp16")];
            tensor<fp16, []> var_1102_to_fp16 = const()[name = tensor<string, []>("op_1102_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_1103_cast_fp16 = mul(x = var_1101_cast_fp16, y = var_1102_to_fp16)[name = tensor<string, []>("op_1103_cast_fp16")];
            tensor<int32, [4]> var_1104 = const()[name = tensor<string, []>("op_1104"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_1105_cast_fp16 = reshape(shape = var_1104, x = key_19_cast_fp16)[name = tensor<string, []>("op_1105_cast_fp16")];
            tensor<bool, []> mh_w_29_transpose_x_0 = const()[name = tensor<string, []>("mh_w_29_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_29_transpose_y_0 = const()[name = tensor<string, []>("mh_w_29_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 1500]> mh_w_29_cast_fp16 = matmul(transpose_x = mh_w_29_transpose_x_0, transpose_y = mh_w_29_transpose_y_0, x = var_1103_cast_fp16, y = var_1105_cast_fp16)[name = tensor<string, []>("mh_w_29_cast_fp16")];
            tensor<fp16, [1, 12, 1, 1500]> obj_69_cast_fp16 = softmax(axis = var_952, x = mh_w_29_cast_fp16)[name = tensor<string, []>("obj_69_cast_fp16")];
            tensor<int32, [4]> var_1109 = const()[name = tensor<string, []>("op_1109"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_1110_cast_fp16 = reshape(shape = var_1109, x = value_19_cast_fp16)[name = tensor<string, []>("op_1110_cast_fp16")];
            tensor<bool, []> attn_19_transpose_x_0 = const()[name = tensor<string, []>("attn_19_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_19_transpose_y_0 = const()[name = tensor<string, []>("attn_19_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_19_cast_fp16 = matmul(transpose_x = attn_19_transpose_x_0, transpose_y = attn_19_transpose_y_0, x = var_1110_cast_fp16, y = obj_69_cast_fp16)[name = tensor<string, []>("attn_19_cast_fp16")];
            tensor<int32, [4]> var_1113 = const()[name = tensor<string, []>("op_1113"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_43_cast_fp16 = reshape(shape = var_1113, x = attn_19_cast_fp16)[name = tensor<string, []>("input_43_cast_fp16")];
            tensor<int32, [2]> var_1117 = const()[name = tensor<string, []>("op_1117"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1119 = const()[name = tensor<string, []>("op_1119"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_67_pad_type_0 = const()[name = tensor<string, []>("obj_67_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_67_pad_0 = const()[name = tensor<string, []>("obj_67_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_4_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(164236608)))];
            tensor<fp16, [768]> layers_4_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_4_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(165416320)))];
            tensor<fp16, [1, 768, 1, 1]> obj_67_cast_fp16 = conv(bias = layers_4_encoder_attn_o_proj_bias_to_fp16, dilations = var_1119, groups = var_959, pad = obj_67_pad_0, pad_type = obj_67_pad_type_0, strides = var_1117, weight = layers_4_encoder_attn_o_proj_weight_to_fp16, x = input_43_cast_fp16)[name = tensor<string, []>("obj_67_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_29_cast_fp16 = add(x = inputs_27_cast_fp16, y = obj_67_cast_fp16)[name = tensor<string, []>("inputs_29_cast_fp16")];
            tensor<int32, [1]> var_1125 = const()[name = tensor<string, []>("op_1125"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_29_cast_fp16 = reduce_mean(axes = var_1125, keep_dims = var_960, x = inputs_29_cast_fp16)[name = tensor<string, []>("channels_mean_29_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_29_cast_fp16 = sub(x = inputs_29_cast_fp16, y = channels_mean_29_cast_fp16)[name = tensor<string, []>("zero_mean_29_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_29_cast_fp16 = mul(x = zero_mean_29_cast_fp16, y = zero_mean_29_cast_fp16)[name = tensor<string, []>("zero_mean_sq_29_cast_fp16")];
            tensor<int32, [1]> var_1129 = const()[name = tensor<string, []>("op_1129"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1130_cast_fp16 = reduce_mean(axes = var_1129, keep_dims = var_960, x = zero_mean_sq_29_cast_fp16)[name = tensor<string, []>("op_1130_cast_fp16")];
            tensor<fp16, []> var_1131_to_fp16 = const()[name = tensor<string, []>("op_1131_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1132_cast_fp16 = add(x = var_1130_cast_fp16, y = var_1131_to_fp16)[name = tensor<string, []>("op_1132_cast_fp16")];
            tensor<fp16, []> denom_29_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_29_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_29_cast_fp16 = rsqrt(epsilon = denom_29_epsilon_0_to_fp16, x = var_1132_cast_fp16)[name = tensor<string, []>("denom_29_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_29_cast_fp16 = mul(x = zero_mean_29_cast_fp16, y = denom_29_cast_fp16)[name = tensor<string, []>("out_29_cast_fp16")];
            tensor<fp16, [768]> input_45_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_45_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(165417920)))];
            tensor<fp16, [768]> input_45_beta_0_to_fp16 = const()[name = tensor<string, []>("input_45_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(165419520)))];
            tensor<fp16, []> input_45_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_45_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> input_45_cast_fp16 = batch_norm(beta = input_45_beta_0_to_fp16, epsilon = input_45_epsilon_0_to_fp16, gamma = input_45_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_29_cast_fp16)[name = tensor<string, []>("input_45_cast_fp16")];
            tensor<int32, [2]> var_1143 = const()[name = tensor<string, []>("op_1143"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1145 = const()[name = tensor<string, []>("op_1145"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_47_pad_type_0 = const()[name = tensor<string, []>("input_47_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_47_pad_0 = const()[name = tensor<string, []>("input_47_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [3072, 768, 1, 1]> layers_4_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_fc1_weight_to_fp16"), val = tensor<fp16, [3072, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(165421120)))];
            tensor<fp16, [3072]> layers_4_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_4_fc1_bias_to_fp16"), val = tensor<fp16, [3072]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(170139776)))];
            tensor<fp16, [1, 3072, 1, 1]> input_47_cast_fp16 = conv(bias = layers_4_fc1_bias_to_fp16, dilations = var_1145, groups = var_959, pad = input_47_pad_0, pad_type = input_47_pad_type_0, strides = var_1143, weight = layers_4_fc1_weight_to_fp16, x = input_45_cast_fp16)[name = tensor<string, []>("input_47_cast_fp16")];
            tensor<string, []> input_49_mode_0 = const()[name = tensor<string, []>("input_49_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 3072, 1, 1]> input_49_cast_fp16 = gelu(mode = input_49_mode_0, x = input_47_cast_fp16)[name = tensor<string, []>("input_49_cast_fp16")];
            tensor<int32, [2]> var_1151 = const()[name = tensor<string, []>("op_1151"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1153 = const()[name = tensor<string, []>("op_1153"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_11_pad_type_0 = const()[name = tensor<string, []>("hidden_states_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_11_pad_0 = const()[name = tensor<string, []>("hidden_states_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 3072, 1, 1]> layers_4_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_fc2_weight_to_fp16"), val = tensor<fp16, [768, 3072, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(170145984)))];
            tensor<fp16, [768]> layers_4_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_4_fc2_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(174864640)))];
            tensor<fp16, [1, 768, 1, 1]> hidden_states_11_cast_fp16 = conv(bias = layers_4_fc2_bias_to_fp16, dilations = var_1153, groups = var_959, pad = hidden_states_11_pad_0, pad_type = hidden_states_11_pad_type_0, strides = var_1151, weight = layers_4_fc2_weight_to_fp16, x = input_49_cast_fp16)[name = tensor<string, []>("hidden_states_11_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_31_cast_fp16 = add(x = inputs_29_cast_fp16, y = hidden_states_11_cast_fp16)[name = tensor<string, []>("inputs_31_cast_fp16")];
            tensor<int32, []> var_1166 = const()[name = tensor<string, []>("op_1166"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_1173 = const()[name = tensor<string, []>("op_1173"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_1174 = const()[name = tensor<string, []>("op_1174"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_1186 = const()[name = tensor<string, []>("op_1186"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_31_cast_fp16 = reduce_mean(axes = var_1186, keep_dims = var_1174, x = inputs_31_cast_fp16)[name = tensor<string, []>("channels_mean_31_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_31_cast_fp16 = sub(x = inputs_31_cast_fp16, y = channels_mean_31_cast_fp16)[name = tensor<string, []>("zero_mean_31_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_31_cast_fp16 = mul(x = zero_mean_31_cast_fp16, y = zero_mean_31_cast_fp16)[name = tensor<string, []>("zero_mean_sq_31_cast_fp16")];
            tensor<int32, [1]> var_1190 = const()[name = tensor<string, []>("op_1190"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1191_cast_fp16 = reduce_mean(axes = var_1190, keep_dims = var_1174, x = zero_mean_sq_31_cast_fp16)[name = tensor<string, []>("op_1191_cast_fp16")];
            tensor<fp16, []> var_1192_to_fp16 = const()[name = tensor<string, []>("op_1192_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1193_cast_fp16 = add(x = var_1191_cast_fp16, y = var_1192_to_fp16)[name = tensor<string, []>("op_1193_cast_fp16")];
            tensor<fp16, []> denom_31_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_31_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_31_cast_fp16 = rsqrt(epsilon = denom_31_epsilon_0_to_fp16, x = var_1193_cast_fp16)[name = tensor<string, []>("denom_31_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_31_cast_fp16 = mul(x = zero_mean_31_cast_fp16, y = denom_31_cast_fp16)[name = tensor<string, []>("out_31_cast_fp16")];
            tensor<fp16, [768]> obj_71_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_71_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(174866240)))];
            tensor<fp16, [768]> obj_71_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_71_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(174867840)))];
            tensor<fp16, []> obj_71_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_71_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_71_cast_fp16 = batch_norm(beta = obj_71_beta_0_to_fp16, epsilon = obj_71_epsilon_0_to_fp16, gamma = obj_71_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_31_cast_fp16)[name = tensor<string, []>("obj_71_cast_fp16")];
            tensor<int32, [2]> var_1208 = const()[name = tensor<string, []>("op_1208"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1210 = const()[name = tensor<string, []>("op_1210"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_21_pad_type_0 = const()[name = tensor<string, []>("query_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_21_pad_0 = const()[name = tensor<string, []>("query_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_5_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(174869440)))];
            tensor<fp16, [768]> layers_5_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_5_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(176049152)))];
            tensor<fp16, [1, 768, 1, 1]> query_21_cast_fp16 = conv(bias = layers_5_self_attn_q_proj_bias_to_fp16, dilations = var_1210, groups = var_1173, pad = query_21_pad_0, pad_type = query_21_pad_type_0, strides = var_1208, weight = layers_5_self_attn_q_proj_weight_to_fp16, x = obj_71_cast_fp16)[name = tensor<string, []>("query_21_cast_fp16")];
            tensor<int32, [2]> var_1214 = const()[name = tensor<string, []>("op_1214"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1216 = const()[name = tensor<string, []>("op_1216"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_11_pad_type_0 = const()[name = tensor<string, []>("current_key_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_11_pad_0 = const()[name = tensor<string, []>("current_key_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_5_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(176050752)))];
            tensor<fp16, [1, 768, 1, 1]> current_key_11_cast_fp16 = conv(dilations = var_1216, groups = var_1173, pad = current_key_11_pad_0, pad_type = current_key_11_pad_type_0, strides = var_1214, weight = layers_5_self_attn_k_proj_weight_to_fp16, x = obj_71_cast_fp16)[name = tensor<string, []>("current_key_11_cast_fp16")];
            tensor<int32, [2]> var_1221 = const()[name = tensor<string, []>("op_1221"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1223 = const()[name = tensor<string, []>("op_1223"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_11_pad_type_0 = const()[name = tensor<string, []>("current_value_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_11_pad_0 = const()[name = tensor<string, []>("current_value_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_5_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(177230464)))];
            tensor<fp16, [768]> layers_5_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_5_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(178410176)))];
            tensor<fp16, [1, 768, 1, 1]> current_value_11_cast_fp16 = conv(bias = layers_5_self_attn_v_proj_bias_to_fp16, dilations = var_1223, groups = var_1173, pad = current_value_11_pad_0, pad_type = current_value_11_pad_type_0, strides = var_1221, weight = layers_5_self_attn_v_proj_weight_to_fp16, x = obj_71_cast_fp16)[name = tensor<string, []>("current_value_11_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1230_cast_fp16 = mul(x = current_key_11_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_1230_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1232_cast_fp16 = mul(x = var_63_cast_fp16_5, y = var_161_cast_fp16)[name = tensor<string, []>("op_1232_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> key_21_cast_fp16 = add(x = var_1230_cast_fp16, y = var_1232_cast_fp16)[name = tensor<string, []>("key_21_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1234_cast_fp16 = mul(x = current_value_11_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_1234_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1236_cast_fp16 = mul(x = var_78_cast_fp16_5, y = var_161_cast_fp16)[name = tensor<string, []>("op_1236_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> value_21_cast_fp16 = add(x = var_1234_cast_fp16, y = var_1236_cast_fp16)[name = tensor<string, []>("value_21_cast_fp16")];
            tensor<int32, [4]> var_1239 = const()[name = tensor<string, []>("op_1239"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_1240_cast_fp16 = reshape(shape = var_1239, x = query_21_cast_fp16)[name = tensor<string, []>("op_1240_cast_fp16")];
            tensor<fp16, []> var_1241_to_fp16 = const()[name = tensor<string, []>("op_1241_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_1242_cast_fp16 = mul(x = var_1240_cast_fp16, y = var_1241_to_fp16)[name = tensor<string, []>("op_1242_cast_fp16")];
            tensor<int32, [4]> var_1243 = const()[name = tensor<string, []>("op_1243"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_1244_cast_fp16 = reshape(shape = var_1243, x = key_21_cast_fp16)[name = tensor<string, []>("op_1244_cast_fp16")];
            tensor<bool, []> mh_w_31_transpose_x_0 = const()[name = tensor<string, []>("mh_w_31_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_31_transpose_y_0 = const()[name = tensor<string, []>("mh_w_31_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 224]> mh_w_31_cast_fp16 = matmul(transpose_x = mh_w_31_transpose_x_0, transpose_y = mh_w_31_transpose_y_0, x = var_1242_cast_fp16, y = var_1244_cast_fp16)[name = tensor<string, []>("mh_w_31_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> mh_w_33_cast_fp16 = add(x = mh_w_31_cast_fp16, y = var_179_cast_fp16)[name = tensor<string, []>("mh_w_33_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> var_1252_cast_fp16 = softmax(axis = var_1166, x = mh_w_33_cast_fp16)[name = tensor<string, []>("op_1252_cast_fp16")];
            tensor<int32, [4]> var_1253 = const()[name = tensor<string, []>("op_1253"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_1254_cast_fp16 = reshape(shape = var_1253, x = value_21_cast_fp16)[name = tensor<string, []>("op_1254_cast_fp16")];
            tensor<bool, []> attn_21_transpose_x_0 = const()[name = tensor<string, []>("attn_21_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_21_transpose_y_0 = const()[name = tensor<string, []>("attn_21_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_21_cast_fp16 = matmul(transpose_x = attn_21_transpose_x_0, transpose_y = attn_21_transpose_y_0, x = var_1254_cast_fp16, y = var_1252_cast_fp16)[name = tensor<string, []>("attn_21_cast_fp16")];
            tensor<int32, [4]> var_1257 = const()[name = tensor<string, []>("op_1257"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_51_cast_fp16 = reshape(shape = var_1257, x = attn_21_cast_fp16)[name = tensor<string, []>("input_51_cast_fp16")];
            tensor<int32, [2]> var_1261 = const()[name = tensor<string, []>("op_1261"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1263 = const()[name = tensor<string, []>("op_1263"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_77_pad_type_0 = const()[name = tensor<string, []>("obj_77_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_77_pad_0 = const()[name = tensor<string, []>("obj_77_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_5_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(178411776)))];
            tensor<fp16, [768]> layers_5_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_5_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(179591488)))];
            tensor<fp16, [1, 768, 1, 1]> obj_77_cast_fp16 = conv(bias = layers_5_self_attn_o_proj_bias_to_fp16, dilations = var_1263, groups = var_1173, pad = obj_77_pad_0, pad_type = obj_77_pad_type_0, strides = var_1261, weight = layers_5_self_attn_o_proj_weight_to_fp16, x = input_51_cast_fp16)[name = tensor<string, []>("obj_77_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_33_cast_fp16 = add(x = inputs_31_cast_fp16, y = obj_77_cast_fp16)[name = tensor<string, []>("inputs_33_cast_fp16")];
            tensor<int32, [1]> var_1273 = const()[name = tensor<string, []>("op_1273"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_33_cast_fp16 = reduce_mean(axes = var_1273, keep_dims = var_1174, x = inputs_33_cast_fp16)[name = tensor<string, []>("channels_mean_33_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_33_cast_fp16 = sub(x = inputs_33_cast_fp16, y = channels_mean_33_cast_fp16)[name = tensor<string, []>("zero_mean_33_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_33_cast_fp16 = mul(x = zero_mean_33_cast_fp16, y = zero_mean_33_cast_fp16)[name = tensor<string, []>("zero_mean_sq_33_cast_fp16")];
            tensor<int32, [1]> var_1277 = const()[name = tensor<string, []>("op_1277"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1278_cast_fp16 = reduce_mean(axes = var_1277, keep_dims = var_1174, x = zero_mean_sq_33_cast_fp16)[name = tensor<string, []>("op_1278_cast_fp16")];
            tensor<fp16, []> var_1279_to_fp16 = const()[name = tensor<string, []>("op_1279_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1280_cast_fp16 = add(x = var_1278_cast_fp16, y = var_1279_to_fp16)[name = tensor<string, []>("op_1280_cast_fp16")];
            tensor<fp16, []> denom_33_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_33_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_33_cast_fp16 = rsqrt(epsilon = denom_33_epsilon_0_to_fp16, x = var_1280_cast_fp16)[name = tensor<string, []>("denom_33_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_33_cast_fp16 = mul(x = zero_mean_33_cast_fp16, y = denom_33_cast_fp16)[name = tensor<string, []>("out_33_cast_fp16")];
            tensor<fp16, [768]> obj_79_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_79_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(179593088)))];
            tensor<fp16, [768]> obj_79_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_79_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(179594688)))];
            tensor<fp16, []> obj_79_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_79_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_79_cast_fp16 = batch_norm(beta = obj_79_beta_0_to_fp16, epsilon = obj_79_epsilon_0_to_fp16, gamma = obj_79_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_33_cast_fp16)[name = tensor<string, []>("obj_79_cast_fp16")];
            tensor<int32, [2]> var_1295 = const()[name = tensor<string, []>("op_1295"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1297 = const()[name = tensor<string, []>("op_1297"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_23_pad_type_0 = const()[name = tensor<string, []>("query_23_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_23_pad_0 = const()[name = tensor<string, []>("query_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_5_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(179596288)))];
            tensor<fp16, [768]> layers_5_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_5_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(180776000)))];
            tensor<fp16, [1, 768, 1, 1]> query_23_cast_fp16 = conv(bias = layers_5_encoder_attn_q_proj_bias_to_fp16, dilations = var_1297, groups = var_1173, pad = query_23_pad_0, pad_type = query_23_pad_type_0, strides = var_1295, weight = layers_5_encoder_attn_q_proj_weight_to_fp16, x = obj_79_cast_fp16)[name = tensor<string, []>("query_23_cast_fp16")];
            tensor<int32, [2]> var_1301 = const()[name = tensor<string, []>("op_1301"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1303 = const()[name = tensor<string, []>("op_1303"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_23_pad_type_0 = const()[name = tensor<string, []>("key_23_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_23_pad_0 = const()[name = tensor<string, []>("key_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_5_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(180777600)))];
            tensor<fp16, [1, 768, 1, 1500]> key_23_cast_fp16 = conv(dilations = var_1303, groups = var_1173, pad = key_23_pad_0, pad_type = key_23_pad_type_0, strides = var_1301, weight = layers_5_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_23_cast_fp16")];
            tensor<int32, [2]> var_1308 = const()[name = tensor<string, []>("op_1308"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1310 = const()[name = tensor<string, []>("op_1310"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_23_pad_type_0 = const()[name = tensor<string, []>("value_23_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_23_pad_0 = const()[name = tensor<string, []>("value_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_5_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(181957312)))];
            tensor<fp16, [768]> layers_5_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_5_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(183137024)))];
            tensor<fp16, [1, 768, 1, 1500]> value_23_cast_fp16 = conv(bias = layers_5_encoder_attn_v_proj_bias_to_fp16, dilations = var_1310, groups = var_1173, pad = value_23_pad_0, pad_type = value_23_pad_type_0, strides = var_1308, weight = layers_5_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_23_cast_fp16")];
            tensor<int32, [4]> var_1314 = const()[name = tensor<string, []>("op_1314"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_1315_cast_fp16 = reshape(shape = var_1314, x = query_23_cast_fp16)[name = tensor<string, []>("op_1315_cast_fp16")];
            tensor<fp16, []> var_1316_to_fp16 = const()[name = tensor<string, []>("op_1316_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_1317_cast_fp16 = mul(x = var_1315_cast_fp16, y = var_1316_to_fp16)[name = tensor<string, []>("op_1317_cast_fp16")];
            tensor<int32, [4]> var_1318 = const()[name = tensor<string, []>("op_1318"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_1319_cast_fp16 = reshape(shape = var_1318, x = key_23_cast_fp16)[name = tensor<string, []>("op_1319_cast_fp16")];
            tensor<bool, []> mh_w_35_transpose_x_0 = const()[name = tensor<string, []>("mh_w_35_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_35_transpose_y_0 = const()[name = tensor<string, []>("mh_w_35_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 1500]> mh_w_35_cast_fp16 = matmul(transpose_x = mh_w_35_transpose_x_0, transpose_y = mh_w_35_transpose_y_0, x = var_1317_cast_fp16, y = var_1319_cast_fp16)[name = tensor<string, []>("mh_w_35_cast_fp16")];
            tensor<fp16, [1, 12, 1, 1500]> obj_83_cast_fp16 = softmax(axis = var_1166, x = mh_w_35_cast_fp16)[name = tensor<string, []>("obj_83_cast_fp16")];
            tensor<int32, [4]> var_1323 = const()[name = tensor<string, []>("op_1323"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_1324_cast_fp16 = reshape(shape = var_1323, x = value_23_cast_fp16)[name = tensor<string, []>("op_1324_cast_fp16")];
            tensor<bool, []> attn_23_transpose_x_0 = const()[name = tensor<string, []>("attn_23_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_23_transpose_y_0 = const()[name = tensor<string, []>("attn_23_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_23_cast_fp16 = matmul(transpose_x = attn_23_transpose_x_0, transpose_y = attn_23_transpose_y_0, x = var_1324_cast_fp16, y = obj_83_cast_fp16)[name = tensor<string, []>("attn_23_cast_fp16")];
            tensor<int32, [4]> var_1327 = const()[name = tensor<string, []>("op_1327"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_53_cast_fp16 = reshape(shape = var_1327, x = attn_23_cast_fp16)[name = tensor<string, []>("input_53_cast_fp16")];
            tensor<int32, [2]> var_1331 = const()[name = tensor<string, []>("op_1331"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1333 = const()[name = tensor<string, []>("op_1333"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_81_pad_type_0 = const()[name = tensor<string, []>("obj_81_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_81_pad_0 = const()[name = tensor<string, []>("obj_81_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_5_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(183138624)))];
            tensor<fp16, [768]> layers_5_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_5_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(184318336)))];
            tensor<fp16, [1, 768, 1, 1]> obj_81_cast_fp16 = conv(bias = layers_5_encoder_attn_o_proj_bias_to_fp16, dilations = var_1333, groups = var_1173, pad = obj_81_pad_0, pad_type = obj_81_pad_type_0, strides = var_1331, weight = layers_5_encoder_attn_o_proj_weight_to_fp16, x = input_53_cast_fp16)[name = tensor<string, []>("obj_81_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_35_cast_fp16 = add(x = inputs_33_cast_fp16, y = obj_81_cast_fp16)[name = tensor<string, []>("inputs_35_cast_fp16")];
            tensor<int32, [1]> var_1342 = const()[name = tensor<string, []>("op_1342"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_35_cast_fp16 = reduce_mean(axes = var_1342, keep_dims = var_1174, x = inputs_35_cast_fp16)[name = tensor<string, []>("channels_mean_35_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_35_cast_fp16 = sub(x = inputs_35_cast_fp16, y = channels_mean_35_cast_fp16)[name = tensor<string, []>("zero_mean_35_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_35_cast_fp16 = mul(x = zero_mean_35_cast_fp16, y = zero_mean_35_cast_fp16)[name = tensor<string, []>("zero_mean_sq_35_cast_fp16")];
            tensor<int32, [1]> var_1346 = const()[name = tensor<string, []>("op_1346"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1347_cast_fp16 = reduce_mean(axes = var_1346, keep_dims = var_1174, x = zero_mean_sq_35_cast_fp16)[name = tensor<string, []>("op_1347_cast_fp16")];
            tensor<fp16, []> var_1348_to_fp16 = const()[name = tensor<string, []>("op_1348_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1349_cast_fp16 = add(x = var_1347_cast_fp16, y = var_1348_to_fp16)[name = tensor<string, []>("op_1349_cast_fp16")];
            tensor<fp16, []> denom_35_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_35_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_35_cast_fp16 = rsqrt(epsilon = denom_35_epsilon_0_to_fp16, x = var_1349_cast_fp16)[name = tensor<string, []>("denom_35_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_35_cast_fp16 = mul(x = zero_mean_35_cast_fp16, y = denom_35_cast_fp16)[name = tensor<string, []>("out_35_cast_fp16")];
            tensor<fp16, [768]> input_55_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_55_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(184319936)))];
            tensor<fp16, [768]> input_55_beta_0_to_fp16 = const()[name = tensor<string, []>("input_55_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(184321536)))];
            tensor<fp16, []> input_55_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_55_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> input_55_cast_fp16 = batch_norm(beta = input_55_beta_0_to_fp16, epsilon = input_55_epsilon_0_to_fp16, gamma = input_55_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_35_cast_fp16)[name = tensor<string, []>("input_55_cast_fp16")];
            tensor<int32, [2]> var_1360 = const()[name = tensor<string, []>("op_1360"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1362 = const()[name = tensor<string, []>("op_1362"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_57_pad_type_0 = const()[name = tensor<string, []>("input_57_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_57_pad_0 = const()[name = tensor<string, []>("input_57_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [3072, 768, 1, 1]> layers_5_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_fc1_weight_to_fp16"), val = tensor<fp16, [3072, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(184323136)))];
            tensor<fp16, [3072]> layers_5_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_5_fc1_bias_to_fp16"), val = tensor<fp16, [3072]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(189041792)))];
            tensor<fp16, [1, 3072, 1, 1]> input_57_cast_fp16 = conv(bias = layers_5_fc1_bias_to_fp16, dilations = var_1362, groups = var_1173, pad = input_57_pad_0, pad_type = input_57_pad_type_0, strides = var_1360, weight = layers_5_fc1_weight_to_fp16, x = input_55_cast_fp16)[name = tensor<string, []>("input_57_cast_fp16")];
            tensor<string, []> input_59_mode_0 = const()[name = tensor<string, []>("input_59_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 3072, 1, 1]> input_59_cast_fp16 = gelu(mode = input_59_mode_0, x = input_57_cast_fp16)[name = tensor<string, []>("input_59_cast_fp16")];
            tensor<int32, [2]> var_1368 = const()[name = tensor<string, []>("op_1368"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1370 = const()[name = tensor<string, []>("op_1370"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_13_pad_type_0 = const()[name = tensor<string, []>("hidden_states_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_13_pad_0 = const()[name = tensor<string, []>("hidden_states_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 3072, 1, 1]> layers_5_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_fc2_weight_to_fp16"), val = tensor<fp16, [768, 3072, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(189048000)))];
            tensor<fp16, [768]> layers_5_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_5_fc2_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(193766656)))];
            tensor<fp16, [1, 768, 1, 1]> hidden_states_13_cast_fp16 = conv(bias = layers_5_fc2_bias_to_fp16, dilations = var_1370, groups = var_1173, pad = hidden_states_13_pad_0, pad_type = hidden_states_13_pad_type_0, strides = var_1368, weight = layers_5_fc2_weight_to_fp16, x = input_59_cast_fp16)[name = tensor<string, []>("hidden_states_13_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_37_cast_fp16 = add(x = inputs_35_cast_fp16, y = hidden_states_13_cast_fp16)[name = tensor<string, []>("inputs_37_cast_fp16")];
            tensor<int32, []> var_1384 = const()[name = tensor<string, []>("op_1384"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_1391 = const()[name = tensor<string, []>("op_1391"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_1392 = const()[name = tensor<string, []>("op_1392"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_1404 = const()[name = tensor<string, []>("op_1404"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_37_cast_fp16 = reduce_mean(axes = var_1404, keep_dims = var_1392, x = inputs_37_cast_fp16)[name = tensor<string, []>("channels_mean_37_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_37_cast_fp16 = sub(x = inputs_37_cast_fp16, y = channels_mean_37_cast_fp16)[name = tensor<string, []>("zero_mean_37_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_37_cast_fp16 = mul(x = zero_mean_37_cast_fp16, y = zero_mean_37_cast_fp16)[name = tensor<string, []>("zero_mean_sq_37_cast_fp16")];
            tensor<int32, [1]> var_1408 = const()[name = tensor<string, []>("op_1408"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1409_cast_fp16 = reduce_mean(axes = var_1408, keep_dims = var_1392, x = zero_mean_sq_37_cast_fp16)[name = tensor<string, []>("op_1409_cast_fp16")];
            tensor<fp16, []> var_1410_to_fp16 = const()[name = tensor<string, []>("op_1410_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1411_cast_fp16 = add(x = var_1409_cast_fp16, y = var_1410_to_fp16)[name = tensor<string, []>("op_1411_cast_fp16")];
            tensor<fp16, []> denom_37_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_37_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_37_cast_fp16 = rsqrt(epsilon = denom_37_epsilon_0_to_fp16, x = var_1411_cast_fp16)[name = tensor<string, []>("denom_37_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_37_cast_fp16 = mul(x = zero_mean_37_cast_fp16, y = denom_37_cast_fp16)[name = tensor<string, []>("out_37_cast_fp16")];
            tensor<fp16, [768]> obj_85_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_85_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(193768256)))];
            tensor<fp16, [768]> obj_85_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_85_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(193769856)))];
            tensor<fp16, []> obj_85_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_85_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_85_cast_fp16 = batch_norm(beta = obj_85_beta_0_to_fp16, epsilon = obj_85_epsilon_0_to_fp16, gamma = obj_85_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_37_cast_fp16)[name = tensor<string, []>("obj_85_cast_fp16")];
            tensor<int32, [2]> var_1426 = const()[name = tensor<string, []>("op_1426"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1428 = const()[name = tensor<string, []>("op_1428"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_25_pad_type_0 = const()[name = tensor<string, []>("query_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_25_pad_0 = const()[name = tensor<string, []>("query_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_6_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_6_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(193771456)))];
            tensor<fp16, [768]> layers_6_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_6_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(194951168)))];
            tensor<fp16, [1, 768, 1, 1]> query_25_cast_fp16 = conv(bias = layers_6_self_attn_q_proj_bias_to_fp16, dilations = var_1428, groups = var_1391, pad = query_25_pad_0, pad_type = query_25_pad_type_0, strides = var_1426, weight = layers_6_self_attn_q_proj_weight_to_fp16, x = obj_85_cast_fp16)[name = tensor<string, []>("query_25_cast_fp16")];
            tensor<int32, [2]> var_1432 = const()[name = tensor<string, []>("op_1432"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1434 = const()[name = tensor<string, []>("op_1434"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_13_pad_type_0 = const()[name = tensor<string, []>("current_key_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_13_pad_0 = const()[name = tensor<string, []>("current_key_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_6_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_6_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(194952768)))];
            tensor<fp16, [1, 768, 1, 1]> current_key_13_cast_fp16 = conv(dilations = var_1434, groups = var_1391, pad = current_key_13_pad_0, pad_type = current_key_13_pad_type_0, strides = var_1432, weight = layers_6_self_attn_k_proj_weight_to_fp16, x = obj_85_cast_fp16)[name = tensor<string, []>("current_key_13_cast_fp16")];
            tensor<int32, [2]> var_1439 = const()[name = tensor<string, []>("op_1439"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1441 = const()[name = tensor<string, []>("op_1441"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_13_pad_type_0 = const()[name = tensor<string, []>("current_value_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_13_pad_0 = const()[name = tensor<string, []>("current_value_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_6_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_6_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(196132480)))];
            tensor<fp16, [768]> layers_6_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_6_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(197312192)))];
            tensor<fp16, [1, 768, 1, 1]> current_value_13_cast_fp16 = conv(bias = layers_6_self_attn_v_proj_bias_to_fp16, dilations = var_1441, groups = var_1391, pad = current_value_13_pad_0, pad_type = current_value_13_pad_type_0, strides = var_1439, weight = layers_6_self_attn_v_proj_weight_to_fp16, x = obj_85_cast_fp16)[name = tensor<string, []>("current_value_13_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1448_cast_fp16 = mul(x = current_key_13_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_1448_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1450_cast_fp16 = mul(x = var_63_cast_fp16_6, y = var_161_cast_fp16)[name = tensor<string, []>("op_1450_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> key_25_cast_fp16 = add(x = var_1448_cast_fp16, y = var_1450_cast_fp16)[name = tensor<string, []>("key_25_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1452_cast_fp16 = mul(x = current_value_13_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_1452_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1454_cast_fp16 = mul(x = var_78_cast_fp16_6, y = var_161_cast_fp16)[name = tensor<string, []>("op_1454_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> value_25_cast_fp16 = add(x = var_1452_cast_fp16, y = var_1454_cast_fp16)[name = tensor<string, []>("value_25_cast_fp16")];
            tensor<int32, [4]> var_1457 = const()[name = tensor<string, []>("op_1457"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_1458_cast_fp16 = reshape(shape = var_1457, x = query_25_cast_fp16)[name = tensor<string, []>("op_1458_cast_fp16")];
            tensor<fp16, []> var_1459_to_fp16 = const()[name = tensor<string, []>("op_1459_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_1460_cast_fp16 = mul(x = var_1458_cast_fp16, y = var_1459_to_fp16)[name = tensor<string, []>("op_1460_cast_fp16")];
            tensor<int32, [4]> var_1461 = const()[name = tensor<string, []>("op_1461"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_1462_cast_fp16 = reshape(shape = var_1461, x = key_25_cast_fp16)[name = tensor<string, []>("op_1462_cast_fp16")];
            tensor<bool, []> mh_w_37_transpose_x_0 = const()[name = tensor<string, []>("mh_w_37_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_37_transpose_y_0 = const()[name = tensor<string, []>("mh_w_37_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 224]> mh_w_37_cast_fp16 = matmul(transpose_x = mh_w_37_transpose_x_0, transpose_y = mh_w_37_transpose_y_0, x = var_1460_cast_fp16, y = var_1462_cast_fp16)[name = tensor<string, []>("mh_w_37_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> mh_w_39_cast_fp16 = add(x = mh_w_37_cast_fp16, y = var_179_cast_fp16)[name = tensor<string, []>("mh_w_39_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> var_1470_cast_fp16 = softmax(axis = var_1384, x = mh_w_39_cast_fp16)[name = tensor<string, []>("op_1470_cast_fp16")];
            tensor<int32, [4]> var_1471 = const()[name = tensor<string, []>("op_1471"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_1472_cast_fp16 = reshape(shape = var_1471, x = value_25_cast_fp16)[name = tensor<string, []>("op_1472_cast_fp16")];
            tensor<bool, []> attn_25_transpose_x_0 = const()[name = tensor<string, []>("attn_25_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_25_transpose_y_0 = const()[name = tensor<string, []>("attn_25_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_25_cast_fp16 = matmul(transpose_x = attn_25_transpose_x_0, transpose_y = attn_25_transpose_y_0, x = var_1472_cast_fp16, y = var_1470_cast_fp16)[name = tensor<string, []>("attn_25_cast_fp16")];
            tensor<int32, [4]> var_1475 = const()[name = tensor<string, []>("op_1475"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_61_cast_fp16 = reshape(shape = var_1475, x = attn_25_cast_fp16)[name = tensor<string, []>("input_61_cast_fp16")];
            tensor<int32, [2]> var_1479 = const()[name = tensor<string, []>("op_1479"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1481 = const()[name = tensor<string, []>("op_1481"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_91_pad_type_0 = const()[name = tensor<string, []>("obj_91_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_91_pad_0 = const()[name = tensor<string, []>("obj_91_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_6_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_6_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(197313792)))];
            tensor<fp16, [768]> layers_6_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_6_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(198493504)))];
            tensor<fp16, [1, 768, 1, 1]> obj_91_cast_fp16 = conv(bias = layers_6_self_attn_o_proj_bias_to_fp16, dilations = var_1481, groups = var_1391, pad = obj_91_pad_0, pad_type = obj_91_pad_type_0, strides = var_1479, weight = layers_6_self_attn_o_proj_weight_to_fp16, x = input_61_cast_fp16)[name = tensor<string, []>("obj_91_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_39_cast_fp16 = add(x = inputs_37_cast_fp16, y = obj_91_cast_fp16)[name = tensor<string, []>("inputs_39_cast_fp16")];
            tensor<int32, [1]> var_1491 = const()[name = tensor<string, []>("op_1491"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_39_cast_fp16 = reduce_mean(axes = var_1491, keep_dims = var_1392, x = inputs_39_cast_fp16)[name = tensor<string, []>("channels_mean_39_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_39_cast_fp16 = sub(x = inputs_39_cast_fp16, y = channels_mean_39_cast_fp16)[name = tensor<string, []>("zero_mean_39_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_39_cast_fp16 = mul(x = zero_mean_39_cast_fp16, y = zero_mean_39_cast_fp16)[name = tensor<string, []>("zero_mean_sq_39_cast_fp16")];
            tensor<int32, [1]> var_1495 = const()[name = tensor<string, []>("op_1495"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1496_cast_fp16 = reduce_mean(axes = var_1495, keep_dims = var_1392, x = zero_mean_sq_39_cast_fp16)[name = tensor<string, []>("op_1496_cast_fp16")];
            tensor<fp16, []> var_1497_to_fp16 = const()[name = tensor<string, []>("op_1497_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1498_cast_fp16 = add(x = var_1496_cast_fp16, y = var_1497_to_fp16)[name = tensor<string, []>("op_1498_cast_fp16")];
            tensor<fp16, []> denom_39_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_39_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_39_cast_fp16 = rsqrt(epsilon = denom_39_epsilon_0_to_fp16, x = var_1498_cast_fp16)[name = tensor<string, []>("denom_39_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_39_cast_fp16 = mul(x = zero_mean_39_cast_fp16, y = denom_39_cast_fp16)[name = tensor<string, []>("out_39_cast_fp16")];
            tensor<fp16, [768]> obj_93_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_93_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(198495104)))];
            tensor<fp16, [768]> obj_93_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_93_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(198496704)))];
            tensor<fp16, []> obj_93_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_93_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_93_cast_fp16 = batch_norm(beta = obj_93_beta_0_to_fp16, epsilon = obj_93_epsilon_0_to_fp16, gamma = obj_93_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_39_cast_fp16)[name = tensor<string, []>("obj_93_cast_fp16")];
            tensor<int32, [2]> var_1513 = const()[name = tensor<string, []>("op_1513"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1515 = const()[name = tensor<string, []>("op_1515"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_27_pad_type_0 = const()[name = tensor<string, []>("query_27_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_27_pad_0 = const()[name = tensor<string, []>("query_27_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_6_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_6_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(198498304)))];
            tensor<fp16, [768]> layers_6_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_6_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(199678016)))];
            tensor<fp16, [1, 768, 1, 1]> query_27_cast_fp16 = conv(bias = layers_6_encoder_attn_q_proj_bias_to_fp16, dilations = var_1515, groups = var_1391, pad = query_27_pad_0, pad_type = query_27_pad_type_0, strides = var_1513, weight = layers_6_encoder_attn_q_proj_weight_to_fp16, x = obj_93_cast_fp16)[name = tensor<string, []>("query_27_cast_fp16")];
            tensor<int32, [2]> var_1519 = const()[name = tensor<string, []>("op_1519"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1521 = const()[name = tensor<string, []>("op_1521"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_27_pad_type_0 = const()[name = tensor<string, []>("key_27_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_27_pad_0 = const()[name = tensor<string, []>("key_27_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_6_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_6_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(199679616)))];
            tensor<fp16, [1, 768, 1, 1500]> key_27_cast_fp16 = conv(dilations = var_1521, groups = var_1391, pad = key_27_pad_0, pad_type = key_27_pad_type_0, strides = var_1519, weight = layers_6_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_27_cast_fp16")];
            tensor<int32, [2]> var_1526 = const()[name = tensor<string, []>("op_1526"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1528 = const()[name = tensor<string, []>("op_1528"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_27_pad_type_0 = const()[name = tensor<string, []>("value_27_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_27_pad_0 = const()[name = tensor<string, []>("value_27_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_6_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_6_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(200859328)))];
            tensor<fp16, [768]> layers_6_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_6_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(202039040)))];
            tensor<fp16, [1, 768, 1, 1500]> value_27_cast_fp16 = conv(bias = layers_6_encoder_attn_v_proj_bias_to_fp16, dilations = var_1528, groups = var_1391, pad = value_27_pad_0, pad_type = value_27_pad_type_0, strides = var_1526, weight = layers_6_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_27_cast_fp16")];
            tensor<int32, [4]> var_1532 = const()[name = tensor<string, []>("op_1532"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_1533_cast_fp16 = reshape(shape = var_1532, x = query_27_cast_fp16)[name = tensor<string, []>("op_1533_cast_fp16")];
            tensor<fp16, []> var_1534_to_fp16 = const()[name = tensor<string, []>("op_1534_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_1535_cast_fp16 = mul(x = var_1533_cast_fp16, y = var_1534_to_fp16)[name = tensor<string, []>("op_1535_cast_fp16")];
            tensor<int32, [4]> var_1536 = const()[name = tensor<string, []>("op_1536"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_1537_cast_fp16 = reshape(shape = var_1536, x = key_27_cast_fp16)[name = tensor<string, []>("op_1537_cast_fp16")];
            tensor<bool, []> mh_w_41_transpose_x_0 = const()[name = tensor<string, []>("mh_w_41_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_41_transpose_y_0 = const()[name = tensor<string, []>("mh_w_41_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 1500]> mh_w_41_cast_fp16 = matmul(transpose_x = mh_w_41_transpose_x_0, transpose_y = mh_w_41_transpose_y_0, x = var_1535_cast_fp16, y = var_1537_cast_fp16)[name = tensor<string, []>("mh_w_41_cast_fp16")];
            tensor<fp16, [1, 12, 1, 1500]> obj_97_cast_fp16 = softmax(axis = var_1384, x = mh_w_41_cast_fp16)[name = tensor<string, []>("obj_97_cast_fp16")];
            tensor<int32, [4]> var_1541 = const()[name = tensor<string, []>("op_1541"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_1542_cast_fp16 = reshape(shape = var_1541, x = value_27_cast_fp16)[name = tensor<string, []>("op_1542_cast_fp16")];
            tensor<bool, []> attn_27_transpose_x_0 = const()[name = tensor<string, []>("attn_27_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_27_transpose_y_0 = const()[name = tensor<string, []>("attn_27_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_27_cast_fp16 = matmul(transpose_x = attn_27_transpose_x_0, transpose_y = attn_27_transpose_y_0, x = var_1542_cast_fp16, y = obj_97_cast_fp16)[name = tensor<string, []>("attn_27_cast_fp16")];
            tensor<int32, [4]> var_1545 = const()[name = tensor<string, []>("op_1545"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_63_cast_fp16 = reshape(shape = var_1545, x = attn_27_cast_fp16)[name = tensor<string, []>("input_63_cast_fp16")];
            tensor<int32, [2]> var_1549 = const()[name = tensor<string, []>("op_1549"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1551 = const()[name = tensor<string, []>("op_1551"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_95_pad_type_0 = const()[name = tensor<string, []>("obj_95_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_95_pad_0 = const()[name = tensor<string, []>("obj_95_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_6_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_6_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(202040640)))];
            tensor<fp16, [768]> layers_6_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_6_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(203220352)))];
            tensor<fp16, [1, 768, 1, 1]> obj_95_cast_fp16 = conv(bias = layers_6_encoder_attn_o_proj_bias_to_fp16, dilations = var_1551, groups = var_1391, pad = obj_95_pad_0, pad_type = obj_95_pad_type_0, strides = var_1549, weight = layers_6_encoder_attn_o_proj_weight_to_fp16, x = input_63_cast_fp16)[name = tensor<string, []>("obj_95_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_41_cast_fp16 = add(x = inputs_39_cast_fp16, y = obj_95_cast_fp16)[name = tensor<string, []>("inputs_41_cast_fp16")];
            tensor<int32, [1]> var_1557 = const()[name = tensor<string, []>("op_1557"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_41_cast_fp16 = reduce_mean(axes = var_1557, keep_dims = var_1392, x = inputs_41_cast_fp16)[name = tensor<string, []>("channels_mean_41_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_41_cast_fp16 = sub(x = inputs_41_cast_fp16, y = channels_mean_41_cast_fp16)[name = tensor<string, []>("zero_mean_41_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_41_cast_fp16 = mul(x = zero_mean_41_cast_fp16, y = zero_mean_41_cast_fp16)[name = tensor<string, []>("zero_mean_sq_41_cast_fp16")];
            tensor<int32, [1]> var_1561 = const()[name = tensor<string, []>("op_1561"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1562_cast_fp16 = reduce_mean(axes = var_1561, keep_dims = var_1392, x = zero_mean_sq_41_cast_fp16)[name = tensor<string, []>("op_1562_cast_fp16")];
            tensor<fp16, []> var_1563_to_fp16 = const()[name = tensor<string, []>("op_1563_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1564_cast_fp16 = add(x = var_1562_cast_fp16, y = var_1563_to_fp16)[name = tensor<string, []>("op_1564_cast_fp16")];
            tensor<fp16, []> denom_41_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_41_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_41_cast_fp16 = rsqrt(epsilon = denom_41_epsilon_0_to_fp16, x = var_1564_cast_fp16)[name = tensor<string, []>("denom_41_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_41_cast_fp16 = mul(x = zero_mean_41_cast_fp16, y = denom_41_cast_fp16)[name = tensor<string, []>("out_41_cast_fp16")];
            tensor<fp16, [768]> input_65_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_65_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(203221952)))];
            tensor<fp16, [768]> input_65_beta_0_to_fp16 = const()[name = tensor<string, []>("input_65_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(203223552)))];
            tensor<fp16, []> input_65_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_65_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> input_65_cast_fp16 = batch_norm(beta = input_65_beta_0_to_fp16, epsilon = input_65_epsilon_0_to_fp16, gamma = input_65_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_41_cast_fp16)[name = tensor<string, []>("input_65_cast_fp16")];
            tensor<int32, [2]> var_1575 = const()[name = tensor<string, []>("op_1575"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1577 = const()[name = tensor<string, []>("op_1577"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_67_pad_type_0 = const()[name = tensor<string, []>("input_67_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_67_pad_0 = const()[name = tensor<string, []>("input_67_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [3072, 768, 1, 1]> layers_6_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_6_fc1_weight_to_fp16"), val = tensor<fp16, [3072, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(203225152)))];
            tensor<fp16, [3072]> layers_6_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_6_fc1_bias_to_fp16"), val = tensor<fp16, [3072]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(207943808)))];
            tensor<fp16, [1, 3072, 1, 1]> input_67_cast_fp16 = conv(bias = layers_6_fc1_bias_to_fp16, dilations = var_1577, groups = var_1391, pad = input_67_pad_0, pad_type = input_67_pad_type_0, strides = var_1575, weight = layers_6_fc1_weight_to_fp16, x = input_65_cast_fp16)[name = tensor<string, []>("input_67_cast_fp16")];
            tensor<string, []> input_69_mode_0 = const()[name = tensor<string, []>("input_69_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 3072, 1, 1]> input_69_cast_fp16 = gelu(mode = input_69_mode_0, x = input_67_cast_fp16)[name = tensor<string, []>("input_69_cast_fp16")];
            tensor<int32, [2]> var_1583 = const()[name = tensor<string, []>("op_1583"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1585 = const()[name = tensor<string, []>("op_1585"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_15_pad_type_0 = const()[name = tensor<string, []>("hidden_states_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_15_pad_0 = const()[name = tensor<string, []>("hidden_states_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 3072, 1, 1]> layers_6_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_6_fc2_weight_to_fp16"), val = tensor<fp16, [768, 3072, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(207950016)))];
            tensor<fp16, [768]> layers_6_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_6_fc2_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(212668672)))];
            tensor<fp16, [1, 768, 1, 1]> hidden_states_15_cast_fp16 = conv(bias = layers_6_fc2_bias_to_fp16, dilations = var_1585, groups = var_1391, pad = hidden_states_15_pad_0, pad_type = hidden_states_15_pad_type_0, strides = var_1583, weight = layers_6_fc2_weight_to_fp16, x = input_69_cast_fp16)[name = tensor<string, []>("hidden_states_15_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_43_cast_fp16 = add(x = inputs_41_cast_fp16, y = hidden_states_15_cast_fp16)[name = tensor<string, []>("inputs_43_cast_fp16")];
            tensor<int32, []> var_1598 = const()[name = tensor<string, []>("op_1598"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_1605 = const()[name = tensor<string, []>("op_1605"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_1606 = const()[name = tensor<string, []>("op_1606"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_1618 = const()[name = tensor<string, []>("op_1618"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_43_cast_fp16 = reduce_mean(axes = var_1618, keep_dims = var_1606, x = inputs_43_cast_fp16)[name = tensor<string, []>("channels_mean_43_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_43_cast_fp16 = sub(x = inputs_43_cast_fp16, y = channels_mean_43_cast_fp16)[name = tensor<string, []>("zero_mean_43_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_43_cast_fp16 = mul(x = zero_mean_43_cast_fp16, y = zero_mean_43_cast_fp16)[name = tensor<string, []>("zero_mean_sq_43_cast_fp16")];
            tensor<int32, [1]> var_1622 = const()[name = tensor<string, []>("op_1622"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1623_cast_fp16 = reduce_mean(axes = var_1622, keep_dims = var_1606, x = zero_mean_sq_43_cast_fp16)[name = tensor<string, []>("op_1623_cast_fp16")];
            tensor<fp16, []> var_1624_to_fp16 = const()[name = tensor<string, []>("op_1624_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1625_cast_fp16 = add(x = var_1623_cast_fp16, y = var_1624_to_fp16)[name = tensor<string, []>("op_1625_cast_fp16")];
            tensor<fp16, []> denom_43_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_43_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_43_cast_fp16 = rsqrt(epsilon = denom_43_epsilon_0_to_fp16, x = var_1625_cast_fp16)[name = tensor<string, []>("denom_43_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_43_cast_fp16 = mul(x = zero_mean_43_cast_fp16, y = denom_43_cast_fp16)[name = tensor<string, []>("out_43_cast_fp16")];
            tensor<fp16, [768]> obj_99_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_99_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(212670272)))];
            tensor<fp16, [768]> obj_99_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_99_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(212671872)))];
            tensor<fp16, []> obj_99_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_99_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_99_cast_fp16 = batch_norm(beta = obj_99_beta_0_to_fp16, epsilon = obj_99_epsilon_0_to_fp16, gamma = obj_99_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_43_cast_fp16)[name = tensor<string, []>("obj_99_cast_fp16")];
            tensor<int32, [2]> var_1640 = const()[name = tensor<string, []>("op_1640"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1642 = const()[name = tensor<string, []>("op_1642"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_29_pad_type_0 = const()[name = tensor<string, []>("query_29_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_29_pad_0 = const()[name = tensor<string, []>("query_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_7_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_7_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(212673472)))];
            tensor<fp16, [768]> layers_7_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_7_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(213853184)))];
            tensor<fp16, [1, 768, 1, 1]> query_29_cast_fp16 = conv(bias = layers_7_self_attn_q_proj_bias_to_fp16, dilations = var_1642, groups = var_1605, pad = query_29_pad_0, pad_type = query_29_pad_type_0, strides = var_1640, weight = layers_7_self_attn_q_proj_weight_to_fp16, x = obj_99_cast_fp16)[name = tensor<string, []>("query_29_cast_fp16")];
            tensor<int32, [2]> var_1646 = const()[name = tensor<string, []>("op_1646"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1648 = const()[name = tensor<string, []>("op_1648"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_15_pad_type_0 = const()[name = tensor<string, []>("current_key_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_15_pad_0 = const()[name = tensor<string, []>("current_key_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_7_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_7_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(213854784)))];
            tensor<fp16, [1, 768, 1, 1]> current_key_15_cast_fp16 = conv(dilations = var_1648, groups = var_1605, pad = current_key_15_pad_0, pad_type = current_key_15_pad_type_0, strides = var_1646, weight = layers_7_self_attn_k_proj_weight_to_fp16, x = obj_99_cast_fp16)[name = tensor<string, []>("current_key_15_cast_fp16")];
            tensor<int32, [2]> var_1653 = const()[name = tensor<string, []>("op_1653"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1655 = const()[name = tensor<string, []>("op_1655"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_15_pad_type_0 = const()[name = tensor<string, []>("current_value_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_15_pad_0 = const()[name = tensor<string, []>("current_value_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_7_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_7_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(215034496)))];
            tensor<fp16, [768]> layers_7_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_7_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(216214208)))];
            tensor<fp16, [1, 768, 1, 1]> current_value_15_cast_fp16 = conv(bias = layers_7_self_attn_v_proj_bias_to_fp16, dilations = var_1655, groups = var_1605, pad = current_value_15_pad_0, pad_type = current_value_15_pad_type_0, strides = var_1653, weight = layers_7_self_attn_v_proj_weight_to_fp16, x = obj_99_cast_fp16)[name = tensor<string, []>("current_value_15_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1662_cast_fp16 = mul(x = current_key_15_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_1662_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1664_cast_fp16 = mul(x = var_63_cast_fp16_7, y = var_161_cast_fp16)[name = tensor<string, []>("op_1664_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> key_29_cast_fp16 = add(x = var_1662_cast_fp16, y = var_1664_cast_fp16)[name = tensor<string, []>("key_29_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1666_cast_fp16 = mul(x = current_value_15_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_1666_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1668_cast_fp16 = mul(x = var_78_cast_fp16_7, y = var_161_cast_fp16)[name = tensor<string, []>("op_1668_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> value_29_cast_fp16 = add(x = var_1666_cast_fp16, y = var_1668_cast_fp16)[name = tensor<string, []>("value_29_cast_fp16")];
            tensor<int32, [4]> var_1671 = const()[name = tensor<string, []>("op_1671"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_1672_cast_fp16 = reshape(shape = var_1671, x = query_29_cast_fp16)[name = tensor<string, []>("op_1672_cast_fp16")];
            tensor<fp16, []> var_1673_to_fp16 = const()[name = tensor<string, []>("op_1673_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_1674_cast_fp16 = mul(x = var_1672_cast_fp16, y = var_1673_to_fp16)[name = tensor<string, []>("op_1674_cast_fp16")];
            tensor<int32, [4]> var_1675 = const()[name = tensor<string, []>("op_1675"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_1676_cast_fp16 = reshape(shape = var_1675, x = key_29_cast_fp16)[name = tensor<string, []>("op_1676_cast_fp16")];
            tensor<bool, []> mh_w_43_transpose_x_0 = const()[name = tensor<string, []>("mh_w_43_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_43_transpose_y_0 = const()[name = tensor<string, []>("mh_w_43_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 224]> mh_w_43_cast_fp16 = matmul(transpose_x = mh_w_43_transpose_x_0, transpose_y = mh_w_43_transpose_y_0, x = var_1674_cast_fp16, y = var_1676_cast_fp16)[name = tensor<string, []>("mh_w_43_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> mh_w_45_cast_fp16 = add(x = mh_w_43_cast_fp16, y = var_179_cast_fp16)[name = tensor<string, []>("mh_w_45_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> var_1684_cast_fp16 = softmax(axis = var_1598, x = mh_w_45_cast_fp16)[name = tensor<string, []>("op_1684_cast_fp16")];
            tensor<int32, [4]> var_1685 = const()[name = tensor<string, []>("op_1685"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_1686_cast_fp16 = reshape(shape = var_1685, x = value_29_cast_fp16)[name = tensor<string, []>("op_1686_cast_fp16")];
            tensor<bool, []> attn_29_transpose_x_0 = const()[name = tensor<string, []>("attn_29_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_29_transpose_y_0 = const()[name = tensor<string, []>("attn_29_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_29_cast_fp16 = matmul(transpose_x = attn_29_transpose_x_0, transpose_y = attn_29_transpose_y_0, x = var_1686_cast_fp16, y = var_1684_cast_fp16)[name = tensor<string, []>("attn_29_cast_fp16")];
            tensor<int32, [4]> var_1689 = const()[name = tensor<string, []>("op_1689"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_71_cast_fp16 = reshape(shape = var_1689, x = attn_29_cast_fp16)[name = tensor<string, []>("input_71_cast_fp16")];
            tensor<int32, [2]> var_1693 = const()[name = tensor<string, []>("op_1693"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1695 = const()[name = tensor<string, []>("op_1695"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_105_pad_type_0 = const()[name = tensor<string, []>("obj_105_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_105_pad_0 = const()[name = tensor<string, []>("obj_105_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_7_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_7_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(216215808)))];
            tensor<fp16, [768]> layers_7_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_7_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(217395520)))];
            tensor<fp16, [1, 768, 1, 1]> obj_105_cast_fp16 = conv(bias = layers_7_self_attn_o_proj_bias_to_fp16, dilations = var_1695, groups = var_1605, pad = obj_105_pad_0, pad_type = obj_105_pad_type_0, strides = var_1693, weight = layers_7_self_attn_o_proj_weight_to_fp16, x = input_71_cast_fp16)[name = tensor<string, []>("obj_105_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_45_cast_fp16 = add(x = inputs_43_cast_fp16, y = obj_105_cast_fp16)[name = tensor<string, []>("inputs_45_cast_fp16")];
            tensor<int32, [1]> var_1705 = const()[name = tensor<string, []>("op_1705"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_45_cast_fp16 = reduce_mean(axes = var_1705, keep_dims = var_1606, x = inputs_45_cast_fp16)[name = tensor<string, []>("channels_mean_45_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_45_cast_fp16 = sub(x = inputs_45_cast_fp16, y = channels_mean_45_cast_fp16)[name = tensor<string, []>("zero_mean_45_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_45_cast_fp16 = mul(x = zero_mean_45_cast_fp16, y = zero_mean_45_cast_fp16)[name = tensor<string, []>("zero_mean_sq_45_cast_fp16")];
            tensor<int32, [1]> var_1709 = const()[name = tensor<string, []>("op_1709"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1710_cast_fp16 = reduce_mean(axes = var_1709, keep_dims = var_1606, x = zero_mean_sq_45_cast_fp16)[name = tensor<string, []>("op_1710_cast_fp16")];
            tensor<fp16, []> var_1711_to_fp16 = const()[name = tensor<string, []>("op_1711_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1712_cast_fp16 = add(x = var_1710_cast_fp16, y = var_1711_to_fp16)[name = tensor<string, []>("op_1712_cast_fp16")];
            tensor<fp16, []> denom_45_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_45_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_45_cast_fp16 = rsqrt(epsilon = denom_45_epsilon_0_to_fp16, x = var_1712_cast_fp16)[name = tensor<string, []>("denom_45_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_45_cast_fp16 = mul(x = zero_mean_45_cast_fp16, y = denom_45_cast_fp16)[name = tensor<string, []>("out_45_cast_fp16")];
            tensor<fp16, [768]> obj_107_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_107_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(217397120)))];
            tensor<fp16, [768]> obj_107_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_107_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(217398720)))];
            tensor<fp16, []> obj_107_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_107_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_107_cast_fp16 = batch_norm(beta = obj_107_beta_0_to_fp16, epsilon = obj_107_epsilon_0_to_fp16, gamma = obj_107_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_45_cast_fp16)[name = tensor<string, []>("obj_107_cast_fp16")];
            tensor<int32, [2]> var_1727 = const()[name = tensor<string, []>("op_1727"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1729 = const()[name = tensor<string, []>("op_1729"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_31_pad_type_0 = const()[name = tensor<string, []>("query_31_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_31_pad_0 = const()[name = tensor<string, []>("query_31_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_7_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_7_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(217400320)))];
            tensor<fp16, [768]> layers_7_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_7_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(218580032)))];
            tensor<fp16, [1, 768, 1, 1]> query_31_cast_fp16 = conv(bias = layers_7_encoder_attn_q_proj_bias_to_fp16, dilations = var_1729, groups = var_1605, pad = query_31_pad_0, pad_type = query_31_pad_type_0, strides = var_1727, weight = layers_7_encoder_attn_q_proj_weight_to_fp16, x = obj_107_cast_fp16)[name = tensor<string, []>("query_31_cast_fp16")];
            tensor<int32, [2]> var_1733 = const()[name = tensor<string, []>("op_1733"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1735 = const()[name = tensor<string, []>("op_1735"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_31_pad_type_0 = const()[name = tensor<string, []>("key_31_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_31_pad_0 = const()[name = tensor<string, []>("key_31_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_7_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_7_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(218581632)))];
            tensor<fp16, [1, 768, 1, 1500]> key_31_cast_fp16 = conv(dilations = var_1735, groups = var_1605, pad = key_31_pad_0, pad_type = key_31_pad_type_0, strides = var_1733, weight = layers_7_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_31_cast_fp16")];
            tensor<int32, [2]> var_1740 = const()[name = tensor<string, []>("op_1740"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1742 = const()[name = tensor<string, []>("op_1742"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_31_pad_type_0 = const()[name = tensor<string, []>("value_31_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_31_pad_0 = const()[name = tensor<string, []>("value_31_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_7_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_7_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(219761344)))];
            tensor<fp16, [768]> layers_7_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_7_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(220941056)))];
            tensor<fp16, [1, 768, 1, 1500]> value_31_cast_fp16 = conv(bias = layers_7_encoder_attn_v_proj_bias_to_fp16, dilations = var_1742, groups = var_1605, pad = value_31_pad_0, pad_type = value_31_pad_type_0, strides = var_1740, weight = layers_7_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_31_cast_fp16")];
            tensor<int32, [4]> var_1746 = const()[name = tensor<string, []>("op_1746"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_1747_cast_fp16 = reshape(shape = var_1746, x = query_31_cast_fp16)[name = tensor<string, []>("op_1747_cast_fp16")];
            tensor<fp16, []> var_1748_to_fp16 = const()[name = tensor<string, []>("op_1748_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_1749_cast_fp16 = mul(x = var_1747_cast_fp16, y = var_1748_to_fp16)[name = tensor<string, []>("op_1749_cast_fp16")];
            tensor<int32, [4]> var_1750 = const()[name = tensor<string, []>("op_1750"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_1751_cast_fp16 = reshape(shape = var_1750, x = key_31_cast_fp16)[name = tensor<string, []>("op_1751_cast_fp16")];
            tensor<bool, []> mh_w_47_transpose_x_0 = const()[name = tensor<string, []>("mh_w_47_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_47_transpose_y_0 = const()[name = tensor<string, []>("mh_w_47_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 1500]> mh_w_47_cast_fp16 = matmul(transpose_x = mh_w_47_transpose_x_0, transpose_y = mh_w_47_transpose_y_0, x = var_1749_cast_fp16, y = var_1751_cast_fp16)[name = tensor<string, []>("mh_w_47_cast_fp16")];
            tensor<fp16, [1, 12, 1, 1500]> obj_111_cast_fp16 = softmax(axis = var_1598, x = mh_w_47_cast_fp16)[name = tensor<string, []>("obj_111_cast_fp16")];
            tensor<int32, [4]> var_1755 = const()[name = tensor<string, []>("op_1755"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_1756_cast_fp16 = reshape(shape = var_1755, x = value_31_cast_fp16)[name = tensor<string, []>("op_1756_cast_fp16")];
            tensor<bool, []> attn_31_transpose_x_0 = const()[name = tensor<string, []>("attn_31_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_31_transpose_y_0 = const()[name = tensor<string, []>("attn_31_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_31_cast_fp16 = matmul(transpose_x = attn_31_transpose_x_0, transpose_y = attn_31_transpose_y_0, x = var_1756_cast_fp16, y = obj_111_cast_fp16)[name = tensor<string, []>("attn_31_cast_fp16")];
            tensor<int32, [4]> var_1759 = const()[name = tensor<string, []>("op_1759"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_73_cast_fp16 = reshape(shape = var_1759, x = attn_31_cast_fp16)[name = tensor<string, []>("input_73_cast_fp16")];
            tensor<int32, [2]> var_1763 = const()[name = tensor<string, []>("op_1763"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1765 = const()[name = tensor<string, []>("op_1765"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_109_pad_type_0 = const()[name = tensor<string, []>("obj_109_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_109_pad_0 = const()[name = tensor<string, []>("obj_109_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_7_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_7_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(220942656)))];
            tensor<fp16, [768]> layers_7_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_7_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(222122368)))];
            tensor<fp16, [1, 768, 1, 1]> obj_109_cast_fp16 = conv(bias = layers_7_encoder_attn_o_proj_bias_to_fp16, dilations = var_1765, groups = var_1605, pad = obj_109_pad_0, pad_type = obj_109_pad_type_0, strides = var_1763, weight = layers_7_encoder_attn_o_proj_weight_to_fp16, x = input_73_cast_fp16)[name = tensor<string, []>("obj_109_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_47_cast_fp16 = add(x = inputs_45_cast_fp16, y = obj_109_cast_fp16)[name = tensor<string, []>("inputs_47_cast_fp16")];
            tensor<int32, [1]> var_1771 = const()[name = tensor<string, []>("op_1771"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_47_cast_fp16 = reduce_mean(axes = var_1771, keep_dims = var_1606, x = inputs_47_cast_fp16)[name = tensor<string, []>("channels_mean_47_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_47_cast_fp16 = sub(x = inputs_47_cast_fp16, y = channels_mean_47_cast_fp16)[name = tensor<string, []>("zero_mean_47_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_47_cast_fp16 = mul(x = zero_mean_47_cast_fp16, y = zero_mean_47_cast_fp16)[name = tensor<string, []>("zero_mean_sq_47_cast_fp16")];
            tensor<int32, [1]> var_1775 = const()[name = tensor<string, []>("op_1775"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1776_cast_fp16 = reduce_mean(axes = var_1775, keep_dims = var_1606, x = zero_mean_sq_47_cast_fp16)[name = tensor<string, []>("op_1776_cast_fp16")];
            tensor<fp16, []> var_1777_to_fp16 = const()[name = tensor<string, []>("op_1777_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1778_cast_fp16 = add(x = var_1776_cast_fp16, y = var_1777_to_fp16)[name = tensor<string, []>("op_1778_cast_fp16")];
            tensor<fp16, []> denom_47_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_47_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_47_cast_fp16 = rsqrt(epsilon = denom_47_epsilon_0_to_fp16, x = var_1778_cast_fp16)[name = tensor<string, []>("denom_47_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_47_cast_fp16 = mul(x = zero_mean_47_cast_fp16, y = denom_47_cast_fp16)[name = tensor<string, []>("out_47_cast_fp16")];
            tensor<fp16, [768]> input_75_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_75_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(222123968)))];
            tensor<fp16, [768]> input_75_beta_0_to_fp16 = const()[name = tensor<string, []>("input_75_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(222125568)))];
            tensor<fp16, []> input_75_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_75_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> input_75_cast_fp16 = batch_norm(beta = input_75_beta_0_to_fp16, epsilon = input_75_epsilon_0_to_fp16, gamma = input_75_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_47_cast_fp16)[name = tensor<string, []>("input_75_cast_fp16")];
            tensor<int32, [2]> var_1789 = const()[name = tensor<string, []>("op_1789"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1791 = const()[name = tensor<string, []>("op_1791"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_77_pad_type_0 = const()[name = tensor<string, []>("input_77_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_77_pad_0 = const()[name = tensor<string, []>("input_77_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [3072, 768, 1, 1]> layers_7_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_7_fc1_weight_to_fp16"), val = tensor<fp16, [3072, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(222127168)))];
            tensor<fp16, [3072]> layers_7_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_7_fc1_bias_to_fp16"), val = tensor<fp16, [3072]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(226845824)))];
            tensor<fp16, [1, 3072, 1, 1]> input_77_cast_fp16 = conv(bias = layers_7_fc1_bias_to_fp16, dilations = var_1791, groups = var_1605, pad = input_77_pad_0, pad_type = input_77_pad_type_0, strides = var_1789, weight = layers_7_fc1_weight_to_fp16, x = input_75_cast_fp16)[name = tensor<string, []>("input_77_cast_fp16")];
            tensor<string, []> input_79_mode_0 = const()[name = tensor<string, []>("input_79_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 3072, 1, 1]> input_79_cast_fp16 = gelu(mode = input_79_mode_0, x = input_77_cast_fp16)[name = tensor<string, []>("input_79_cast_fp16")];
            tensor<int32, [2]> var_1797 = const()[name = tensor<string, []>("op_1797"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1799 = const()[name = tensor<string, []>("op_1799"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_17_pad_type_0 = const()[name = tensor<string, []>("hidden_states_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_17_pad_0 = const()[name = tensor<string, []>("hidden_states_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 3072, 1, 1]> layers_7_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_7_fc2_weight_to_fp16"), val = tensor<fp16, [768, 3072, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(226852032)))];
            tensor<fp16, [768]> layers_7_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_7_fc2_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(231570688)))];
            tensor<fp16, [1, 768, 1, 1]> hidden_states_17_cast_fp16 = conv(bias = layers_7_fc2_bias_to_fp16, dilations = var_1799, groups = var_1605, pad = hidden_states_17_pad_0, pad_type = hidden_states_17_pad_type_0, strides = var_1797, weight = layers_7_fc2_weight_to_fp16, x = input_79_cast_fp16)[name = tensor<string, []>("hidden_states_17_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_49_cast_fp16 = add(x = inputs_47_cast_fp16, y = hidden_states_17_cast_fp16)[name = tensor<string, []>("inputs_49_cast_fp16")];
            tensor<int32, []> var_1812 = const()[name = tensor<string, []>("op_1812"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_1819 = const()[name = tensor<string, []>("op_1819"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_1820 = const()[name = tensor<string, []>("op_1820"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_1832 = const()[name = tensor<string, []>("op_1832"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_49_cast_fp16 = reduce_mean(axes = var_1832, keep_dims = var_1820, x = inputs_49_cast_fp16)[name = tensor<string, []>("channels_mean_49_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_49_cast_fp16 = sub(x = inputs_49_cast_fp16, y = channels_mean_49_cast_fp16)[name = tensor<string, []>("zero_mean_49_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_49_cast_fp16 = mul(x = zero_mean_49_cast_fp16, y = zero_mean_49_cast_fp16)[name = tensor<string, []>("zero_mean_sq_49_cast_fp16")];
            tensor<int32, [1]> var_1836 = const()[name = tensor<string, []>("op_1836"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1837_cast_fp16 = reduce_mean(axes = var_1836, keep_dims = var_1820, x = zero_mean_sq_49_cast_fp16)[name = tensor<string, []>("op_1837_cast_fp16")];
            tensor<fp16, []> var_1838_to_fp16 = const()[name = tensor<string, []>("op_1838_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1839_cast_fp16 = add(x = var_1837_cast_fp16, y = var_1838_to_fp16)[name = tensor<string, []>("op_1839_cast_fp16")];
            tensor<fp16, []> denom_49_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_49_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_49_cast_fp16 = rsqrt(epsilon = denom_49_epsilon_0_to_fp16, x = var_1839_cast_fp16)[name = tensor<string, []>("denom_49_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_49_cast_fp16 = mul(x = zero_mean_49_cast_fp16, y = denom_49_cast_fp16)[name = tensor<string, []>("out_49_cast_fp16")];
            tensor<fp16, [768]> obj_113_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_113_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(231572288)))];
            tensor<fp16, [768]> obj_113_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_113_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(231573888)))];
            tensor<fp16, []> obj_113_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_113_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_113_cast_fp16 = batch_norm(beta = obj_113_beta_0_to_fp16, epsilon = obj_113_epsilon_0_to_fp16, gamma = obj_113_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_49_cast_fp16)[name = tensor<string, []>("obj_113_cast_fp16")];
            tensor<int32, [2]> var_1854 = const()[name = tensor<string, []>("op_1854"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1856 = const()[name = tensor<string, []>("op_1856"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_33_pad_type_0 = const()[name = tensor<string, []>("query_33_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_33_pad_0 = const()[name = tensor<string, []>("query_33_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_8_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_8_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(231575488)))];
            tensor<fp16, [768]> layers_8_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_8_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(232755200)))];
            tensor<fp16, [1, 768, 1, 1]> query_33_cast_fp16 = conv(bias = layers_8_self_attn_q_proj_bias_to_fp16, dilations = var_1856, groups = var_1819, pad = query_33_pad_0, pad_type = query_33_pad_type_0, strides = var_1854, weight = layers_8_self_attn_q_proj_weight_to_fp16, x = obj_113_cast_fp16)[name = tensor<string, []>("query_33_cast_fp16")];
            tensor<int32, [2]> var_1860 = const()[name = tensor<string, []>("op_1860"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1862 = const()[name = tensor<string, []>("op_1862"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_17_pad_type_0 = const()[name = tensor<string, []>("current_key_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_17_pad_0 = const()[name = tensor<string, []>("current_key_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_8_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_8_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(232756800)))];
            tensor<fp16, [1, 768, 1, 1]> current_key_17_cast_fp16 = conv(dilations = var_1862, groups = var_1819, pad = current_key_17_pad_0, pad_type = current_key_17_pad_type_0, strides = var_1860, weight = layers_8_self_attn_k_proj_weight_to_fp16, x = obj_113_cast_fp16)[name = tensor<string, []>("current_key_17_cast_fp16")];
            tensor<int32, [2]> var_1867 = const()[name = tensor<string, []>("op_1867"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1869 = const()[name = tensor<string, []>("op_1869"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_17_pad_type_0 = const()[name = tensor<string, []>("current_value_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_17_pad_0 = const()[name = tensor<string, []>("current_value_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_8_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_8_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(233936512)))];
            tensor<fp16, [768]> layers_8_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_8_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(235116224)))];
            tensor<fp16, [1, 768, 1, 1]> current_value_17_cast_fp16 = conv(bias = layers_8_self_attn_v_proj_bias_to_fp16, dilations = var_1869, groups = var_1819, pad = current_value_17_pad_0, pad_type = current_value_17_pad_type_0, strides = var_1867, weight = layers_8_self_attn_v_proj_weight_to_fp16, x = obj_113_cast_fp16)[name = tensor<string, []>("current_value_17_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1876_cast_fp16 = mul(x = current_key_17_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_1876_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1878_cast_fp16 = mul(x = var_63_cast_fp16_8, y = var_161_cast_fp16)[name = tensor<string, []>("op_1878_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> key_33_cast_fp16 = add(x = var_1876_cast_fp16, y = var_1878_cast_fp16)[name = tensor<string, []>("key_33_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1880_cast_fp16 = mul(x = current_value_17_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_1880_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1882_cast_fp16 = mul(x = var_78_cast_fp16_8, y = var_161_cast_fp16)[name = tensor<string, []>("op_1882_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> value_33_cast_fp16 = add(x = var_1880_cast_fp16, y = var_1882_cast_fp16)[name = tensor<string, []>("value_33_cast_fp16")];
            tensor<int32, [4]> var_1885 = const()[name = tensor<string, []>("op_1885"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_1886_cast_fp16 = reshape(shape = var_1885, x = query_33_cast_fp16)[name = tensor<string, []>("op_1886_cast_fp16")];
            tensor<fp16, []> var_1887_to_fp16 = const()[name = tensor<string, []>("op_1887_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_1888_cast_fp16 = mul(x = var_1886_cast_fp16, y = var_1887_to_fp16)[name = tensor<string, []>("op_1888_cast_fp16")];
            tensor<int32, [4]> var_1889 = const()[name = tensor<string, []>("op_1889"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_1890_cast_fp16 = reshape(shape = var_1889, x = key_33_cast_fp16)[name = tensor<string, []>("op_1890_cast_fp16")];
            tensor<bool, []> mh_w_49_transpose_x_0 = const()[name = tensor<string, []>("mh_w_49_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_49_transpose_y_0 = const()[name = tensor<string, []>("mh_w_49_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 224]> mh_w_49_cast_fp16 = matmul(transpose_x = mh_w_49_transpose_x_0, transpose_y = mh_w_49_transpose_y_0, x = var_1888_cast_fp16, y = var_1890_cast_fp16)[name = tensor<string, []>("mh_w_49_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> mh_w_51_cast_fp16 = add(x = mh_w_49_cast_fp16, y = var_179_cast_fp16)[name = tensor<string, []>("mh_w_51_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> var_1898_cast_fp16 = softmax(axis = var_1812, x = mh_w_51_cast_fp16)[name = tensor<string, []>("op_1898_cast_fp16")];
            tensor<int32, [4]> var_1899 = const()[name = tensor<string, []>("op_1899"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_1900_cast_fp16 = reshape(shape = var_1899, x = value_33_cast_fp16)[name = tensor<string, []>("op_1900_cast_fp16")];
            tensor<bool, []> attn_33_transpose_x_0 = const()[name = tensor<string, []>("attn_33_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_33_transpose_y_0 = const()[name = tensor<string, []>("attn_33_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_33_cast_fp16 = matmul(transpose_x = attn_33_transpose_x_0, transpose_y = attn_33_transpose_y_0, x = var_1900_cast_fp16, y = var_1898_cast_fp16)[name = tensor<string, []>("attn_33_cast_fp16")];
            tensor<int32, [4]> var_1903 = const()[name = tensor<string, []>("op_1903"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_81_cast_fp16 = reshape(shape = var_1903, x = attn_33_cast_fp16)[name = tensor<string, []>("input_81_cast_fp16")];
            tensor<int32, [2]> var_1907 = const()[name = tensor<string, []>("op_1907"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1909 = const()[name = tensor<string, []>("op_1909"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_119_pad_type_0 = const()[name = tensor<string, []>("obj_119_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_119_pad_0 = const()[name = tensor<string, []>("obj_119_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_8_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_8_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(235117824)))];
            tensor<fp16, [768]> layers_8_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_8_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(236297536)))];
            tensor<fp16, [1, 768, 1, 1]> obj_119_cast_fp16 = conv(bias = layers_8_self_attn_o_proj_bias_to_fp16, dilations = var_1909, groups = var_1819, pad = obj_119_pad_0, pad_type = obj_119_pad_type_0, strides = var_1907, weight = layers_8_self_attn_o_proj_weight_to_fp16, x = input_81_cast_fp16)[name = tensor<string, []>("obj_119_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_51_cast_fp16 = add(x = inputs_49_cast_fp16, y = obj_119_cast_fp16)[name = tensor<string, []>("inputs_51_cast_fp16")];
            tensor<int32, [1]> var_1919 = const()[name = tensor<string, []>("op_1919"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_51_cast_fp16 = reduce_mean(axes = var_1919, keep_dims = var_1820, x = inputs_51_cast_fp16)[name = tensor<string, []>("channels_mean_51_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_51_cast_fp16 = sub(x = inputs_51_cast_fp16, y = channels_mean_51_cast_fp16)[name = tensor<string, []>("zero_mean_51_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_51_cast_fp16 = mul(x = zero_mean_51_cast_fp16, y = zero_mean_51_cast_fp16)[name = tensor<string, []>("zero_mean_sq_51_cast_fp16")];
            tensor<int32, [1]> var_1923 = const()[name = tensor<string, []>("op_1923"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1924_cast_fp16 = reduce_mean(axes = var_1923, keep_dims = var_1820, x = zero_mean_sq_51_cast_fp16)[name = tensor<string, []>("op_1924_cast_fp16")];
            tensor<fp16, []> var_1925_to_fp16 = const()[name = tensor<string, []>("op_1925_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1926_cast_fp16 = add(x = var_1924_cast_fp16, y = var_1925_to_fp16)[name = tensor<string, []>("op_1926_cast_fp16")];
            tensor<fp16, []> denom_51_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_51_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_51_cast_fp16 = rsqrt(epsilon = denom_51_epsilon_0_to_fp16, x = var_1926_cast_fp16)[name = tensor<string, []>("denom_51_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_51_cast_fp16 = mul(x = zero_mean_51_cast_fp16, y = denom_51_cast_fp16)[name = tensor<string, []>("out_51_cast_fp16")];
            tensor<fp16, [768]> obj_121_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_121_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(236299136)))];
            tensor<fp16, [768]> obj_121_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_121_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(236300736)))];
            tensor<fp16, []> obj_121_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_121_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_121_cast_fp16 = batch_norm(beta = obj_121_beta_0_to_fp16, epsilon = obj_121_epsilon_0_to_fp16, gamma = obj_121_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_51_cast_fp16)[name = tensor<string, []>("obj_121_cast_fp16")];
            tensor<int32, [2]> var_1941 = const()[name = tensor<string, []>("op_1941"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1943 = const()[name = tensor<string, []>("op_1943"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_35_pad_type_0 = const()[name = tensor<string, []>("query_35_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_35_pad_0 = const()[name = tensor<string, []>("query_35_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_8_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_8_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(236302336)))];
            tensor<fp16, [768]> layers_8_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_8_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(237482048)))];
            tensor<fp16, [1, 768, 1, 1]> query_35_cast_fp16 = conv(bias = layers_8_encoder_attn_q_proj_bias_to_fp16, dilations = var_1943, groups = var_1819, pad = query_35_pad_0, pad_type = query_35_pad_type_0, strides = var_1941, weight = layers_8_encoder_attn_q_proj_weight_to_fp16, x = obj_121_cast_fp16)[name = tensor<string, []>("query_35_cast_fp16")];
            tensor<int32, [2]> var_1947 = const()[name = tensor<string, []>("op_1947"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1949 = const()[name = tensor<string, []>("op_1949"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_35_pad_type_0 = const()[name = tensor<string, []>("key_35_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_35_pad_0 = const()[name = tensor<string, []>("key_35_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_8_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_8_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(237483648)))];
            tensor<fp16, [1, 768, 1, 1500]> key_35_cast_fp16 = conv(dilations = var_1949, groups = var_1819, pad = key_35_pad_0, pad_type = key_35_pad_type_0, strides = var_1947, weight = layers_8_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_35_cast_fp16")];
            tensor<int32, [2]> var_1954 = const()[name = tensor<string, []>("op_1954"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1956 = const()[name = tensor<string, []>("op_1956"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_35_pad_type_0 = const()[name = tensor<string, []>("value_35_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_35_pad_0 = const()[name = tensor<string, []>("value_35_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_8_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_8_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(238663360)))];
            tensor<fp16, [768]> layers_8_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_8_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(239843072)))];
            tensor<fp16, [1, 768, 1, 1500]> value_35_cast_fp16 = conv(bias = layers_8_encoder_attn_v_proj_bias_to_fp16, dilations = var_1956, groups = var_1819, pad = value_35_pad_0, pad_type = value_35_pad_type_0, strides = var_1954, weight = layers_8_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_35_cast_fp16")];
            tensor<int32, [4]> var_1960 = const()[name = tensor<string, []>("op_1960"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_1961_cast_fp16 = reshape(shape = var_1960, x = query_35_cast_fp16)[name = tensor<string, []>("op_1961_cast_fp16")];
            tensor<fp16, []> var_1962_to_fp16 = const()[name = tensor<string, []>("op_1962_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_1963_cast_fp16 = mul(x = var_1961_cast_fp16, y = var_1962_to_fp16)[name = tensor<string, []>("op_1963_cast_fp16")];
            tensor<int32, [4]> var_1964 = const()[name = tensor<string, []>("op_1964"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_1965_cast_fp16 = reshape(shape = var_1964, x = key_35_cast_fp16)[name = tensor<string, []>("op_1965_cast_fp16")];
            tensor<bool, []> mh_w_53_transpose_x_0 = const()[name = tensor<string, []>("mh_w_53_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_53_transpose_y_0 = const()[name = tensor<string, []>("mh_w_53_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 1500]> mh_w_53_cast_fp16 = matmul(transpose_x = mh_w_53_transpose_x_0, transpose_y = mh_w_53_transpose_y_0, x = var_1963_cast_fp16, y = var_1965_cast_fp16)[name = tensor<string, []>("mh_w_53_cast_fp16")];
            tensor<fp16, [1, 12, 1, 1500]> obj_125_cast_fp16 = softmax(axis = var_1812, x = mh_w_53_cast_fp16)[name = tensor<string, []>("obj_125_cast_fp16")];
            tensor<int32, [4]> var_1969 = const()[name = tensor<string, []>("op_1969"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_1970_cast_fp16 = reshape(shape = var_1969, x = value_35_cast_fp16)[name = tensor<string, []>("op_1970_cast_fp16")];
            tensor<bool, []> attn_35_transpose_x_0 = const()[name = tensor<string, []>("attn_35_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_35_transpose_y_0 = const()[name = tensor<string, []>("attn_35_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_35_cast_fp16 = matmul(transpose_x = attn_35_transpose_x_0, transpose_y = attn_35_transpose_y_0, x = var_1970_cast_fp16, y = obj_125_cast_fp16)[name = tensor<string, []>("attn_35_cast_fp16")];
            tensor<int32, [4]> var_1973 = const()[name = tensor<string, []>("op_1973"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_83_cast_fp16 = reshape(shape = var_1973, x = attn_35_cast_fp16)[name = tensor<string, []>("input_83_cast_fp16")];
            tensor<int32, [2]> var_1977 = const()[name = tensor<string, []>("op_1977"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1979 = const()[name = tensor<string, []>("op_1979"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_123_pad_type_0 = const()[name = tensor<string, []>("obj_123_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_123_pad_0 = const()[name = tensor<string, []>("obj_123_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_8_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_8_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(239844672)))];
            tensor<fp16, [768]> layers_8_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_8_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(241024384)))];
            tensor<fp16, [1, 768, 1, 1]> obj_123_cast_fp16 = conv(bias = layers_8_encoder_attn_o_proj_bias_to_fp16, dilations = var_1979, groups = var_1819, pad = obj_123_pad_0, pad_type = obj_123_pad_type_0, strides = var_1977, weight = layers_8_encoder_attn_o_proj_weight_to_fp16, x = input_83_cast_fp16)[name = tensor<string, []>("obj_123_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_53_cast_fp16 = add(x = inputs_51_cast_fp16, y = obj_123_cast_fp16)[name = tensor<string, []>("inputs_53_cast_fp16")];
            tensor<int32, [1]> var_1988 = const()[name = tensor<string, []>("op_1988"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_53_cast_fp16 = reduce_mean(axes = var_1988, keep_dims = var_1820, x = inputs_53_cast_fp16)[name = tensor<string, []>("channels_mean_53_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_53_cast_fp16 = sub(x = inputs_53_cast_fp16, y = channels_mean_53_cast_fp16)[name = tensor<string, []>("zero_mean_53_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_53_cast_fp16 = mul(x = zero_mean_53_cast_fp16, y = zero_mean_53_cast_fp16)[name = tensor<string, []>("zero_mean_sq_53_cast_fp16")];
            tensor<int32, [1]> var_1992 = const()[name = tensor<string, []>("op_1992"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1993_cast_fp16 = reduce_mean(axes = var_1992, keep_dims = var_1820, x = zero_mean_sq_53_cast_fp16)[name = tensor<string, []>("op_1993_cast_fp16")];
            tensor<fp16, []> var_1994_to_fp16 = const()[name = tensor<string, []>("op_1994_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1995_cast_fp16 = add(x = var_1993_cast_fp16, y = var_1994_to_fp16)[name = tensor<string, []>("op_1995_cast_fp16")];
            tensor<fp16, []> denom_53_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_53_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_53_cast_fp16 = rsqrt(epsilon = denom_53_epsilon_0_to_fp16, x = var_1995_cast_fp16)[name = tensor<string, []>("denom_53_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_53_cast_fp16 = mul(x = zero_mean_53_cast_fp16, y = denom_53_cast_fp16)[name = tensor<string, []>("out_53_cast_fp16")];
            tensor<fp16, [768]> input_85_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_85_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(241025984)))];
            tensor<fp16, [768]> input_85_beta_0_to_fp16 = const()[name = tensor<string, []>("input_85_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(241027584)))];
            tensor<fp16, []> input_85_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_85_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> input_85_cast_fp16 = batch_norm(beta = input_85_beta_0_to_fp16, epsilon = input_85_epsilon_0_to_fp16, gamma = input_85_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_53_cast_fp16)[name = tensor<string, []>("input_85_cast_fp16")];
            tensor<int32, [2]> var_2006 = const()[name = tensor<string, []>("op_2006"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2008 = const()[name = tensor<string, []>("op_2008"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_87_pad_type_0 = const()[name = tensor<string, []>("input_87_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_87_pad_0 = const()[name = tensor<string, []>("input_87_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [3072, 768, 1, 1]> layers_8_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_8_fc1_weight_to_fp16"), val = tensor<fp16, [3072, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(241029184)))];
            tensor<fp16, [3072]> layers_8_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_8_fc1_bias_to_fp16"), val = tensor<fp16, [3072]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(245747840)))];
            tensor<fp16, [1, 3072, 1, 1]> input_87_cast_fp16 = conv(bias = layers_8_fc1_bias_to_fp16, dilations = var_2008, groups = var_1819, pad = input_87_pad_0, pad_type = input_87_pad_type_0, strides = var_2006, weight = layers_8_fc1_weight_to_fp16, x = input_85_cast_fp16)[name = tensor<string, []>("input_87_cast_fp16")];
            tensor<string, []> input_89_mode_0 = const()[name = tensor<string, []>("input_89_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 3072, 1, 1]> input_89_cast_fp16 = gelu(mode = input_89_mode_0, x = input_87_cast_fp16)[name = tensor<string, []>("input_89_cast_fp16")];
            tensor<int32, [2]> var_2014 = const()[name = tensor<string, []>("op_2014"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2016 = const()[name = tensor<string, []>("op_2016"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_19_pad_type_0 = const()[name = tensor<string, []>("hidden_states_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_19_pad_0 = const()[name = tensor<string, []>("hidden_states_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 3072, 1, 1]> layers_8_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_8_fc2_weight_to_fp16"), val = tensor<fp16, [768, 3072, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(245754048)))];
            tensor<fp16, [768]> layers_8_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_8_fc2_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(250472704)))];
            tensor<fp16, [1, 768, 1, 1]> hidden_states_19_cast_fp16 = conv(bias = layers_8_fc2_bias_to_fp16, dilations = var_2016, groups = var_1819, pad = hidden_states_19_pad_0, pad_type = hidden_states_19_pad_type_0, strides = var_2014, weight = layers_8_fc2_weight_to_fp16, x = input_89_cast_fp16)[name = tensor<string, []>("hidden_states_19_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_55_cast_fp16 = add(x = inputs_53_cast_fp16, y = hidden_states_19_cast_fp16)[name = tensor<string, []>("inputs_55_cast_fp16")];
            tensor<int32, []> var_2030 = const()[name = tensor<string, []>("op_2030"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_2037 = const()[name = tensor<string, []>("op_2037"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_2038 = const()[name = tensor<string, []>("op_2038"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_2050 = const()[name = tensor<string, []>("op_2050"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_55_cast_fp16 = reduce_mean(axes = var_2050, keep_dims = var_2038, x = inputs_55_cast_fp16)[name = tensor<string, []>("channels_mean_55_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_55_cast_fp16 = sub(x = inputs_55_cast_fp16, y = channels_mean_55_cast_fp16)[name = tensor<string, []>("zero_mean_55_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_55_cast_fp16 = mul(x = zero_mean_55_cast_fp16, y = zero_mean_55_cast_fp16)[name = tensor<string, []>("zero_mean_sq_55_cast_fp16")];
            tensor<int32, [1]> var_2054 = const()[name = tensor<string, []>("op_2054"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_2055_cast_fp16 = reduce_mean(axes = var_2054, keep_dims = var_2038, x = zero_mean_sq_55_cast_fp16)[name = tensor<string, []>("op_2055_cast_fp16")];
            tensor<fp16, []> var_2056_to_fp16 = const()[name = tensor<string, []>("op_2056_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_2057_cast_fp16 = add(x = var_2055_cast_fp16, y = var_2056_to_fp16)[name = tensor<string, []>("op_2057_cast_fp16")];
            tensor<fp16, []> denom_55_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_55_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_55_cast_fp16 = rsqrt(epsilon = denom_55_epsilon_0_to_fp16, x = var_2057_cast_fp16)[name = tensor<string, []>("denom_55_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_55_cast_fp16 = mul(x = zero_mean_55_cast_fp16, y = denom_55_cast_fp16)[name = tensor<string, []>("out_55_cast_fp16")];
            tensor<fp16, [768]> obj_127_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_127_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(250474304)))];
            tensor<fp16, [768]> obj_127_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_127_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(250475904)))];
            tensor<fp16, []> obj_127_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_127_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_127_cast_fp16 = batch_norm(beta = obj_127_beta_0_to_fp16, epsilon = obj_127_epsilon_0_to_fp16, gamma = obj_127_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_55_cast_fp16)[name = tensor<string, []>("obj_127_cast_fp16")];
            tensor<int32, [2]> var_2072 = const()[name = tensor<string, []>("op_2072"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2074 = const()[name = tensor<string, []>("op_2074"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_37_pad_type_0 = const()[name = tensor<string, []>("query_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_37_pad_0 = const()[name = tensor<string, []>("query_37_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_9_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_9_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(250477504)))];
            tensor<fp16, [768]> layers_9_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_9_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(251657216)))];
            tensor<fp16, [1, 768, 1, 1]> query_37_cast_fp16 = conv(bias = layers_9_self_attn_q_proj_bias_to_fp16, dilations = var_2074, groups = var_2037, pad = query_37_pad_0, pad_type = query_37_pad_type_0, strides = var_2072, weight = layers_9_self_attn_q_proj_weight_to_fp16, x = obj_127_cast_fp16)[name = tensor<string, []>("query_37_cast_fp16")];
            tensor<int32, [2]> var_2078 = const()[name = tensor<string, []>("op_2078"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2080 = const()[name = tensor<string, []>("op_2080"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_19_pad_type_0 = const()[name = tensor<string, []>("current_key_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_19_pad_0 = const()[name = tensor<string, []>("current_key_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_9_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_9_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(251658816)))];
            tensor<fp16, [1, 768, 1, 1]> current_key_19_cast_fp16 = conv(dilations = var_2080, groups = var_2037, pad = current_key_19_pad_0, pad_type = current_key_19_pad_type_0, strides = var_2078, weight = layers_9_self_attn_k_proj_weight_to_fp16, x = obj_127_cast_fp16)[name = tensor<string, []>("current_key_19_cast_fp16")];
            tensor<int32, [2]> var_2085 = const()[name = tensor<string, []>("op_2085"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2087 = const()[name = tensor<string, []>("op_2087"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_19_pad_type_0 = const()[name = tensor<string, []>("current_value_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_19_pad_0 = const()[name = tensor<string, []>("current_value_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_9_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_9_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(252838528)))];
            tensor<fp16, [768]> layers_9_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_9_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(254018240)))];
            tensor<fp16, [1, 768, 1, 1]> current_value_19_cast_fp16 = conv(bias = layers_9_self_attn_v_proj_bias_to_fp16, dilations = var_2087, groups = var_2037, pad = current_value_19_pad_0, pad_type = current_value_19_pad_type_0, strides = var_2085, weight = layers_9_self_attn_v_proj_weight_to_fp16, x = obj_127_cast_fp16)[name = tensor<string, []>("current_value_19_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_2094_cast_fp16 = mul(x = current_key_19_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_2094_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_2096_cast_fp16 = mul(x = var_63_cast_fp16_9, y = var_161_cast_fp16)[name = tensor<string, []>("op_2096_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> key_37_cast_fp16 = add(x = var_2094_cast_fp16, y = var_2096_cast_fp16)[name = tensor<string, []>("key_37_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_2098_cast_fp16 = mul(x = current_value_19_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_2098_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_2100_cast_fp16 = mul(x = var_78_cast_fp16_9, y = var_161_cast_fp16)[name = tensor<string, []>("op_2100_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> value_37_cast_fp16 = add(x = var_2098_cast_fp16, y = var_2100_cast_fp16)[name = tensor<string, []>("value_37_cast_fp16")];
            tensor<int32, [4]> var_2103 = const()[name = tensor<string, []>("op_2103"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_2104_cast_fp16 = reshape(shape = var_2103, x = query_37_cast_fp16)[name = tensor<string, []>("op_2104_cast_fp16")];
            tensor<fp16, []> var_2105_to_fp16 = const()[name = tensor<string, []>("op_2105_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_2106_cast_fp16 = mul(x = var_2104_cast_fp16, y = var_2105_to_fp16)[name = tensor<string, []>("op_2106_cast_fp16")];
            tensor<int32, [4]> var_2107 = const()[name = tensor<string, []>("op_2107"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_2108_cast_fp16 = reshape(shape = var_2107, x = key_37_cast_fp16)[name = tensor<string, []>("op_2108_cast_fp16")];
            tensor<bool, []> mh_w_55_transpose_x_0 = const()[name = tensor<string, []>("mh_w_55_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_55_transpose_y_0 = const()[name = tensor<string, []>("mh_w_55_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 224]> mh_w_55_cast_fp16 = matmul(transpose_x = mh_w_55_transpose_x_0, transpose_y = mh_w_55_transpose_y_0, x = var_2106_cast_fp16, y = var_2108_cast_fp16)[name = tensor<string, []>("mh_w_55_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> mh_w_57_cast_fp16 = add(x = mh_w_55_cast_fp16, y = var_179_cast_fp16)[name = tensor<string, []>("mh_w_57_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> var_2116_cast_fp16 = softmax(axis = var_2030, x = mh_w_57_cast_fp16)[name = tensor<string, []>("op_2116_cast_fp16")];
            tensor<int32, [4]> var_2117 = const()[name = tensor<string, []>("op_2117"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_2118_cast_fp16 = reshape(shape = var_2117, x = value_37_cast_fp16)[name = tensor<string, []>("op_2118_cast_fp16")];
            tensor<bool, []> attn_37_transpose_x_0 = const()[name = tensor<string, []>("attn_37_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_37_transpose_y_0 = const()[name = tensor<string, []>("attn_37_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_37_cast_fp16 = matmul(transpose_x = attn_37_transpose_x_0, transpose_y = attn_37_transpose_y_0, x = var_2118_cast_fp16, y = var_2116_cast_fp16)[name = tensor<string, []>("attn_37_cast_fp16")];
            tensor<int32, [4]> var_2121 = const()[name = tensor<string, []>("op_2121"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_91_cast_fp16 = reshape(shape = var_2121, x = attn_37_cast_fp16)[name = tensor<string, []>("input_91_cast_fp16")];
            tensor<int32, [2]> var_2125 = const()[name = tensor<string, []>("op_2125"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2127 = const()[name = tensor<string, []>("op_2127"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_133_pad_type_0 = const()[name = tensor<string, []>("obj_133_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_133_pad_0 = const()[name = tensor<string, []>("obj_133_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_9_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_9_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(254019840)))];
            tensor<fp16, [768]> layers_9_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_9_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(255199552)))];
            tensor<fp16, [1, 768, 1, 1]> obj_133_cast_fp16 = conv(bias = layers_9_self_attn_o_proj_bias_to_fp16, dilations = var_2127, groups = var_2037, pad = obj_133_pad_0, pad_type = obj_133_pad_type_0, strides = var_2125, weight = layers_9_self_attn_o_proj_weight_to_fp16, x = input_91_cast_fp16)[name = tensor<string, []>("obj_133_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_57_cast_fp16 = add(x = inputs_55_cast_fp16, y = obj_133_cast_fp16)[name = tensor<string, []>("inputs_57_cast_fp16")];
            tensor<int32, [1]> var_2137 = const()[name = tensor<string, []>("op_2137"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_57_cast_fp16 = reduce_mean(axes = var_2137, keep_dims = var_2038, x = inputs_57_cast_fp16)[name = tensor<string, []>("channels_mean_57_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_57_cast_fp16 = sub(x = inputs_57_cast_fp16, y = channels_mean_57_cast_fp16)[name = tensor<string, []>("zero_mean_57_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_57_cast_fp16 = mul(x = zero_mean_57_cast_fp16, y = zero_mean_57_cast_fp16)[name = tensor<string, []>("zero_mean_sq_57_cast_fp16")];
            tensor<int32, [1]> var_2141 = const()[name = tensor<string, []>("op_2141"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_2142_cast_fp16 = reduce_mean(axes = var_2141, keep_dims = var_2038, x = zero_mean_sq_57_cast_fp16)[name = tensor<string, []>("op_2142_cast_fp16")];
            tensor<fp16, []> var_2143_to_fp16 = const()[name = tensor<string, []>("op_2143_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_2144_cast_fp16 = add(x = var_2142_cast_fp16, y = var_2143_to_fp16)[name = tensor<string, []>("op_2144_cast_fp16")];
            tensor<fp16, []> denom_57_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_57_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_57_cast_fp16 = rsqrt(epsilon = denom_57_epsilon_0_to_fp16, x = var_2144_cast_fp16)[name = tensor<string, []>("denom_57_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_57_cast_fp16 = mul(x = zero_mean_57_cast_fp16, y = denom_57_cast_fp16)[name = tensor<string, []>("out_57_cast_fp16")];
            tensor<fp16, [768]> obj_135_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_135_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(255201152)))];
            tensor<fp16, [768]> obj_135_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_135_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(255202752)))];
            tensor<fp16, []> obj_135_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_135_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_135_cast_fp16 = batch_norm(beta = obj_135_beta_0_to_fp16, epsilon = obj_135_epsilon_0_to_fp16, gamma = obj_135_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_57_cast_fp16)[name = tensor<string, []>("obj_135_cast_fp16")];
            tensor<int32, [2]> var_2159 = const()[name = tensor<string, []>("op_2159"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2161 = const()[name = tensor<string, []>("op_2161"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_39_pad_type_0 = const()[name = tensor<string, []>("query_39_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_39_pad_0 = const()[name = tensor<string, []>("query_39_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_9_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_9_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(255204352)))];
            tensor<fp16, [768]> layers_9_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_9_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(256384064)))];
            tensor<fp16, [1, 768, 1, 1]> query_39_cast_fp16 = conv(bias = layers_9_encoder_attn_q_proj_bias_to_fp16, dilations = var_2161, groups = var_2037, pad = query_39_pad_0, pad_type = query_39_pad_type_0, strides = var_2159, weight = layers_9_encoder_attn_q_proj_weight_to_fp16, x = obj_135_cast_fp16)[name = tensor<string, []>("query_39_cast_fp16")];
            tensor<int32, [2]> var_2165 = const()[name = tensor<string, []>("op_2165"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2167 = const()[name = tensor<string, []>("op_2167"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_39_pad_type_0 = const()[name = tensor<string, []>("key_39_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_39_pad_0 = const()[name = tensor<string, []>("key_39_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_9_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_9_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(256385664)))];
            tensor<fp16, [1, 768, 1, 1500]> key_39_cast_fp16 = conv(dilations = var_2167, groups = var_2037, pad = key_39_pad_0, pad_type = key_39_pad_type_0, strides = var_2165, weight = layers_9_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_39_cast_fp16")];
            tensor<int32, [2]> var_2172 = const()[name = tensor<string, []>("op_2172"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2174 = const()[name = tensor<string, []>("op_2174"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_39_pad_type_0 = const()[name = tensor<string, []>("value_39_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_39_pad_0 = const()[name = tensor<string, []>("value_39_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_9_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_9_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(257565376)))];
            tensor<fp16, [768]> layers_9_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_9_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(258745088)))];
            tensor<fp16, [1, 768, 1, 1500]> value_39_cast_fp16 = conv(bias = layers_9_encoder_attn_v_proj_bias_to_fp16, dilations = var_2174, groups = var_2037, pad = value_39_pad_0, pad_type = value_39_pad_type_0, strides = var_2172, weight = layers_9_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_39_cast_fp16")];
            tensor<int32, [4]> var_2178 = const()[name = tensor<string, []>("op_2178"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_2179_cast_fp16 = reshape(shape = var_2178, x = query_39_cast_fp16)[name = tensor<string, []>("op_2179_cast_fp16")];
            tensor<fp16, []> var_2180_to_fp16 = const()[name = tensor<string, []>("op_2180_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_2181_cast_fp16 = mul(x = var_2179_cast_fp16, y = var_2180_to_fp16)[name = tensor<string, []>("op_2181_cast_fp16")];
            tensor<int32, [4]> var_2182 = const()[name = tensor<string, []>("op_2182"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_2183_cast_fp16 = reshape(shape = var_2182, x = key_39_cast_fp16)[name = tensor<string, []>("op_2183_cast_fp16")];
            tensor<bool, []> mh_w_59_transpose_x_0 = const()[name = tensor<string, []>("mh_w_59_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_59_transpose_y_0 = const()[name = tensor<string, []>("mh_w_59_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 1500]> mh_w_59_cast_fp16 = matmul(transpose_x = mh_w_59_transpose_x_0, transpose_y = mh_w_59_transpose_y_0, x = var_2181_cast_fp16, y = var_2183_cast_fp16)[name = tensor<string, []>("mh_w_59_cast_fp16")];
            tensor<fp16, [1, 12, 1, 1500]> obj_139_cast_fp16 = softmax(axis = var_2030, x = mh_w_59_cast_fp16)[name = tensor<string, []>("obj_139_cast_fp16")];
            tensor<int32, [4]> var_2187 = const()[name = tensor<string, []>("op_2187"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_2188_cast_fp16 = reshape(shape = var_2187, x = value_39_cast_fp16)[name = tensor<string, []>("op_2188_cast_fp16")];
            tensor<bool, []> attn_39_transpose_x_0 = const()[name = tensor<string, []>("attn_39_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_39_transpose_y_0 = const()[name = tensor<string, []>("attn_39_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_39_cast_fp16 = matmul(transpose_x = attn_39_transpose_x_0, transpose_y = attn_39_transpose_y_0, x = var_2188_cast_fp16, y = obj_139_cast_fp16)[name = tensor<string, []>("attn_39_cast_fp16")];
            tensor<int32, [4]> var_2191 = const()[name = tensor<string, []>("op_2191"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_93_cast_fp16 = reshape(shape = var_2191, x = attn_39_cast_fp16)[name = tensor<string, []>("input_93_cast_fp16")];
            tensor<int32, [2]> var_2195 = const()[name = tensor<string, []>("op_2195"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2197 = const()[name = tensor<string, []>("op_2197"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_137_pad_type_0 = const()[name = tensor<string, []>("obj_137_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_137_pad_0 = const()[name = tensor<string, []>("obj_137_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_9_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_9_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(258746688)))];
            tensor<fp16, [768]> layers_9_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_9_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(259926400)))];
            tensor<fp16, [1, 768, 1, 1]> obj_137_cast_fp16 = conv(bias = layers_9_encoder_attn_o_proj_bias_to_fp16, dilations = var_2197, groups = var_2037, pad = obj_137_pad_0, pad_type = obj_137_pad_type_0, strides = var_2195, weight = layers_9_encoder_attn_o_proj_weight_to_fp16, x = input_93_cast_fp16)[name = tensor<string, []>("obj_137_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_59_cast_fp16 = add(x = inputs_57_cast_fp16, y = obj_137_cast_fp16)[name = tensor<string, []>("inputs_59_cast_fp16")];
            tensor<int32, [1]> var_2206 = const()[name = tensor<string, []>("op_2206"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_59_cast_fp16 = reduce_mean(axes = var_2206, keep_dims = var_2038, x = inputs_59_cast_fp16)[name = tensor<string, []>("channels_mean_59_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_59_cast_fp16 = sub(x = inputs_59_cast_fp16, y = channels_mean_59_cast_fp16)[name = tensor<string, []>("zero_mean_59_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_59_cast_fp16 = mul(x = zero_mean_59_cast_fp16, y = zero_mean_59_cast_fp16)[name = tensor<string, []>("zero_mean_sq_59_cast_fp16")];
            tensor<int32, [1]> var_2210 = const()[name = tensor<string, []>("op_2210"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_2211_cast_fp16 = reduce_mean(axes = var_2210, keep_dims = var_2038, x = zero_mean_sq_59_cast_fp16)[name = tensor<string, []>("op_2211_cast_fp16")];
            tensor<fp16, []> var_2212_to_fp16 = const()[name = tensor<string, []>("op_2212_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_2213_cast_fp16 = add(x = var_2211_cast_fp16, y = var_2212_to_fp16)[name = tensor<string, []>("op_2213_cast_fp16")];
            tensor<fp16, []> denom_59_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_59_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_59_cast_fp16 = rsqrt(epsilon = denom_59_epsilon_0_to_fp16, x = var_2213_cast_fp16)[name = tensor<string, []>("denom_59_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_59_cast_fp16 = mul(x = zero_mean_59_cast_fp16, y = denom_59_cast_fp16)[name = tensor<string, []>("out_59_cast_fp16")];
            tensor<fp16, [768]> input_95_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_95_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(259928000)))];
            tensor<fp16, [768]> input_95_beta_0_to_fp16 = const()[name = tensor<string, []>("input_95_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(259929600)))];
            tensor<fp16, []> input_95_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_95_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> input_95_cast_fp16 = batch_norm(beta = input_95_beta_0_to_fp16, epsilon = input_95_epsilon_0_to_fp16, gamma = input_95_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_59_cast_fp16)[name = tensor<string, []>("input_95_cast_fp16")];
            tensor<int32, [2]> var_2224 = const()[name = tensor<string, []>("op_2224"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2226 = const()[name = tensor<string, []>("op_2226"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_97_pad_type_0 = const()[name = tensor<string, []>("input_97_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_97_pad_0 = const()[name = tensor<string, []>("input_97_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [3072, 768, 1, 1]> layers_9_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_9_fc1_weight_to_fp16"), val = tensor<fp16, [3072, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(259931200)))];
            tensor<fp16, [3072]> layers_9_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_9_fc1_bias_to_fp16"), val = tensor<fp16, [3072]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(264649856)))];
            tensor<fp16, [1, 3072, 1, 1]> input_97_cast_fp16 = conv(bias = layers_9_fc1_bias_to_fp16, dilations = var_2226, groups = var_2037, pad = input_97_pad_0, pad_type = input_97_pad_type_0, strides = var_2224, weight = layers_9_fc1_weight_to_fp16, x = input_95_cast_fp16)[name = tensor<string, []>("input_97_cast_fp16")];
            tensor<string, []> input_99_mode_0 = const()[name = tensor<string, []>("input_99_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 3072, 1, 1]> input_99_cast_fp16 = gelu(mode = input_99_mode_0, x = input_97_cast_fp16)[name = tensor<string, []>("input_99_cast_fp16")];
            tensor<int32, [2]> var_2232 = const()[name = tensor<string, []>("op_2232"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2234 = const()[name = tensor<string, []>("op_2234"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_21_pad_type_0 = const()[name = tensor<string, []>("hidden_states_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_21_pad_0 = const()[name = tensor<string, []>("hidden_states_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 3072, 1, 1]> layers_9_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_9_fc2_weight_to_fp16"), val = tensor<fp16, [768, 3072, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(264656064)))];
            tensor<fp16, [768]> layers_9_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_9_fc2_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(269374720)))];
            tensor<fp16, [1, 768, 1, 1]> hidden_states_21_cast_fp16 = conv(bias = layers_9_fc2_bias_to_fp16, dilations = var_2234, groups = var_2037, pad = hidden_states_21_pad_0, pad_type = hidden_states_21_pad_type_0, strides = var_2232, weight = layers_9_fc2_weight_to_fp16, x = input_99_cast_fp16)[name = tensor<string, []>("hidden_states_21_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_61_cast_fp16 = add(x = inputs_59_cast_fp16, y = hidden_states_21_cast_fp16)[name = tensor<string, []>("inputs_61_cast_fp16")];
            tensor<int32, []> var_2248 = const()[name = tensor<string, []>("op_2248"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_2255 = const()[name = tensor<string, []>("op_2255"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_2256 = const()[name = tensor<string, []>("op_2256"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_2268 = const()[name = tensor<string, []>("op_2268"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_61_cast_fp16 = reduce_mean(axes = var_2268, keep_dims = var_2256, x = inputs_61_cast_fp16)[name = tensor<string, []>("channels_mean_61_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_61_cast_fp16 = sub(x = inputs_61_cast_fp16, y = channels_mean_61_cast_fp16)[name = tensor<string, []>("zero_mean_61_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_61_cast_fp16 = mul(x = zero_mean_61_cast_fp16, y = zero_mean_61_cast_fp16)[name = tensor<string, []>("zero_mean_sq_61_cast_fp16")];
            tensor<int32, [1]> var_2272 = const()[name = tensor<string, []>("op_2272"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_2273_cast_fp16 = reduce_mean(axes = var_2272, keep_dims = var_2256, x = zero_mean_sq_61_cast_fp16)[name = tensor<string, []>("op_2273_cast_fp16")];
            tensor<fp16, []> var_2274_to_fp16 = const()[name = tensor<string, []>("op_2274_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_2275_cast_fp16 = add(x = var_2273_cast_fp16, y = var_2274_to_fp16)[name = tensor<string, []>("op_2275_cast_fp16")];
            tensor<fp16, []> denom_61_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_61_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_61_cast_fp16 = rsqrt(epsilon = denom_61_epsilon_0_to_fp16, x = var_2275_cast_fp16)[name = tensor<string, []>("denom_61_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_61_cast_fp16 = mul(x = zero_mean_61_cast_fp16, y = denom_61_cast_fp16)[name = tensor<string, []>("out_61_cast_fp16")];
            tensor<fp16, [768]> obj_141_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_141_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(269376320)))];
            tensor<fp16, [768]> obj_141_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_141_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(269377920)))];
            tensor<fp16, []> obj_141_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_141_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_141_cast_fp16 = batch_norm(beta = obj_141_beta_0_to_fp16, epsilon = obj_141_epsilon_0_to_fp16, gamma = obj_141_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_61_cast_fp16)[name = tensor<string, []>("obj_141_cast_fp16")];
            tensor<int32, [2]> var_2290 = const()[name = tensor<string, []>("op_2290"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2292 = const()[name = tensor<string, []>("op_2292"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_41_pad_type_0 = const()[name = tensor<string, []>("query_41_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_41_pad_0 = const()[name = tensor<string, []>("query_41_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_10_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_10_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(269379520)))];
            tensor<fp16, [768]> layers_10_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_10_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(270559232)))];
            tensor<fp16, [1, 768, 1, 1]> query_41_cast_fp16 = conv(bias = layers_10_self_attn_q_proj_bias_to_fp16, dilations = var_2292, groups = var_2255, pad = query_41_pad_0, pad_type = query_41_pad_type_0, strides = var_2290, weight = layers_10_self_attn_q_proj_weight_to_fp16, x = obj_141_cast_fp16)[name = tensor<string, []>("query_41_cast_fp16")];
            tensor<int32, [2]> var_2296 = const()[name = tensor<string, []>("op_2296"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2298 = const()[name = tensor<string, []>("op_2298"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_21_pad_type_0 = const()[name = tensor<string, []>("current_key_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_21_pad_0 = const()[name = tensor<string, []>("current_key_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_10_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_10_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(270560832)))];
            tensor<fp16, [1, 768, 1, 1]> current_key_21_cast_fp16 = conv(dilations = var_2298, groups = var_2255, pad = current_key_21_pad_0, pad_type = current_key_21_pad_type_0, strides = var_2296, weight = layers_10_self_attn_k_proj_weight_to_fp16, x = obj_141_cast_fp16)[name = tensor<string, []>("current_key_21_cast_fp16")];
            tensor<int32, [2]> var_2303 = const()[name = tensor<string, []>("op_2303"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2305 = const()[name = tensor<string, []>("op_2305"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_21_pad_type_0 = const()[name = tensor<string, []>("current_value_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_21_pad_0 = const()[name = tensor<string, []>("current_value_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_10_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_10_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(271740544)))];
            tensor<fp16, [768]> layers_10_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_10_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(272920256)))];
            tensor<fp16, [1, 768, 1, 1]> current_value_21_cast_fp16 = conv(bias = layers_10_self_attn_v_proj_bias_to_fp16, dilations = var_2305, groups = var_2255, pad = current_value_21_pad_0, pad_type = current_value_21_pad_type_0, strides = var_2303, weight = layers_10_self_attn_v_proj_weight_to_fp16, x = obj_141_cast_fp16)[name = tensor<string, []>("current_value_21_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_2312_cast_fp16 = mul(x = current_key_21_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_2312_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_2314_cast_fp16 = mul(x = var_63_cast_fp16_10, y = var_161_cast_fp16)[name = tensor<string, []>("op_2314_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> key_41_cast_fp16 = add(x = var_2312_cast_fp16, y = var_2314_cast_fp16)[name = tensor<string, []>("key_41_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_2316_cast_fp16 = mul(x = current_value_21_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_2316_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_2318_cast_fp16 = mul(x = var_78_cast_fp16_10, y = var_161_cast_fp16)[name = tensor<string, []>("op_2318_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> value_41_cast_fp16 = add(x = var_2316_cast_fp16, y = var_2318_cast_fp16)[name = tensor<string, []>("value_41_cast_fp16")];
            tensor<int32, [4]> var_2321 = const()[name = tensor<string, []>("op_2321"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_2322_cast_fp16 = reshape(shape = var_2321, x = query_41_cast_fp16)[name = tensor<string, []>("op_2322_cast_fp16")];
            tensor<fp16, []> var_2323_to_fp16 = const()[name = tensor<string, []>("op_2323_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_2324_cast_fp16 = mul(x = var_2322_cast_fp16, y = var_2323_to_fp16)[name = tensor<string, []>("op_2324_cast_fp16")];
            tensor<int32, [4]> var_2325 = const()[name = tensor<string, []>("op_2325"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_2326_cast_fp16 = reshape(shape = var_2325, x = key_41_cast_fp16)[name = tensor<string, []>("op_2326_cast_fp16")];
            tensor<bool, []> mh_w_61_transpose_x_0 = const()[name = tensor<string, []>("mh_w_61_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_61_transpose_y_0 = const()[name = tensor<string, []>("mh_w_61_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 224]> mh_w_61_cast_fp16 = matmul(transpose_x = mh_w_61_transpose_x_0, transpose_y = mh_w_61_transpose_y_0, x = var_2324_cast_fp16, y = var_2326_cast_fp16)[name = tensor<string, []>("mh_w_61_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> mh_w_63_cast_fp16 = add(x = mh_w_61_cast_fp16, y = var_179_cast_fp16)[name = tensor<string, []>("mh_w_63_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> var_2334_cast_fp16 = softmax(axis = var_2248, x = mh_w_63_cast_fp16)[name = tensor<string, []>("op_2334_cast_fp16")];
            tensor<int32, [4]> var_2335 = const()[name = tensor<string, []>("op_2335"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_2336_cast_fp16 = reshape(shape = var_2335, x = value_41_cast_fp16)[name = tensor<string, []>("op_2336_cast_fp16")];
            tensor<bool, []> attn_41_transpose_x_0 = const()[name = tensor<string, []>("attn_41_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_41_transpose_y_0 = const()[name = tensor<string, []>("attn_41_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_41_cast_fp16 = matmul(transpose_x = attn_41_transpose_x_0, transpose_y = attn_41_transpose_y_0, x = var_2336_cast_fp16, y = var_2334_cast_fp16)[name = tensor<string, []>("attn_41_cast_fp16")];
            tensor<int32, [4]> var_2339 = const()[name = tensor<string, []>("op_2339"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_101_cast_fp16 = reshape(shape = var_2339, x = attn_41_cast_fp16)[name = tensor<string, []>("input_101_cast_fp16")];
            tensor<int32, [2]> var_2343 = const()[name = tensor<string, []>("op_2343"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2345 = const()[name = tensor<string, []>("op_2345"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_147_pad_type_0 = const()[name = tensor<string, []>("obj_147_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_147_pad_0 = const()[name = tensor<string, []>("obj_147_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_10_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_10_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(272921856)))];
            tensor<fp16, [768]> layers_10_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_10_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(274101568)))];
            tensor<fp16, [1, 768, 1, 1]> obj_147_cast_fp16 = conv(bias = layers_10_self_attn_o_proj_bias_to_fp16, dilations = var_2345, groups = var_2255, pad = obj_147_pad_0, pad_type = obj_147_pad_type_0, strides = var_2343, weight = layers_10_self_attn_o_proj_weight_to_fp16, x = input_101_cast_fp16)[name = tensor<string, []>("obj_147_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_63_cast_fp16 = add(x = inputs_61_cast_fp16, y = obj_147_cast_fp16)[name = tensor<string, []>("inputs_63_cast_fp16")];
            tensor<int32, [1]> var_2355 = const()[name = tensor<string, []>("op_2355"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_63_cast_fp16 = reduce_mean(axes = var_2355, keep_dims = var_2256, x = inputs_63_cast_fp16)[name = tensor<string, []>("channels_mean_63_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_63_cast_fp16 = sub(x = inputs_63_cast_fp16, y = channels_mean_63_cast_fp16)[name = tensor<string, []>("zero_mean_63_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_63_cast_fp16 = mul(x = zero_mean_63_cast_fp16, y = zero_mean_63_cast_fp16)[name = tensor<string, []>("zero_mean_sq_63_cast_fp16")];
            tensor<int32, [1]> var_2359 = const()[name = tensor<string, []>("op_2359"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_2360_cast_fp16 = reduce_mean(axes = var_2359, keep_dims = var_2256, x = zero_mean_sq_63_cast_fp16)[name = tensor<string, []>("op_2360_cast_fp16")];
            tensor<fp16, []> var_2361_to_fp16 = const()[name = tensor<string, []>("op_2361_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_2362_cast_fp16 = add(x = var_2360_cast_fp16, y = var_2361_to_fp16)[name = tensor<string, []>("op_2362_cast_fp16")];
            tensor<fp16, []> denom_63_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_63_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_63_cast_fp16 = rsqrt(epsilon = denom_63_epsilon_0_to_fp16, x = var_2362_cast_fp16)[name = tensor<string, []>("denom_63_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_63_cast_fp16 = mul(x = zero_mean_63_cast_fp16, y = denom_63_cast_fp16)[name = tensor<string, []>("out_63_cast_fp16")];
            tensor<fp16, [768]> obj_149_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_149_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(274103168)))];
            tensor<fp16, [768]> obj_149_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_149_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(274104768)))];
            tensor<fp16, []> obj_149_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_149_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_149_cast_fp16 = batch_norm(beta = obj_149_beta_0_to_fp16, epsilon = obj_149_epsilon_0_to_fp16, gamma = obj_149_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_63_cast_fp16)[name = tensor<string, []>("obj_149_cast_fp16")];
            tensor<int32, [2]> var_2377 = const()[name = tensor<string, []>("op_2377"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2379 = const()[name = tensor<string, []>("op_2379"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_43_pad_type_0 = const()[name = tensor<string, []>("query_43_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_43_pad_0 = const()[name = tensor<string, []>("query_43_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_10_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_10_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(274106368)))];
            tensor<fp16, [768]> layers_10_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_10_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(275286080)))];
            tensor<fp16, [1, 768, 1, 1]> query_43_cast_fp16 = conv(bias = layers_10_encoder_attn_q_proj_bias_to_fp16, dilations = var_2379, groups = var_2255, pad = query_43_pad_0, pad_type = query_43_pad_type_0, strides = var_2377, weight = layers_10_encoder_attn_q_proj_weight_to_fp16, x = obj_149_cast_fp16)[name = tensor<string, []>("query_43_cast_fp16")];
            tensor<int32, [2]> var_2383 = const()[name = tensor<string, []>("op_2383"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2385 = const()[name = tensor<string, []>("op_2385"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_43_pad_type_0 = const()[name = tensor<string, []>("key_43_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_43_pad_0 = const()[name = tensor<string, []>("key_43_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_10_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_10_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(275287680)))];
            tensor<fp16, [1, 768, 1, 1500]> key_43_cast_fp16 = conv(dilations = var_2385, groups = var_2255, pad = key_43_pad_0, pad_type = key_43_pad_type_0, strides = var_2383, weight = layers_10_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_43_cast_fp16")];
            tensor<int32, [2]> var_2390 = const()[name = tensor<string, []>("op_2390"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2392 = const()[name = tensor<string, []>("op_2392"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_43_pad_type_0 = const()[name = tensor<string, []>("value_43_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_43_pad_0 = const()[name = tensor<string, []>("value_43_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_10_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_10_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(276467392)))];
            tensor<fp16, [768]> layers_10_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_10_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(277647104)))];
            tensor<fp16, [1, 768, 1, 1500]> value_43_cast_fp16 = conv(bias = layers_10_encoder_attn_v_proj_bias_to_fp16, dilations = var_2392, groups = var_2255, pad = value_43_pad_0, pad_type = value_43_pad_type_0, strides = var_2390, weight = layers_10_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_43_cast_fp16")];
            tensor<int32, [4]> var_2396 = const()[name = tensor<string, []>("op_2396"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_2397_cast_fp16 = reshape(shape = var_2396, x = query_43_cast_fp16)[name = tensor<string, []>("op_2397_cast_fp16")];
            tensor<fp16, []> var_2398_to_fp16 = const()[name = tensor<string, []>("op_2398_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_2399_cast_fp16 = mul(x = var_2397_cast_fp16, y = var_2398_to_fp16)[name = tensor<string, []>("op_2399_cast_fp16")];
            tensor<int32, [4]> var_2400 = const()[name = tensor<string, []>("op_2400"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_2401_cast_fp16 = reshape(shape = var_2400, x = key_43_cast_fp16)[name = tensor<string, []>("op_2401_cast_fp16")];
            tensor<bool, []> mh_w_65_transpose_x_0 = const()[name = tensor<string, []>("mh_w_65_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_65_transpose_y_0 = const()[name = tensor<string, []>("mh_w_65_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 1500]> mh_w_65_cast_fp16 = matmul(transpose_x = mh_w_65_transpose_x_0, transpose_y = mh_w_65_transpose_y_0, x = var_2399_cast_fp16, y = var_2401_cast_fp16)[name = tensor<string, []>("mh_w_65_cast_fp16")];
            tensor<fp16, [1, 12, 1, 1500]> obj_153_cast_fp16 = softmax(axis = var_2248, x = mh_w_65_cast_fp16)[name = tensor<string, []>("obj_153_cast_fp16")];
            tensor<int32, [4]> var_2405 = const()[name = tensor<string, []>("op_2405"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_2406_cast_fp16 = reshape(shape = var_2405, x = value_43_cast_fp16)[name = tensor<string, []>("op_2406_cast_fp16")];
            tensor<bool, []> attn_43_transpose_x_0 = const()[name = tensor<string, []>("attn_43_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_43_transpose_y_0 = const()[name = tensor<string, []>("attn_43_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_43_cast_fp16 = matmul(transpose_x = attn_43_transpose_x_0, transpose_y = attn_43_transpose_y_0, x = var_2406_cast_fp16, y = obj_153_cast_fp16)[name = tensor<string, []>("attn_43_cast_fp16")];
            tensor<int32, [4]> var_2409 = const()[name = tensor<string, []>("op_2409"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_103_cast_fp16 = reshape(shape = var_2409, x = attn_43_cast_fp16)[name = tensor<string, []>("input_103_cast_fp16")];
            tensor<int32, [2]> var_2413 = const()[name = tensor<string, []>("op_2413"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2415 = const()[name = tensor<string, []>("op_2415"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_151_pad_type_0 = const()[name = tensor<string, []>("obj_151_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_151_pad_0 = const()[name = tensor<string, []>("obj_151_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_10_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_10_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(277648704)))];
            tensor<fp16, [768]> layers_10_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_10_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(278828416)))];
            tensor<fp16, [1, 768, 1, 1]> obj_151_cast_fp16 = conv(bias = layers_10_encoder_attn_o_proj_bias_to_fp16, dilations = var_2415, groups = var_2255, pad = obj_151_pad_0, pad_type = obj_151_pad_type_0, strides = var_2413, weight = layers_10_encoder_attn_o_proj_weight_to_fp16, x = input_103_cast_fp16)[name = tensor<string, []>("obj_151_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_65_cast_fp16 = add(x = inputs_63_cast_fp16, y = obj_151_cast_fp16)[name = tensor<string, []>("inputs_65_cast_fp16")];
            tensor<int32, [1]> var_2424 = const()[name = tensor<string, []>("op_2424"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_65_cast_fp16 = reduce_mean(axes = var_2424, keep_dims = var_2256, x = inputs_65_cast_fp16)[name = tensor<string, []>("channels_mean_65_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_65_cast_fp16 = sub(x = inputs_65_cast_fp16, y = channels_mean_65_cast_fp16)[name = tensor<string, []>("zero_mean_65_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_65_cast_fp16 = mul(x = zero_mean_65_cast_fp16, y = zero_mean_65_cast_fp16)[name = tensor<string, []>("zero_mean_sq_65_cast_fp16")];
            tensor<int32, [1]> var_2428 = const()[name = tensor<string, []>("op_2428"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_2429_cast_fp16 = reduce_mean(axes = var_2428, keep_dims = var_2256, x = zero_mean_sq_65_cast_fp16)[name = tensor<string, []>("op_2429_cast_fp16")];
            tensor<fp16, []> var_2430_to_fp16 = const()[name = tensor<string, []>("op_2430_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_2431_cast_fp16 = add(x = var_2429_cast_fp16, y = var_2430_to_fp16)[name = tensor<string, []>("op_2431_cast_fp16")];
            tensor<fp16, []> denom_65_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_65_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_65_cast_fp16 = rsqrt(epsilon = denom_65_epsilon_0_to_fp16, x = var_2431_cast_fp16)[name = tensor<string, []>("denom_65_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_65_cast_fp16 = mul(x = zero_mean_65_cast_fp16, y = denom_65_cast_fp16)[name = tensor<string, []>("out_65_cast_fp16")];
            tensor<fp16, [768]> input_105_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_105_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(278830016)))];
            tensor<fp16, [768]> input_105_beta_0_to_fp16 = const()[name = tensor<string, []>("input_105_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(278831616)))];
            tensor<fp16, []> input_105_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_105_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> input_105_cast_fp16 = batch_norm(beta = input_105_beta_0_to_fp16, epsilon = input_105_epsilon_0_to_fp16, gamma = input_105_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_65_cast_fp16)[name = tensor<string, []>("input_105_cast_fp16")];
            tensor<int32, [2]> var_2442 = const()[name = tensor<string, []>("op_2442"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2444 = const()[name = tensor<string, []>("op_2444"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_107_pad_type_0 = const()[name = tensor<string, []>("input_107_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_107_pad_0 = const()[name = tensor<string, []>("input_107_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [3072, 768, 1, 1]> layers_10_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_10_fc1_weight_to_fp16"), val = tensor<fp16, [3072, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(278833216)))];
            tensor<fp16, [3072]> layers_10_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_10_fc1_bias_to_fp16"), val = tensor<fp16, [3072]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(283551872)))];
            tensor<fp16, [1, 3072, 1, 1]> input_107_cast_fp16 = conv(bias = layers_10_fc1_bias_to_fp16, dilations = var_2444, groups = var_2255, pad = input_107_pad_0, pad_type = input_107_pad_type_0, strides = var_2442, weight = layers_10_fc1_weight_to_fp16, x = input_105_cast_fp16)[name = tensor<string, []>("input_107_cast_fp16")];
            tensor<string, []> input_109_mode_0 = const()[name = tensor<string, []>("input_109_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 3072, 1, 1]> input_109_cast_fp16 = gelu(mode = input_109_mode_0, x = input_107_cast_fp16)[name = tensor<string, []>("input_109_cast_fp16")];
            tensor<int32, [2]> var_2450 = const()[name = tensor<string, []>("op_2450"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2452 = const()[name = tensor<string, []>("op_2452"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_23_pad_type_0 = const()[name = tensor<string, []>("hidden_states_23_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_23_pad_0 = const()[name = tensor<string, []>("hidden_states_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 3072, 1, 1]> layers_10_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_10_fc2_weight_to_fp16"), val = tensor<fp16, [768, 3072, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(283558080)))];
            tensor<fp16, [768]> layers_10_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_10_fc2_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(288276736)))];
            tensor<fp16, [1, 768, 1, 1]> hidden_states_23_cast_fp16 = conv(bias = layers_10_fc2_bias_to_fp16, dilations = var_2452, groups = var_2255, pad = hidden_states_23_pad_0, pad_type = hidden_states_23_pad_type_0, strides = var_2450, weight = layers_10_fc2_weight_to_fp16, x = input_109_cast_fp16)[name = tensor<string, []>("hidden_states_23_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_67_cast_fp16 = add(x = inputs_65_cast_fp16, y = hidden_states_23_cast_fp16)[name = tensor<string, []>("inputs_67_cast_fp16")];
            tensor<int32, []> var_2466 = const()[name = tensor<string, []>("op_2466"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_2473 = const()[name = tensor<string, []>("op_2473"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_2474 = const()[name = tensor<string, []>("op_2474"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_2486 = const()[name = tensor<string, []>("op_2486"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_67_cast_fp16 = reduce_mean(axes = var_2486, keep_dims = var_2474, x = inputs_67_cast_fp16)[name = tensor<string, []>("channels_mean_67_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_67_cast_fp16 = sub(x = inputs_67_cast_fp16, y = channels_mean_67_cast_fp16)[name = tensor<string, []>("zero_mean_67_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_67_cast_fp16 = mul(x = zero_mean_67_cast_fp16, y = zero_mean_67_cast_fp16)[name = tensor<string, []>("zero_mean_sq_67_cast_fp16")];
            tensor<int32, [1]> var_2490 = const()[name = tensor<string, []>("op_2490"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_2491_cast_fp16 = reduce_mean(axes = var_2490, keep_dims = var_2474, x = zero_mean_sq_67_cast_fp16)[name = tensor<string, []>("op_2491_cast_fp16")];
            tensor<fp16, []> var_2492_to_fp16 = const()[name = tensor<string, []>("op_2492_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_2493_cast_fp16 = add(x = var_2491_cast_fp16, y = var_2492_to_fp16)[name = tensor<string, []>("op_2493_cast_fp16")];
            tensor<fp16, []> denom_67_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_67_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_67_cast_fp16 = rsqrt(epsilon = denom_67_epsilon_0_to_fp16, x = var_2493_cast_fp16)[name = tensor<string, []>("denom_67_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_67_cast_fp16 = mul(x = zero_mean_67_cast_fp16, y = denom_67_cast_fp16)[name = tensor<string, []>("out_67_cast_fp16")];
            tensor<fp16, [768]> obj_155_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_155_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(288278336)))];
            tensor<fp16, [768]> obj_155_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_155_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(288279936)))];
            tensor<fp16, []> obj_155_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_155_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_155_cast_fp16 = batch_norm(beta = obj_155_beta_0_to_fp16, epsilon = obj_155_epsilon_0_to_fp16, gamma = obj_155_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_67_cast_fp16)[name = tensor<string, []>("obj_155_cast_fp16")];
            tensor<int32, [2]> var_2508 = const()[name = tensor<string, []>("op_2508"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2510 = const()[name = tensor<string, []>("op_2510"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_45_pad_type_0 = const()[name = tensor<string, []>("query_45_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_45_pad_0 = const()[name = tensor<string, []>("query_45_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_11_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_11_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(288281536)))];
            tensor<fp16, [768]> layers_11_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_11_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(289461248)))];
            tensor<fp16, [1, 768, 1, 1]> query_45_cast_fp16 = conv(bias = layers_11_self_attn_q_proj_bias_to_fp16, dilations = var_2510, groups = var_2473, pad = query_45_pad_0, pad_type = query_45_pad_type_0, strides = var_2508, weight = layers_11_self_attn_q_proj_weight_to_fp16, x = obj_155_cast_fp16)[name = tensor<string, []>("query_45_cast_fp16")];
            tensor<int32, [2]> var_2514 = const()[name = tensor<string, []>("op_2514"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2516 = const()[name = tensor<string, []>("op_2516"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_pad_type_0 = const()[name = tensor<string, []>("current_key_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_pad_0 = const()[name = tensor<string, []>("current_key_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_11_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_11_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(289462848)))];
            tensor<fp16, [1, 768, 1, 1]> current_key_cast_fp16 = conv(dilations = var_2516, groups = var_2473, pad = current_key_pad_0, pad_type = current_key_pad_type_0, strides = var_2514, weight = layers_11_self_attn_k_proj_weight_to_fp16, x = obj_155_cast_fp16)[name = tensor<string, []>("current_key_cast_fp16")];
            tensor<int32, [2]> var_2521 = const()[name = tensor<string, []>("op_2521"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2523 = const()[name = tensor<string, []>("op_2523"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_pad_type_0 = const()[name = tensor<string, []>("current_value_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_pad_0 = const()[name = tensor<string, []>("current_value_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_11_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_11_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(290642560)))];
            tensor<fp16, [768]> layers_11_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_11_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(291822272)))];
            tensor<fp16, [1, 768, 1, 1]> current_value_cast_fp16 = conv(bias = layers_11_self_attn_v_proj_bias_to_fp16, dilations = var_2523, groups = var_2473, pad = current_value_pad_0, pad_type = current_value_pad_type_0, strides = var_2521, weight = layers_11_self_attn_v_proj_weight_to_fp16, x = obj_155_cast_fp16)[name = tensor<string, []>("current_value_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_2530_cast_fp16 = mul(x = current_key_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_2530_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_2532_cast_fp16 = mul(x = var_63_cast_fp16_11, y = var_161_cast_fp16)[name = tensor<string, []>("op_2532_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> key_45_cast_fp16 = add(x = var_2530_cast_fp16, y = var_2532_cast_fp16)[name = tensor<string, []>("key_45_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_2534_cast_fp16 = mul(x = current_value_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_2534_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_2536_cast_fp16 = mul(x = var_78_cast_fp16_11, y = var_161_cast_fp16)[name = tensor<string, []>("op_2536_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> value_45_cast_fp16 = add(x = var_2534_cast_fp16, y = var_2536_cast_fp16)[name = tensor<string, []>("value_45_cast_fp16")];
            tensor<int32, [4]> var_2539 = const()[name = tensor<string, []>("op_2539"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_2540_cast_fp16 = reshape(shape = var_2539, x = query_45_cast_fp16)[name = tensor<string, []>("op_2540_cast_fp16")];
            tensor<fp16, []> var_2541_to_fp16 = const()[name = tensor<string, []>("op_2541_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_2542_cast_fp16 = mul(x = var_2540_cast_fp16, y = var_2541_to_fp16)[name = tensor<string, []>("op_2542_cast_fp16")];
            tensor<int32, [4]> var_2543 = const()[name = tensor<string, []>("op_2543"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_2544_cast_fp16 = reshape(shape = var_2543, x = key_45_cast_fp16)[name = tensor<string, []>("op_2544_cast_fp16")];
            tensor<bool, []> mh_w_67_transpose_x_0 = const()[name = tensor<string, []>("mh_w_67_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_67_transpose_y_0 = const()[name = tensor<string, []>("mh_w_67_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 224]> mh_w_67_cast_fp16 = matmul(transpose_x = mh_w_67_transpose_x_0, transpose_y = mh_w_67_transpose_y_0, x = var_2542_cast_fp16, y = var_2544_cast_fp16)[name = tensor<string, []>("mh_w_67_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> mh_w_69_cast_fp16 = add(x = mh_w_67_cast_fp16, y = var_179_cast_fp16)[name = tensor<string, []>("mh_w_69_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> var_2552_cast_fp16 = softmax(axis = var_2466, x = mh_w_69_cast_fp16)[name = tensor<string, []>("op_2552_cast_fp16")];
            tensor<int32, [4]> var_2553 = const()[name = tensor<string, []>("op_2553"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_2554_cast_fp16 = reshape(shape = var_2553, x = value_45_cast_fp16)[name = tensor<string, []>("op_2554_cast_fp16")];
            tensor<bool, []> attn_45_transpose_x_0 = const()[name = tensor<string, []>("attn_45_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_45_transpose_y_0 = const()[name = tensor<string, []>("attn_45_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_45_cast_fp16 = matmul(transpose_x = attn_45_transpose_x_0, transpose_y = attn_45_transpose_y_0, x = var_2554_cast_fp16, y = var_2552_cast_fp16)[name = tensor<string, []>("attn_45_cast_fp16")];
            tensor<int32, [4]> var_2557 = const()[name = tensor<string, []>("op_2557"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_111_cast_fp16 = reshape(shape = var_2557, x = attn_45_cast_fp16)[name = tensor<string, []>("input_111_cast_fp16")];
            tensor<int32, [2]> var_2561 = const()[name = tensor<string, []>("op_2561"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2563 = const()[name = tensor<string, []>("op_2563"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_161_pad_type_0 = const()[name = tensor<string, []>("obj_161_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_161_pad_0 = const()[name = tensor<string, []>("obj_161_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_11_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_11_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(291823872)))];
            tensor<fp16, [768]> layers_11_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_11_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(293003584)))];
            tensor<fp16, [1, 768, 1, 1]> obj_161_cast_fp16 = conv(bias = layers_11_self_attn_o_proj_bias_to_fp16, dilations = var_2563, groups = var_2473, pad = obj_161_pad_0, pad_type = obj_161_pad_type_0, strides = var_2561, weight = layers_11_self_attn_o_proj_weight_to_fp16, x = input_111_cast_fp16)[name = tensor<string, []>("obj_161_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_69_cast_fp16 = add(x = inputs_67_cast_fp16, y = obj_161_cast_fp16)[name = tensor<string, []>("inputs_69_cast_fp16")];
            tensor<int32, [1]> var_2573 = const()[name = tensor<string, []>("op_2573"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_69_cast_fp16 = reduce_mean(axes = var_2573, keep_dims = var_2474, x = inputs_69_cast_fp16)[name = tensor<string, []>("channels_mean_69_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_69_cast_fp16 = sub(x = inputs_69_cast_fp16, y = channels_mean_69_cast_fp16)[name = tensor<string, []>("zero_mean_69_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_69_cast_fp16 = mul(x = zero_mean_69_cast_fp16, y = zero_mean_69_cast_fp16)[name = tensor<string, []>("zero_mean_sq_69_cast_fp16")];
            tensor<int32, [1]> var_2577 = const()[name = tensor<string, []>("op_2577"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_2578_cast_fp16 = reduce_mean(axes = var_2577, keep_dims = var_2474, x = zero_mean_sq_69_cast_fp16)[name = tensor<string, []>("op_2578_cast_fp16")];
            tensor<fp16, []> var_2579_to_fp16 = const()[name = tensor<string, []>("op_2579_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_2580_cast_fp16 = add(x = var_2578_cast_fp16, y = var_2579_to_fp16)[name = tensor<string, []>("op_2580_cast_fp16")];
            tensor<fp16, []> denom_69_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_69_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_69_cast_fp16 = rsqrt(epsilon = denom_69_epsilon_0_to_fp16, x = var_2580_cast_fp16)[name = tensor<string, []>("denom_69_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_69_cast_fp16 = mul(x = zero_mean_69_cast_fp16, y = denom_69_cast_fp16)[name = tensor<string, []>("out_69_cast_fp16")];
            tensor<fp16, [768]> obj_163_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_163_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(293005184)))];
            tensor<fp16, [768]> obj_163_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_163_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(293006784)))];
            tensor<fp16, []> obj_163_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_163_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_163_cast_fp16 = batch_norm(beta = obj_163_beta_0_to_fp16, epsilon = obj_163_epsilon_0_to_fp16, gamma = obj_163_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_69_cast_fp16)[name = tensor<string, []>("obj_163_cast_fp16")];
            tensor<int32, [2]> var_2595 = const()[name = tensor<string, []>("op_2595"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2597 = const()[name = tensor<string, []>("op_2597"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_pad_type_0 = const()[name = tensor<string, []>("query_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_pad_0 = const()[name = tensor<string, []>("query_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_11_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_11_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(293008384)))];
            tensor<fp16, [768]> layers_11_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_11_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(294188096)))];
            tensor<fp16, [1, 768, 1, 1]> query_cast_fp16 = conv(bias = layers_11_encoder_attn_q_proj_bias_to_fp16, dilations = var_2597, groups = var_2473, pad = query_pad_0, pad_type = query_pad_type_0, strides = var_2595, weight = layers_11_encoder_attn_q_proj_weight_to_fp16, x = obj_163_cast_fp16)[name = tensor<string, []>("query_cast_fp16")];
            tensor<int32, [2]> var_2601 = const()[name = tensor<string, []>("op_2601"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2603 = const()[name = tensor<string, []>("op_2603"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_pad_type_0 = const()[name = tensor<string, []>("key_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_pad_0 = const()[name = tensor<string, []>("key_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_11_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_11_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(294189696)))];
            tensor<fp16, [1, 768, 1, 1500]> key_cast_fp16 = conv(dilations = var_2603, groups = var_2473, pad = key_pad_0, pad_type = key_pad_type_0, strides = var_2601, weight = layers_11_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_cast_fp16")];
            tensor<int32, [2]> var_2608 = const()[name = tensor<string, []>("op_2608"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2610 = const()[name = tensor<string, []>("op_2610"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_pad_type_0 = const()[name = tensor<string, []>("value_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_pad_0 = const()[name = tensor<string, []>("value_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_11_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_11_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(295369408)))];
            tensor<fp16, [768]> layers_11_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_11_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(296549120)))];
            tensor<fp16, [1, 768, 1, 1500]> value_cast_fp16 = conv(bias = layers_11_encoder_attn_v_proj_bias_to_fp16, dilations = var_2610, groups = var_2473, pad = value_pad_0, pad_type = value_pad_type_0, strides = var_2608, weight = layers_11_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_cast_fp16")];
            tensor<int32, [4]> var_2614 = const()[name = tensor<string, []>("op_2614"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_2615_cast_fp16 = reshape(shape = var_2614, x = query_cast_fp16)[name = tensor<string, []>("op_2615_cast_fp16")];
            tensor<fp16, []> var_2616_to_fp16 = const()[name = tensor<string, []>("op_2616_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_2617_cast_fp16 = mul(x = var_2615_cast_fp16, y = var_2616_to_fp16)[name = tensor<string, []>("op_2617_cast_fp16")];
            tensor<int32, [4]> var_2618 = const()[name = tensor<string, []>("op_2618"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_2619_cast_fp16 = reshape(shape = var_2618, x = key_cast_fp16)[name = tensor<string, []>("op_2619_cast_fp16")];
            tensor<bool, []> mh_w_transpose_x_0 = const()[name = tensor<string, []>("mh_w_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_transpose_y_0 = const()[name = tensor<string, []>("mh_w_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 1500]> mh_w_cast_fp16 = matmul(transpose_x = mh_w_transpose_x_0, transpose_y = mh_w_transpose_y_0, x = var_2617_cast_fp16, y = var_2619_cast_fp16)[name = tensor<string, []>("mh_w_cast_fp16")];
            tensor<fp16, [1, 12, 1, 1500]> obj_167_cast_fp16 = softmax(axis = var_2466, x = mh_w_cast_fp16)[name = tensor<string, []>("obj_167_cast_fp16")];
            tensor<int32, [4]> var_2623 = const()[name = tensor<string, []>("op_2623"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_2624_cast_fp16 = reshape(shape = var_2623, x = value_cast_fp16)[name = tensor<string, []>("op_2624_cast_fp16")];
            tensor<bool, []> attn_transpose_x_0 = const()[name = tensor<string, []>("attn_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_transpose_y_0 = const()[name = tensor<string, []>("attn_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_cast_fp16 = matmul(transpose_x = attn_transpose_x_0, transpose_y = attn_transpose_y_0, x = var_2624_cast_fp16, y = obj_167_cast_fp16)[name = tensor<string, []>("attn_cast_fp16")];
            tensor<int32, [4]> var_2627 = const()[name = tensor<string, []>("op_2627"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_113_cast_fp16 = reshape(shape = var_2627, x = attn_cast_fp16)[name = tensor<string, []>("input_113_cast_fp16")];
            tensor<int32, [2]> var_2631 = const()[name = tensor<string, []>("op_2631"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2633 = const()[name = tensor<string, []>("op_2633"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_165_pad_type_0 = const()[name = tensor<string, []>("obj_165_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_165_pad_0 = const()[name = tensor<string, []>("obj_165_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_11_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_11_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(296550720)))];
            tensor<fp16, [768]> layers_11_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_11_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(297730432)))];
            tensor<fp16, [1, 768, 1, 1]> obj_165_cast_fp16 = conv(bias = layers_11_encoder_attn_o_proj_bias_to_fp16, dilations = var_2633, groups = var_2473, pad = obj_165_pad_0, pad_type = obj_165_pad_type_0, strides = var_2631, weight = layers_11_encoder_attn_o_proj_weight_to_fp16, x = input_113_cast_fp16)[name = tensor<string, []>("obj_165_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_71_cast_fp16 = add(x = inputs_69_cast_fp16, y = obj_165_cast_fp16)[name = tensor<string, []>("inputs_71_cast_fp16")];
            tensor<int32, [1]> var_2639 = const()[name = tensor<string, []>("op_2639"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_71_cast_fp16 = reduce_mean(axes = var_2639, keep_dims = var_2474, x = inputs_71_cast_fp16)[name = tensor<string, []>("channels_mean_71_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_71_cast_fp16 = sub(x = inputs_71_cast_fp16, y = channels_mean_71_cast_fp16)[name = tensor<string, []>("zero_mean_71_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_71_cast_fp16 = mul(x = zero_mean_71_cast_fp16, y = zero_mean_71_cast_fp16)[name = tensor<string, []>("zero_mean_sq_71_cast_fp16")];
            tensor<int32, [1]> var_2643 = const()[name = tensor<string, []>("op_2643"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_2644_cast_fp16 = reduce_mean(axes = var_2643, keep_dims = var_2474, x = zero_mean_sq_71_cast_fp16)[name = tensor<string, []>("op_2644_cast_fp16")];
            tensor<fp16, []> var_2645_to_fp16 = const()[name = tensor<string, []>("op_2645_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_2646_cast_fp16 = add(x = var_2644_cast_fp16, y = var_2645_to_fp16)[name = tensor<string, []>("op_2646_cast_fp16")];
            tensor<fp16, []> denom_71_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_71_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_71_cast_fp16 = rsqrt(epsilon = denom_71_epsilon_0_to_fp16, x = var_2646_cast_fp16)[name = tensor<string, []>("denom_71_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_71_cast_fp16 = mul(x = zero_mean_71_cast_fp16, y = denom_71_cast_fp16)[name = tensor<string, []>("out_71_cast_fp16")];
            tensor<fp16, [768]> input_115_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_115_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(297732032)))];
            tensor<fp16, [768]> input_115_beta_0_to_fp16 = const()[name = tensor<string, []>("input_115_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(297733632)))];
            tensor<fp16, []> input_115_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_115_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> input_115_cast_fp16 = batch_norm(beta = input_115_beta_0_to_fp16, epsilon = input_115_epsilon_0_to_fp16, gamma = input_115_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_71_cast_fp16)[name = tensor<string, []>("input_115_cast_fp16")];
            tensor<int32, [2]> var_2657 = const()[name = tensor<string, []>("op_2657"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2659 = const()[name = tensor<string, []>("op_2659"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_117_pad_type_0 = const()[name = tensor<string, []>("input_117_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_117_pad_0 = const()[name = tensor<string, []>("input_117_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [3072, 768, 1, 1]> layers_11_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_11_fc1_weight_to_fp16"), val = tensor<fp16, [3072, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(297735232)))];
            tensor<fp16, [3072]> layers_11_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_11_fc1_bias_to_fp16"), val = tensor<fp16, [3072]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(302453888)))];
            tensor<fp16, [1, 3072, 1, 1]> input_117_cast_fp16 = conv(bias = layers_11_fc1_bias_to_fp16, dilations = var_2659, groups = var_2473, pad = input_117_pad_0, pad_type = input_117_pad_type_0, strides = var_2657, weight = layers_11_fc1_weight_to_fp16, x = input_115_cast_fp16)[name = tensor<string, []>("input_117_cast_fp16")];
            tensor<string, []> input_mode_0 = const()[name = tensor<string, []>("input_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 3072, 1, 1]> input_cast_fp16 = gelu(mode = input_mode_0, x = input_117_cast_fp16)[name = tensor<string, []>("input_cast_fp16")];
            tensor<int32, [2]> var_2665 = const()[name = tensor<string, []>("op_2665"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2667 = const()[name = tensor<string, []>("op_2667"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_25_pad_type_0 = const()[name = tensor<string, []>("hidden_states_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_25_pad_0 = const()[name = tensor<string, []>("hidden_states_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 3072, 1, 1]> layers_11_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_11_fc2_weight_to_fp16"), val = tensor<fp16, [768, 3072, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(302460096)))];
            tensor<fp16, [768]> layers_11_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_11_fc2_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(307178752)))];
            tensor<fp16, [1, 768, 1, 1]> hidden_states_25_cast_fp16 = conv(bias = layers_11_fc2_bias_to_fp16, dilations = var_2667, groups = var_2473, pad = hidden_states_25_pad_0, pad_type = hidden_states_25_pad_type_0, strides = var_2665, weight = layers_11_fc2_weight_to_fp16, x = input_cast_fp16)[name = tensor<string, []>("hidden_states_25_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_cast_fp16 = add(x = inputs_71_cast_fp16, y = hidden_states_25_cast_fp16)[name = tensor<string, []>("inputs_cast_fp16")];
            tensor<bool, []> var_2677 = const()[name = tensor<string, []>("op_2677"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_2681 = const()[name = tensor<string, []>("op_2681"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_cast_fp16 = reduce_mean(axes = var_2681, keep_dims = var_2677, x = inputs_cast_fp16)[name = tensor<string, []>("channels_mean_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_cast_fp16 = sub(x = inputs_cast_fp16, y = channels_mean_cast_fp16)[name = tensor<string, []>("zero_mean_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_cast_fp16 = mul(x = zero_mean_cast_fp16, y = zero_mean_cast_fp16)[name = tensor<string, []>("zero_mean_sq_cast_fp16")];
            tensor<int32, [1]> var_2685 = const()[name = tensor<string, []>("op_2685"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_2686_cast_fp16 = reduce_mean(axes = var_2685, keep_dims = var_2677, x = zero_mean_sq_cast_fp16)[name = tensor<string, []>("op_2686_cast_fp16")];
            tensor<fp16, []> var_2687_to_fp16 = const()[name = tensor<string, []>("op_2687_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_2688_cast_fp16 = add(x = var_2686_cast_fp16, y = var_2687_to_fp16)[name = tensor<string, []>("op_2688_cast_fp16")];
            tensor<fp16, []> denom_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_cast_fp16 = rsqrt(epsilon = denom_epsilon_0_to_fp16, x = var_2688_cast_fp16)[name = tensor<string, []>("denom_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_cast_fp16 = mul(x = zero_mean_cast_fp16, y = denom_cast_fp16)[name = tensor<string, []>("out_cast_fp16")];
            tensor<fp16, [768]> hidden_states_gamma_0_to_fp16 = const()[name = tensor<string, []>("hidden_states_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(307180352)))];
            tensor<fp16, [768]> hidden_states_beta_0_to_fp16 = const()[name = tensor<string, []>("hidden_states_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(307181952)))];
            tensor<fp16, []> hidden_states_epsilon_0_to_fp16 = const()[name = tensor<string, []>("hidden_states_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> hidden_states_cast_fp16 = batch_norm(beta = hidden_states_beta_0_to_fp16, epsilon = hidden_states_epsilon_0_to_fp16, gamma = hidden_states_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_cast_fp16)[name = tensor<string, []>("hidden_states_cast_fp16")];
            tensor<int32, [1]> var_2698_axes_0 = const()[name = tensor<string, []>("op_2698_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [1, 768, 1]> var_2698_cast_fp16 = squeeze(axes = var_2698_axes_0, x = hidden_states_cast_fp16)[name = tensor<string, []>("op_2698_cast_fp16")];
            tensor<int32, [3]> var_2701_perm_0 = const()[name = tensor<string, []>("op_2701_perm_0"), val = tensor<int32, [3]>([0, 2, 1])];
            tensor<fp16, [51865]> linear_0_bias_0_to_fp16 = const()[name = tensor<string, []>("linear_0_bias_0_to_fp16"), val = tensor<fp16, [51865]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(307183552)))];
            tensor<fp16, [1, 1, 768]> transpose_0 = transpose(perm = var_2701_perm_0, x = var_2698_cast_fp16)[name = tensor<string, []>("transpose_0")];
            tensor<fp16, [1, 1, 51865]> logits = linear(bias = linear_0_bias_0_to_fp16, weight = embed_tokens_weight_to_fp16, x = transpose_0)[name = tensor<string, []>("linear_0_cast_fp16")];
            tensor<int32, []> var_2705 = const()[name = tensor<string, []>("op_2705"), val = tensor<int32, []>(1)];
            tensor<bool, []> obj_171_interleave_0 = const()[name = tensor<string, []>("obj_171_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 9216, 1, 1]> key_cache_updates = concat(axis = var_2705, interleave = obj_171_interleave_0, values = (current_key_1_cast_fp16, current_key_3_cast_fp16, current_key_5_cast_fp16, current_key_7_cast_fp16, current_key_9_cast_fp16, current_key_11_cast_fp16, current_key_13_cast_fp16, current_key_15_cast_fp16, current_key_17_cast_fp16, current_key_19_cast_fp16, current_key_21_cast_fp16, current_key_cast_fp16))[name = tensor<string, []>("obj_171_cast_fp16")];
            tensor<int32, []> var_2708 = const()[name = tensor<string, []>("op_2708"), val = tensor<int32, []>(1)];
            tensor<bool, []> obj_173_interleave_0 = const()[name = tensor<string, []>("obj_173_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 9216, 1, 1]> value_cache_updates = concat(axis = var_2708, interleave = obj_173_interleave_0, values = (current_value_1_cast_fp16, current_value_3_cast_fp16, current_value_5_cast_fp16, current_value_7_cast_fp16, current_value_9_cast_fp16, current_value_11_cast_fp16, current_value_13_cast_fp16, current_value_15_cast_fp16, current_value_17_cast_fp16, current_value_19_cast_fp16, current_value_21_cast_fp16, current_value_cast_fp16))[name = tensor<string, []>("obj_173_cast_fp16")];
            tensor<int32, [4]> var_2719_begin_0 = const()[name = tensor<string, []>("op_2719_begin_0"), val = tensor<int32, [4]>([0, 3, 0, 0])];
            tensor<int32, [4]> var_2719_end_0 = const()[name = tensor<string, []>("op_2719_end_0"), val = tensor<int32, [4]>([1, 4, 1, 1500])];
            tensor<bool, [4]> var_2719_end_mask_0 = const()[name = tensor<string, []>("op_2719_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_2719_cast_fp16 = slice_by_index(begin = var_2719_begin_0, end = var_2719_end_0, end_mask = var_2719_end_mask_0, x = obj_83_cast_fp16)[name = tensor<string, []>("op_2719_cast_fp16")];
            tensor<int32, [4]> var_2722_begin_0 = const()[name = tensor<string, []>("op_2722_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2722_end_0 = const()[name = tensor<string, []>("op_2722_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2722_end_mask_0 = const()[name = tensor<string, []>("op_2722_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_2722_squeeze_mask_0 = const()[name = tensor<string, []>("op_2722_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_2722_cast_fp16 = slice_by_index(begin = var_2722_begin_0, end = var_2722_end_0, end_mask = var_2722_end_mask_0, squeeze_mask = var_2722_squeeze_mask_0, x = var_2719_cast_fp16)[name = tensor<string, []>("op_2722_cast_fp16")];
            tensor<int32, [4]> var_2737_begin_0 = const()[name = tensor<string, []>("op_2737_begin_0"), val = tensor<int32, [4]>([0, 9, 0, 0])];
            tensor<int32, [4]> var_2737_end_0 = const()[name = tensor<string, []>("op_2737_end_0"), val = tensor<int32, [4]>([1, 10, 1, 1500])];
            tensor<bool, [4]> var_2737_end_mask_0 = const()[name = tensor<string, []>("op_2737_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_2737_cast_fp16 = slice_by_index(begin = var_2737_begin_0, end = var_2737_end_0, end_mask = var_2737_end_mask_0, x = obj_83_cast_fp16)[name = tensor<string, []>("op_2737_cast_fp16")];
            tensor<int32, [4]> var_2740_begin_0 = const()[name = tensor<string, []>("op_2740_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2740_end_0 = const()[name = tensor<string, []>("op_2740_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2740_end_mask_0 = const()[name = tensor<string, []>("op_2740_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_2740_squeeze_mask_0 = const()[name = tensor<string, []>("op_2740_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_2740_cast_fp16 = slice_by_index(begin = var_2740_begin_0, end = var_2740_end_0, end_mask = var_2740_end_mask_0, squeeze_mask = var_2740_squeeze_mask_0, x = var_2737_cast_fp16)[name = tensor<string, []>("op_2740_cast_fp16")];
            tensor<int32, [4]> var_2755_begin_0 = const()[name = tensor<string, []>("op_2755_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2755_end_0 = const()[name = tensor<string, []>("op_2755_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2755_end_mask_0 = const()[name = tensor<string, []>("op_2755_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_2755_cast_fp16 = slice_by_index(begin = var_2755_begin_0, end = var_2755_end_0, end_mask = var_2755_end_mask_0, x = obj_125_cast_fp16)[name = tensor<string, []>("op_2755_cast_fp16")];
            tensor<int32, [4]> var_2758_begin_0 = const()[name = tensor<string, []>("op_2758_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2758_end_0 = const()[name = tensor<string, []>("op_2758_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2758_end_mask_0 = const()[name = tensor<string, []>("op_2758_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_2758_squeeze_mask_0 = const()[name = tensor<string, []>("op_2758_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_2758_cast_fp16 = slice_by_index(begin = var_2758_begin_0, end = var_2758_end_0, end_mask = var_2758_end_mask_0, squeeze_mask = var_2758_squeeze_mask_0, x = var_2755_cast_fp16)[name = tensor<string, []>("op_2758_cast_fp16")];
            tensor<int32, [4]> var_2773_begin_0 = const()[name = tensor<string, []>("op_2773_begin_0"), val = tensor<int32, [4]>([0, 4, 0, 0])];
            tensor<int32, [4]> var_2773_end_0 = const()[name = tensor<string, []>("op_2773_end_0"), val = tensor<int32, [4]>([1, 5, 1, 1500])];
            tensor<bool, [4]> var_2773_end_mask_0 = const()[name = tensor<string, []>("op_2773_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_2773_cast_fp16 = slice_by_index(begin = var_2773_begin_0, end = var_2773_end_0, end_mask = var_2773_end_mask_0, x = obj_125_cast_fp16)[name = tensor<string, []>("op_2773_cast_fp16")];
            tensor<int32, [4]> var_2776_begin_0 = const()[name = tensor<string, []>("op_2776_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2776_end_0 = const()[name = tensor<string, []>("op_2776_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2776_end_mask_0 = const()[name = tensor<string, []>("op_2776_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_2776_squeeze_mask_0 = const()[name = tensor<string, []>("op_2776_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_2776_cast_fp16 = slice_by_index(begin = var_2776_begin_0, end = var_2776_end_0, end_mask = var_2776_end_mask_0, squeeze_mask = var_2776_squeeze_mask_0, x = var_2773_cast_fp16)[name = tensor<string, []>("op_2776_cast_fp16")];
            tensor<int32, [4]> var_2791_begin_0 = const()[name = tensor<string, []>("op_2791_begin_0"), val = tensor<int32, [4]>([0, 7, 0, 0])];
            tensor<int32, [4]> var_2791_end_0 = const()[name = tensor<string, []>("op_2791_end_0"), val = tensor<int32, [4]>([1, 8, 1, 1500])];
            tensor<bool, [4]> var_2791_end_mask_0 = const()[name = tensor<string, []>("op_2791_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_2791_cast_fp16 = slice_by_index(begin = var_2791_begin_0, end = var_2791_end_0, end_mask = var_2791_end_mask_0, x = obj_125_cast_fp16)[name = tensor<string, []>("op_2791_cast_fp16")];
            tensor<int32, [4]> var_2794_begin_0 = const()[name = tensor<string, []>("op_2794_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2794_end_0 = const()[name = tensor<string, []>("op_2794_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2794_end_mask_0 = const()[name = tensor<string, []>("op_2794_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_2794_squeeze_mask_0 = const()[name = tensor<string, []>("op_2794_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_2794_cast_fp16 = slice_by_index(begin = var_2794_begin_0, end = var_2794_end_0, end_mask = var_2794_end_mask_0, squeeze_mask = var_2794_squeeze_mask_0, x = var_2791_cast_fp16)[name = tensor<string, []>("op_2794_cast_fp16")];
            tensor<int32, [4]> var_2809_begin_0 = const()[name = tensor<string, []>("op_2809_begin_0"), val = tensor<int32, [4]>([0, 8, 0, 0])];
            tensor<int32, [4]> var_2809_end_0 = const()[name = tensor<string, []>("op_2809_end_0"), val = tensor<int32, [4]>([1, 9, 1, 1500])];
            tensor<bool, [4]> var_2809_end_mask_0 = const()[name = tensor<string, []>("op_2809_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_2809_cast_fp16 = slice_by_index(begin = var_2809_begin_0, end = var_2809_end_0, end_mask = var_2809_end_mask_0, x = obj_125_cast_fp16)[name = tensor<string, []>("op_2809_cast_fp16")];
            tensor<int32, [4]> var_2812_begin_0 = const()[name = tensor<string, []>("op_2812_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2812_end_0 = const()[name = tensor<string, []>("op_2812_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2812_end_mask_0 = const()[name = tensor<string, []>("op_2812_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_2812_squeeze_mask_0 = const()[name = tensor<string, []>("op_2812_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_2812_cast_fp16 = slice_by_index(begin = var_2812_begin_0, end = var_2812_end_0, end_mask = var_2812_end_mask_0, squeeze_mask = var_2812_squeeze_mask_0, x = var_2809_cast_fp16)[name = tensor<string, []>("op_2812_cast_fp16")];
            tensor<int32, [4]> var_2827_begin_0 = const()[name = tensor<string, []>("op_2827_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2827_end_0 = const()[name = tensor<string, []>("op_2827_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2827_end_mask_0 = const()[name = tensor<string, []>("op_2827_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_2827_cast_fp16 = slice_by_index(begin = var_2827_begin_0, end = var_2827_end_0, end_mask = var_2827_end_mask_0, x = obj_139_cast_fp16)[name = tensor<string, []>("op_2827_cast_fp16")];
            tensor<int32, [4]> var_2830_begin_0 = const()[name = tensor<string, []>("op_2830_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2830_end_0 = const()[name = tensor<string, []>("op_2830_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2830_end_mask_0 = const()[name = tensor<string, []>("op_2830_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_2830_squeeze_mask_0 = const()[name = tensor<string, []>("op_2830_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_2830_cast_fp16 = slice_by_index(begin = var_2830_begin_0, end = var_2830_end_0, end_mask = var_2830_end_mask_0, squeeze_mask = var_2830_squeeze_mask_0, x = var_2827_cast_fp16)[name = tensor<string, []>("op_2830_cast_fp16")];
            tensor<int32, [4]> var_2845_begin_0 = const()[name = tensor<string, []>("op_2845_begin_0"), val = tensor<int32, [4]>([0, 7, 0, 0])];
            tensor<int32, [4]> var_2845_end_0 = const()[name = tensor<string, []>("op_2845_end_0"), val = tensor<int32, [4]>([1, 8, 1, 1500])];
            tensor<bool, [4]> var_2845_end_mask_0 = const()[name = tensor<string, []>("op_2845_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_2845_cast_fp16 = slice_by_index(begin = var_2845_begin_0, end = var_2845_end_0, end_mask = var_2845_end_mask_0, x = obj_139_cast_fp16)[name = tensor<string, []>("op_2845_cast_fp16")];
            tensor<int32, [4]> var_2848_begin_0 = const()[name = tensor<string, []>("op_2848_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2848_end_0 = const()[name = tensor<string, []>("op_2848_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2848_end_mask_0 = const()[name = tensor<string, []>("op_2848_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_2848_squeeze_mask_0 = const()[name = tensor<string, []>("op_2848_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_2848_cast_fp16 = slice_by_index(begin = var_2848_begin_0, end = var_2848_end_0, end_mask = var_2848_end_mask_0, squeeze_mask = var_2848_squeeze_mask_0, x = var_2845_cast_fp16)[name = tensor<string, []>("op_2848_cast_fp16")];
            tensor<int32, [4]> var_2863_begin_0 = const()[name = tensor<string, []>("op_2863_begin_0"), val = tensor<int32, [4]>([0, 9, 0, 0])];
            tensor<int32, [4]> var_2863_end_0 = const()[name = tensor<string, []>("op_2863_end_0"), val = tensor<int32, [4]>([1, 10, 1, 1500])];
            tensor<bool, [4]> var_2863_end_mask_0 = const()[name = tensor<string, []>("op_2863_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_2863_cast_fp16 = slice_by_index(begin = var_2863_begin_0, end = var_2863_end_0, end_mask = var_2863_end_mask_0, x = obj_139_cast_fp16)[name = tensor<string, []>("op_2863_cast_fp16")];
            tensor<int32, [4]> var_2866_begin_0 = const()[name = tensor<string, []>("op_2866_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2866_end_0 = const()[name = tensor<string, []>("op_2866_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2866_end_mask_0 = const()[name = tensor<string, []>("op_2866_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_2866_squeeze_mask_0 = const()[name = tensor<string, []>("op_2866_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_2866_cast_fp16 = slice_by_index(begin = var_2866_begin_0, end = var_2866_end_0, end_mask = var_2866_end_mask_0, squeeze_mask = var_2866_squeeze_mask_0, x = var_2863_cast_fp16)[name = tensor<string, []>("op_2866_cast_fp16")];
            tensor<int32, [4]> var_2881_begin_0 = const()[name = tensor<string, []>("op_2881_begin_0"), val = tensor<int32, [4]>([0, 5, 0, 0])];
            tensor<int32, [4]> var_2881_end_0 = const()[name = tensor<string, []>("op_2881_end_0"), val = tensor<int32, [4]>([1, 6, 1, 1500])];
            tensor<bool, [4]> var_2881_end_mask_0 = const()[name = tensor<string, []>("op_2881_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_2881_cast_fp16 = slice_by_index(begin = var_2881_begin_0, end = var_2881_end_0, end_mask = var_2881_end_mask_0, x = obj_153_cast_fp16)[name = tensor<string, []>("op_2881_cast_fp16")];
            tensor<int32, [4]> var_2884_begin_0 = const()[name = tensor<string, []>("op_2884_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2884_end_0 = const()[name = tensor<string, []>("op_2884_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2884_end_mask_0 = const()[name = tensor<string, []>("op_2884_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_2884_squeeze_mask_0 = const()[name = tensor<string, []>("op_2884_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_2884_cast_fp16 = slice_by_index(begin = var_2884_begin_0, end = var_2884_end_0, end_mask = var_2884_end_mask_0, squeeze_mask = var_2884_squeeze_mask_0, x = var_2881_cast_fp16)[name = tensor<string, []>("op_2884_cast_fp16")];
            tensor<int32, []> var_2891 = const()[name = tensor<string, []>("op_2891"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_2892_interleave_0 = const()[name = tensor<string, []>("op_2892_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 10, 1500]> var_2892_cast_fp16 = concat(axis = var_2891, interleave = var_2892_interleave_0, values = (var_2722_cast_fp16, var_2740_cast_fp16, var_2758_cast_fp16, var_2776_cast_fp16, var_2794_cast_fp16, var_2812_cast_fp16, var_2830_cast_fp16, var_2848_cast_fp16, var_2866_cast_fp16, var_2884_cast_fp16))[name = tensor<string, []>("op_2892_cast_fp16")];
            tensor<int32, [1]> var_2894 = const()[name = tensor<string, []>("op_2894"), val = tensor<int32, [1]>([1])];
            tensor<bool, []> var_2895 = const()[name = tensor<string, []>("op_2895"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1500]> alignment_heads_weights = reduce_mean(axes = var_2894, keep_dims = var_2895, x = var_2892_cast_fp16)[name = tensor<string, []>("obj_cast_fp16")];
        } -> (logits, key_cache_updates, value_cache_updates, alignment_heads_weights);
}