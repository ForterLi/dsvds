program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "5.33.5"}, {"coremlc-version", "1877.40.3"}, {"coremltools-component-torch", "2.2.1"}, {"coremltools-source-dialect", "TorchScript"}, {"coremltools-version", "7.1"}})]
{
    func main<ios16>(tensor<int32, [1]> cache_length, tensor<fp16, [1, 224]> decoder_key_padding_mask, tensor<fp16, [1, 384, 1, 1500]> encoder_output_embeds, tensor<int32, [1]> input_ids, tensor<fp16, [1, 1536, 1, 224]> key_cache, tensor<fp16, [1, 224]> kv_cache_update_mask, tensor<fp16, [1, 1536, 1, 224]> value_cache) {
            tensor<int32, []> var_24_axis_0 = const()[name = tensor<string, []>("op_24_axis_0"), val = tensor<int32, []>(0)];
            tensor<int32, []> var_24_batch_dims_0 = const()[name = tensor<string, []>("op_24_batch_dims_0"), val = tensor<int32, []>(0)];
            tensor<fp16, [51865, 384]> embed_tokens_weight_to_fp16 = const()[name = tensor<string, []>("embed_tokens_weight_to_fp16"), val = tensor<fp16, [51865, 384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [1, 384]> var_24_cast_fp16 = gather(axis = var_24_axis_0, batch_dims = var_24_batch_dims_0, indices = input_ids, x = embed_tokens_weight_to_fp16)[name = tensor<string, []>("op_24_cast_fp16")];
            tensor<int32, []> var_28_axis_0 = const()[name = tensor<string, []>("op_28_axis_0"), val = tensor<int32, []>(0)];
            tensor<int32, []> var_28_batch_dims_0 = const()[name = tensor<string, []>("op_28_batch_dims_0"), val = tensor<int32, []>(0)];
            tensor<fp16, [448, 384]> embed_positions_weight_to_fp16 = const()[name = tensor<string, []>("embed_positions_weight_to_fp16"), val = tensor<fp16, [448, 384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39832448)))];
            tensor<fp16, [1, 384]> var_28_cast_fp16 = gather(axis = var_28_axis_0, batch_dims = var_28_batch_dims_0, indices = cache_length, x = embed_positions_weight_to_fp16)[name = tensor<string, []>("op_28_cast_fp16")];
            tensor<fp16, [1, 384]> hidden_states_1_cast_fp16 = add(x = var_24_cast_fp16, y = var_28_cast_fp16)[name = tensor<string, []>("hidden_states_1_cast_fp16")];
            tensor<int32, [1]> var_42_axes_0 = const()[name = tensor<string, []>("op_42_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [1, 384, 1]> var_42_cast_fp16 = expand_dims(axes = var_42_axes_0, x = hidden_states_1_cast_fp16)[name = tensor<string, []>("op_42_cast_fp16")];
            tensor<int32, [1]> inputs_1_axes_0 = const()[name = tensor<string, []>("inputs_1_axes_0"), val = tensor<int32, [1]>([3])];
            tensor<fp16, [1, 384, 1, 1]> inputs_1_cast_fp16 = expand_dims(axes = inputs_1_axes_0, x = var_42_cast_fp16)[name = tensor<string, []>("inputs_1_cast_fp16")];
            tensor<int32, [4]> tile_0 = const()[name = tensor<string, []>("tile_0"), val = tensor<int32, [4]>([384, 384, 384, 384])];
            tensor<int32, []> var_47_axis_0 = const()[name = tensor<string, []>("op_47_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 384, 1, 224]> var_47_cast_fp16_0, tensor<fp16, [1, 384, 1, 224]> var_47_cast_fp16_1, tensor<fp16, [1, 384, 1, 224]> var_47_cast_fp16_2, tensor<fp16, [1, 384, 1, 224]> var_47_cast_fp16_3 = split(axis = var_47_axis_0, split_sizes = tile_0, x = key_cache)[name = tensor<string, []>("op_47_cast_fp16")];
            tensor<int32, [4]> tile_1 = const()[name = tensor<string, []>("tile_1"), val = tensor<int32, [4]>([384, 384, 384, 384])];
            tensor<int32, []> var_54_axis_0 = const()[name = tensor<string, []>("op_54_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 384, 1, 224]> var_54_cast_fp16_0, tensor<fp16, [1, 384, 1, 224]> var_54_cast_fp16_1, tensor<fp16, [1, 384, 1, 224]> var_54_cast_fp16_2, tensor<fp16, [1, 384, 1, 224]> var_54_cast_fp16_3 = split(axis = var_54_axis_0, split_sizes = tile_1, x = value_cache)[name = tensor<string, []>("op_54_cast_fp16")];
            tensor<int32, []> var_64 = const()[name = tensor<string, []>("op_64"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_71 = const()[name = tensor<string, []>("op_71"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_72 = const()[name = tensor<string, []>("op_72"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_84 = const()[name = tensor<string, []>("op_84"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_1_cast_fp16 = reduce_mean(axes = var_84, keep_dims = var_72, x = inputs_1_cast_fp16)[name = tensor<string, []>("channels_mean_1_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> zero_mean_1_cast_fp16 = sub(x = inputs_1_cast_fp16, y = channels_mean_1_cast_fp16)[name = tensor<string, []>("zero_mean_1_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> zero_mean_sq_1_cast_fp16 = mul(x = zero_mean_1_cast_fp16, y = zero_mean_1_cast_fp16)[name = tensor<string, []>("zero_mean_sq_1_cast_fp16")];
            tensor<int32, [1]> var_88 = const()[name = tensor<string, []>("op_88"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_89_cast_fp16 = reduce_mean(axes = var_88, keep_dims = var_72, x = zero_mean_sq_1_cast_fp16)[name = tensor<string, []>("op_89_cast_fp16")];
            tensor<fp16, []> var_90_to_fp16 = const()[name = tensor<string, []>("op_90_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_91_cast_fp16 = add(x = var_89_cast_fp16, y = var_90_to_fp16)[name = tensor<string, []>("op_91_cast_fp16")];
            tensor<fp16, []> denom_1_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_1_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_1_cast_fp16 = rsqrt(epsilon = denom_1_epsilon_0_to_fp16, x = var_91_cast_fp16)[name = tensor<string, []>("denom_1_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> out_1_cast_fp16 = mul(x = zero_mean_1_cast_fp16, y = denom_1_cast_fp16)[name = tensor<string, []>("out_1_cast_fp16")];
            tensor<fp16, [384]> obj_1_mean_0_to_fp16 = const()[name = tensor<string, []>("obj_1_mean_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(40176576)))];
            tensor<fp16, [384]> obj_1_variance_0_to_fp16 = const()[name = tensor<string, []>("obj_1_variance_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(40177408)))];
            tensor<fp16, [384]> obj_1_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_1_gamma_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(40178240)))];
            tensor<fp16, [384]> obj_1_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_1_beta_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(40179072)))];
            tensor<fp16, []> obj_1_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_1_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 384, 1, 1]> obj_1_cast_fp16 = batch_norm(beta = obj_1_beta_0_to_fp16, epsilon = obj_1_epsilon_0_to_fp16, gamma = obj_1_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_1_cast_fp16)[name = tensor<string, []>("obj_1_cast_fp16")];
            tensor<int32, [2]> var_106 = const()[name = tensor<string, []>("op_106"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_108 = const()[name = tensor<string, []>("op_108"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_1_pad_type_0 = const()[name = tensor<string, []>("query_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_1_pad_0 = const()[name = tensor<string, []>("query_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_0_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(40179904)))];
            tensor<fp16, [384]> layers_0_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(40474880)))];
            tensor<fp16, [1, 384, 1, 1]> query_1_cast_fp16 = conv(bias = layers_0_self_attn_q_proj_bias_to_fp16, dilations = var_108, groups = var_71, pad = query_1_pad_0, pad_type = query_1_pad_type_0, strides = var_106, weight = layers_0_self_attn_q_proj_weight_to_fp16, x = obj_1_cast_fp16)[name = tensor<string, []>("query_1_cast_fp16")];
            tensor<int32, [2]> var_112 = const()[name = tensor<string, []>("op_112"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_114 = const()[name = tensor<string, []>("op_114"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_1_pad_type_0 = const()[name = tensor<string, []>("current_key_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_1_pad_0 = const()[name = tensor<string, []>("current_key_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_0_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(40475712)))];
            tensor<fp16, [1, 384, 1, 1]> current_key_1_cast_fp16 = conv(dilations = var_114, groups = var_71, pad = current_key_1_pad_0, pad_type = current_key_1_pad_type_0, strides = var_112, weight = layers_0_self_attn_k_proj_weight_to_fp16, x = obj_1_cast_fp16)[name = tensor<string, []>("current_key_1_cast_fp16")];
            tensor<int32, [2]> var_119 = const()[name = tensor<string, []>("op_119"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_121 = const()[name = tensor<string, []>("op_121"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_1_pad_type_0 = const()[name = tensor<string, []>("current_value_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_1_pad_0 = const()[name = tensor<string, []>("current_value_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_0_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(40770688)))];
            tensor<fp16, [384]> layers_0_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(41065664)))];
            tensor<fp16, [1, 384, 1, 1]> current_value_1_cast_fp16 = conv(bias = layers_0_self_attn_v_proj_bias_to_fp16, dilations = var_121, groups = var_71, pad = current_value_1_pad_0, pad_type = current_value_1_pad_type_0, strides = var_119, weight = layers_0_self_attn_v_proj_weight_to_fp16, x = obj_1_cast_fp16)[name = tensor<string, []>("current_value_1_cast_fp16")];
            tensor<int32, [1]> var_125_axes_0 = const()[name = tensor<string, []>("op_125_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 224]> var_125_cast_fp16 = expand_dims(axes = var_125_axes_0, x = kv_cache_update_mask)[name = tensor<string, []>("op_125_cast_fp16")];
            tensor<int32, [1]> var_126_axes_0 = const()[name = tensor<string, []>("op_126_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [1, 1, 1, 224]> var_126_cast_fp16 = expand_dims(axes = var_126_axes_0, x = var_125_cast_fp16)[name = tensor<string, []>("op_126_cast_fp16")];
            tensor<fp16, [1, 384, 1, 224]> var_128_cast_fp16 = mul(x = current_key_1_cast_fp16, y = var_126_cast_fp16)[name = tensor<string, []>("op_128_cast_fp16")];
            tensor<fp16, []> var_65_to_fp16 = const()[name = tensor<string, []>("op_65_to_fp16"), val = tensor<fp16, []>(0x1p+0)];
            tensor<fp16, [1, 1, 1, 224]> var_129_cast_fp16 = sub(x = var_65_to_fp16, y = var_126_cast_fp16)[name = tensor<string, []>("op_129_cast_fp16")];
            tensor<fp16, [1, 384, 1, 224]> var_130_cast_fp16 = mul(x = var_47_cast_fp16_0, y = var_129_cast_fp16)[name = tensor<string, []>("op_130_cast_fp16")];
            tensor<fp16, [1, 384, 1, 224]> key_1_cast_fp16 = add(x = var_128_cast_fp16, y = var_130_cast_fp16)[name = tensor<string, []>("key_1_cast_fp16")];
            tensor<fp16, [1, 384, 1, 224]> var_132_cast_fp16 = mul(x = current_value_1_cast_fp16, y = var_126_cast_fp16)[name = tensor<string, []>("op_132_cast_fp16")];
            tensor<fp16, [1, 384, 1, 224]> var_134_cast_fp16 = mul(x = var_54_cast_fp16_0, y = var_129_cast_fp16)[name = tensor<string, []>("op_134_cast_fp16")];
            tensor<fp16, [1, 384, 1, 224]> value_1_cast_fp16 = add(x = var_132_cast_fp16, y = var_134_cast_fp16)[name = tensor<string, []>("value_1_cast_fp16")];
            tensor<int32, [4]> var_137 = const()[name = tensor<string, []>("op_137"), val = tensor<int32, [4]>([1, 6, 64, -1])];
            tensor<fp16, [1, 6, 64, 1]> var_138_cast_fp16 = reshape(shape = var_137, x = query_1_cast_fp16)[name = tensor<string, []>("op_138_cast_fp16")];
            tensor<fp16, []> var_139_to_fp16 = const()[name = tensor<string, []>("op_139_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 6, 64, 1]> var_140_cast_fp16 = mul(x = var_138_cast_fp16, y = var_139_to_fp16)[name = tensor<string, []>("op_140_cast_fp16")];
            tensor<int32, [4]> var_141 = const()[name = tensor<string, []>("op_141"), val = tensor<int32, [4]>([1, 6, 64, -1])];
            tensor<fp16, [1, 6, 64, 224]> var_142_cast_fp16 = reshape(shape = var_141, x = key_1_cast_fp16)[name = tensor<string, []>("op_142_cast_fp16")];
            tensor<bool, []> mh_w_1_transpose_x_0 = const()[name = tensor<string, []>("mh_w_1_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_1_transpose_y_0 = const()[name = tensor<string, []>("mh_w_1_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 6, 1, 224]> mh_w_1_cast_fp16 = matmul(transpose_x = mh_w_1_transpose_x_0, transpose_y = mh_w_1_transpose_y_0, x = var_140_cast_fp16, y = var_142_cast_fp16)[name = tensor<string, []>("mh_w_1_cast_fp16")];
            tensor<int32, [1]> var_146_axes_0 = const()[name = tensor<string, []>("op_146_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 224]> var_146_cast_fp16 = expand_dims(axes = var_146_axes_0, x = decoder_key_padding_mask)[name = tensor<string, []>("op_146_cast_fp16")];
            tensor<int32, [1]> var_147_axes_0 = const()[name = tensor<string, []>("op_147_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [1, 1, 1, 224]> var_147_cast_fp16 = expand_dims(axes = var_147_axes_0, x = var_146_cast_fp16)[name = tensor<string, []>("op_147_cast_fp16")];
            tensor<fp16, [1, 6, 1, 224]> mh_w_3_cast_fp16 = add(x = mh_w_1_cast_fp16, y = var_147_cast_fp16)[name = tensor<string, []>("mh_w_3_cast_fp16")];
            tensor<fp16, [1, 6, 1, 224]> var_150_cast_fp16 = softmax(axis = var_64, x = mh_w_3_cast_fp16)[name = tensor<string, []>("op_150_cast_fp16")];
            tensor<int32, [4]> var_151 = const()[name = tensor<string, []>("op_151"), val = tensor<int32, [4]>([1, 6, 64, -1])];
            tensor<fp16, [1, 6, 64, 224]> var_152_cast_fp16 = reshape(shape = var_151, x = value_1_cast_fp16)[name = tensor<string, []>("op_152_cast_fp16")];
            tensor<bool, []> attn_1_transpose_x_0 = const()[name = tensor<string, []>("attn_1_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_1_transpose_y_0 = const()[name = tensor<string, []>("attn_1_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 6, 64, 1]> attn_1_cast_fp16 = matmul(transpose_x = attn_1_transpose_x_0, transpose_y = attn_1_transpose_y_0, x = var_152_cast_fp16, y = var_150_cast_fp16)[name = tensor<string, []>("attn_1_cast_fp16")];
            tensor<int32, [4]> var_155 = const()[name = tensor<string, []>("op_155"), val = tensor<int32, [4]>([1, 384, 1, -1])];
            tensor<fp16, [1, 384, 1, 1]> input_1_cast_fp16 = reshape(shape = var_155, x = attn_1_cast_fp16)[name = tensor<string, []>("input_1_cast_fp16")];
            tensor<int32, [2]> var_159 = const()[name = tensor<string, []>("op_159"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_161 = const()[name = tensor<string, []>("op_161"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_7_pad_type_0 = const()[name = tensor<string, []>("obj_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_7_pad_0 = const()[name = tensor<string, []>("obj_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_0_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(41066496)))];
            tensor<fp16, [384]> layers_0_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(41361472)))];
            tensor<fp16, [1, 384, 1, 1]> obj_7_cast_fp16 = conv(bias = layers_0_self_attn_o_proj_bias_to_fp16, dilations = var_161, groups = var_71, pad = obj_7_pad_0, pad_type = obj_7_pad_type_0, strides = var_159, weight = layers_0_self_attn_o_proj_weight_to_fp16, x = input_1_cast_fp16)[name = tensor<string, []>("obj_7_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> inputs_3_cast_fp16 = add(x = inputs_1_cast_fp16, y = obj_7_cast_fp16)[name = tensor<string, []>("inputs_3_cast_fp16")];
            tensor<int32, [1]> var_171 = const()[name = tensor<string, []>("op_171"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_3_cast_fp16 = reduce_mean(axes = var_171, keep_dims = var_72, x = inputs_3_cast_fp16)[name = tensor<string, []>("channels_mean_3_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> zero_mean_3_cast_fp16 = sub(x = inputs_3_cast_fp16, y = channels_mean_3_cast_fp16)[name = tensor<string, []>("zero_mean_3_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> zero_mean_sq_3_cast_fp16 = mul(x = zero_mean_3_cast_fp16, y = zero_mean_3_cast_fp16)[name = tensor<string, []>("zero_mean_sq_3_cast_fp16")];
            tensor<int32, [1]> var_175 = const()[name = tensor<string, []>("op_175"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_176_cast_fp16 = reduce_mean(axes = var_175, keep_dims = var_72, x = zero_mean_sq_3_cast_fp16)[name = tensor<string, []>("op_176_cast_fp16")];
            tensor<fp16, []> var_177_to_fp16 = const()[name = tensor<string, []>("op_177_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_178_cast_fp16 = add(x = var_176_cast_fp16, y = var_177_to_fp16)[name = tensor<string, []>("op_178_cast_fp16")];
            tensor<fp16, []> denom_3_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_3_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_3_cast_fp16 = rsqrt(epsilon = denom_3_epsilon_0_to_fp16, x = var_178_cast_fp16)[name = tensor<string, []>("denom_3_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> out_3_cast_fp16 = mul(x = zero_mean_3_cast_fp16, y = denom_3_cast_fp16)[name = tensor<string, []>("out_3_cast_fp16")];
            tensor<fp16, [384]> obj_9_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_9_gamma_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(41362304)))];
            tensor<fp16, [384]> obj_9_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_9_beta_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(41363136)))];
            tensor<fp16, []> obj_9_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_9_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 384, 1, 1]> obj_9_cast_fp16 = batch_norm(beta = obj_9_beta_0_to_fp16, epsilon = obj_9_epsilon_0_to_fp16, gamma = obj_9_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_3_cast_fp16)[name = tensor<string, []>("obj_9_cast_fp16")];
            tensor<int32, [2]> var_193 = const()[name = tensor<string, []>("op_193"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_195 = const()[name = tensor<string, []>("op_195"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_3_pad_type_0 = const()[name = tensor<string, []>("query_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_3_pad_0 = const()[name = tensor<string, []>("query_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_0_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(41363968)))];
            tensor<fp16, [384]> layers_0_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(41658944)))];
            tensor<fp16, [1, 384, 1, 1]> query_3_cast_fp16 = conv(bias = layers_0_encoder_attn_q_proj_bias_to_fp16, dilations = var_195, groups = var_71, pad = query_3_pad_0, pad_type = query_3_pad_type_0, strides = var_193, weight = layers_0_encoder_attn_q_proj_weight_to_fp16, x = obj_9_cast_fp16)[name = tensor<string, []>("query_3_cast_fp16")];
            tensor<int32, [2]> var_199 = const()[name = tensor<string, []>("op_199"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_201 = const()[name = tensor<string, []>("op_201"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_3_pad_type_0 = const()[name = tensor<string, []>("key_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_3_pad_0 = const()[name = tensor<string, []>("key_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_0_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(41659776)))];
            tensor<fp16, [1, 384, 1, 1500]> key_3_cast_fp16 = conv(dilations = var_201, groups = var_71, pad = key_3_pad_0, pad_type = key_3_pad_type_0, strides = var_199, weight = layers_0_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_3_cast_fp16")];
            tensor<int32, [2]> var_206 = const()[name = tensor<string, []>("op_206"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_208 = const()[name = tensor<string, []>("op_208"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_3_pad_type_0 = const()[name = tensor<string, []>("value_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_3_pad_0 = const()[name = tensor<string, []>("value_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_0_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(41954752)))];
            tensor<fp16, [384]> layers_0_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42249728)))];
            tensor<fp16, [1, 384, 1, 1500]> value_3_cast_fp16 = conv(bias = layers_0_encoder_attn_v_proj_bias_to_fp16, dilations = var_208, groups = var_71, pad = value_3_pad_0, pad_type = value_3_pad_type_0, strides = var_206, weight = layers_0_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_3_cast_fp16")];
            tensor<int32, [4]> var_212 = const()[name = tensor<string, []>("op_212"), val = tensor<int32, [4]>([1, 6, 64, -1])];
            tensor<fp16, [1, 6, 64, 1]> var_213_cast_fp16 = reshape(shape = var_212, x = query_3_cast_fp16)[name = tensor<string, []>("op_213_cast_fp16")];
            tensor<fp16, []> var_214_to_fp16 = const()[name = tensor<string, []>("op_214_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 6, 64, 1]> var_215_cast_fp16 = mul(x = var_213_cast_fp16, y = var_214_to_fp16)[name = tensor<string, []>("op_215_cast_fp16")];
            tensor<int32, [4]> var_216 = const()[name = tensor<string, []>("op_216"), val = tensor<int32, [4]>([1, 6, 64, -1])];
            tensor<fp16, [1, 6, 64, 1500]> var_217_cast_fp16 = reshape(shape = var_216, x = key_3_cast_fp16)[name = tensor<string, []>("op_217_cast_fp16")];
            tensor<bool, []> mh_w_5_transpose_x_0 = const()[name = tensor<string, []>("mh_w_5_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_5_transpose_y_0 = const()[name = tensor<string, []>("mh_w_5_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 6, 1, 1500]> mh_w_5_cast_fp16 = matmul(transpose_x = mh_w_5_transpose_x_0, transpose_y = mh_w_5_transpose_y_0, x = var_215_cast_fp16, y = var_217_cast_fp16)[name = tensor<string, []>("mh_w_5_cast_fp16")];
            tensor<fp16, [1, 6, 1, 1500]> obj_13_cast_fp16 = softmax(axis = var_64, x = mh_w_5_cast_fp16)[name = tensor<string, []>("obj_13_cast_fp16")];
            tensor<int32, [4]> var_221 = const()[name = tensor<string, []>("op_221"), val = tensor<int32, [4]>([1, 6, 64, -1])];
            tensor<fp16, [1, 6, 64, 1500]> var_222_cast_fp16 = reshape(shape = var_221, x = value_3_cast_fp16)[name = tensor<string, []>("op_222_cast_fp16")];
            tensor<bool, []> attn_3_transpose_x_0 = const()[name = tensor<string, []>("attn_3_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_3_transpose_y_0 = const()[name = tensor<string, []>("attn_3_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 6, 64, 1]> attn_3_cast_fp16 = matmul(transpose_x = attn_3_transpose_x_0, transpose_y = attn_3_transpose_y_0, x = var_222_cast_fp16, y = obj_13_cast_fp16)[name = tensor<string, []>("attn_3_cast_fp16")];
            tensor<int32, [4]> var_225 = const()[name = tensor<string, []>("op_225"), val = tensor<int32, [4]>([1, 384, 1, -1])];
            tensor<fp16, [1, 384, 1, 1]> input_3_cast_fp16 = reshape(shape = var_225, x = attn_3_cast_fp16)[name = tensor<string, []>("input_3_cast_fp16")];
            tensor<int32, [2]> var_229 = const()[name = tensor<string, []>("op_229"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_231 = const()[name = tensor<string, []>("op_231"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_11_pad_type_0 = const()[name = tensor<string, []>("obj_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_11_pad_0 = const()[name = tensor<string, []>("obj_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_0_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42250560)))];
            tensor<fp16, [384]> layers_0_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42545536)))];
            tensor<fp16, [1, 384, 1, 1]> obj_11_cast_fp16 = conv(bias = layers_0_encoder_attn_o_proj_bias_to_fp16, dilations = var_231, groups = var_71, pad = obj_11_pad_0, pad_type = obj_11_pad_type_0, strides = var_229, weight = layers_0_encoder_attn_o_proj_weight_to_fp16, x = input_3_cast_fp16)[name = tensor<string, []>("obj_11_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> inputs_5_cast_fp16 = add(x = inputs_3_cast_fp16, y = obj_11_cast_fp16)[name = tensor<string, []>("inputs_5_cast_fp16")];
            tensor<int32, [1]> var_237 = const()[name = tensor<string, []>("op_237"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_5_cast_fp16 = reduce_mean(axes = var_237, keep_dims = var_72, x = inputs_5_cast_fp16)[name = tensor<string, []>("channels_mean_5_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> zero_mean_5_cast_fp16 = sub(x = inputs_5_cast_fp16, y = channels_mean_5_cast_fp16)[name = tensor<string, []>("zero_mean_5_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> zero_mean_sq_5_cast_fp16 = mul(x = zero_mean_5_cast_fp16, y = zero_mean_5_cast_fp16)[name = tensor<string, []>("zero_mean_sq_5_cast_fp16")];
            tensor<int32, [1]> var_241 = const()[name = tensor<string, []>("op_241"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_242_cast_fp16 = reduce_mean(axes = var_241, keep_dims = var_72, x = zero_mean_sq_5_cast_fp16)[name = tensor<string, []>("op_242_cast_fp16")];
            tensor<fp16, []> var_243_to_fp16 = const()[name = tensor<string, []>("op_243_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_244_cast_fp16 = add(x = var_242_cast_fp16, y = var_243_to_fp16)[name = tensor<string, []>("op_244_cast_fp16")];
            tensor<fp16, []> denom_5_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_5_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_5_cast_fp16 = rsqrt(epsilon = denom_5_epsilon_0_to_fp16, x = var_244_cast_fp16)[name = tensor<string, []>("denom_5_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> out_5_cast_fp16 = mul(x = zero_mean_5_cast_fp16, y = denom_5_cast_fp16)[name = tensor<string, []>("out_5_cast_fp16")];
            tensor<fp16, [384]> input_5_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_5_gamma_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42546368)))];
            tensor<fp16, [384]> input_5_beta_0_to_fp16 = const()[name = tensor<string, []>("input_5_beta_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42547200)))];
            tensor<fp16, []> input_5_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_5_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 384, 1, 1]> input_5_cast_fp16 = batch_norm(beta = input_5_beta_0_to_fp16, epsilon = input_5_epsilon_0_to_fp16, gamma = input_5_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_5_cast_fp16)[name = tensor<string, []>("input_5_cast_fp16")];
            tensor<int32, [2]> var_255 = const()[name = tensor<string, []>("op_255"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_257 = const()[name = tensor<string, []>("op_257"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_7_pad_type_0 = const()[name = tensor<string, []>("input_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_7_pad_0 = const()[name = tensor<string, []>("input_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 384, 1, 1]> layers_0_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_fc1_weight_to_fp16"), val = tensor<fp16, [1536, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42548032)))];
            tensor<fp16, [1536]> layers_0_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_fc1_bias_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(43727744)))];
            tensor<fp16, [1, 1536, 1, 1]> input_7_cast_fp16 = conv(bias = layers_0_fc1_bias_to_fp16, dilations = var_257, groups = var_71, pad = input_7_pad_0, pad_type = input_7_pad_type_0, strides = var_255, weight = layers_0_fc1_weight_to_fp16, x = input_5_cast_fp16)[name = tensor<string, []>("input_7_cast_fp16")];
            tensor<string, []> input_9_mode_0 = const()[name = tensor<string, []>("input_9_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 1536, 1, 1]> input_9_cast_fp16 = gelu(mode = input_9_mode_0, x = input_7_cast_fp16)[name = tensor<string, []>("input_9_cast_fp16")];
            tensor<int32, [2]> var_263 = const()[name = tensor<string, []>("op_263"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_265 = const()[name = tensor<string, []>("op_265"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_3_pad_type_0 = const()[name = tensor<string, []>("hidden_states_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_3_pad_0 = const()[name = tensor<string, []>("hidden_states_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 1536, 1, 1]> layers_0_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_fc2_weight_to_fp16"), val = tensor<fp16, [384, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(43730880)))];
            tensor<fp16, [384]> layers_0_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_fc2_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(44910592)))];
            tensor<fp16, [1, 384, 1, 1]> hidden_states_3_cast_fp16 = conv(bias = layers_0_fc2_bias_to_fp16, dilations = var_265, groups = var_71, pad = hidden_states_3_pad_0, pad_type = hidden_states_3_pad_type_0, strides = var_263, weight = layers_0_fc2_weight_to_fp16, x = input_9_cast_fp16)[name = tensor<string, []>("hidden_states_3_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> inputs_7_cast_fp16 = add(x = inputs_5_cast_fp16, y = hidden_states_3_cast_fp16)[name = tensor<string, []>("inputs_7_cast_fp16")];
            tensor<int32, []> var_278 = const()[name = tensor<string, []>("op_278"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_285 = const()[name = tensor<string, []>("op_285"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_286 = const()[name = tensor<string, []>("op_286"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_298 = const()[name = tensor<string, []>("op_298"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_7_cast_fp16 = reduce_mean(axes = var_298, keep_dims = var_286, x = inputs_7_cast_fp16)[name = tensor<string, []>("channels_mean_7_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> zero_mean_7_cast_fp16 = sub(x = inputs_7_cast_fp16, y = channels_mean_7_cast_fp16)[name = tensor<string, []>("zero_mean_7_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> zero_mean_sq_7_cast_fp16 = mul(x = zero_mean_7_cast_fp16, y = zero_mean_7_cast_fp16)[name = tensor<string, []>("zero_mean_sq_7_cast_fp16")];
            tensor<int32, [1]> var_302 = const()[name = tensor<string, []>("op_302"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_303_cast_fp16 = reduce_mean(axes = var_302, keep_dims = var_286, x = zero_mean_sq_7_cast_fp16)[name = tensor<string, []>("op_303_cast_fp16")];
            tensor<fp16, []> var_304_to_fp16 = const()[name = tensor<string, []>("op_304_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_305_cast_fp16 = add(x = var_303_cast_fp16, y = var_304_to_fp16)[name = tensor<string, []>("op_305_cast_fp16")];
            tensor<fp16, []> denom_7_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_7_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_7_cast_fp16 = rsqrt(epsilon = denom_7_epsilon_0_to_fp16, x = var_305_cast_fp16)[name = tensor<string, []>("denom_7_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> out_7_cast_fp16 = mul(x = zero_mean_7_cast_fp16, y = denom_7_cast_fp16)[name = tensor<string, []>("out_7_cast_fp16")];
            tensor<fp16, [384]> obj_15_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_15_gamma_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(44911424)))];
            tensor<fp16, [384]> obj_15_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_15_beta_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(44912256)))];
            tensor<fp16, []> obj_15_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_15_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 384, 1, 1]> obj_15_cast_fp16 = batch_norm(beta = obj_15_beta_0_to_fp16, epsilon = obj_15_epsilon_0_to_fp16, gamma = obj_15_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_7_cast_fp16)[name = tensor<string, []>("obj_15_cast_fp16")];
            tensor<int32, [2]> var_320 = const()[name = tensor<string, []>("op_320"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_322 = const()[name = tensor<string, []>("op_322"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_5_pad_type_0 = const()[name = tensor<string, []>("query_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_5_pad_0 = const()[name = tensor<string, []>("query_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_1_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(44913088)))];
            tensor<fp16, [384]> layers_1_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(45208064)))];
            tensor<fp16, [1, 384, 1, 1]> query_5_cast_fp16 = conv(bias = layers_1_self_attn_q_proj_bias_to_fp16, dilations = var_322, groups = var_285, pad = query_5_pad_0, pad_type = query_5_pad_type_0, strides = var_320, weight = layers_1_self_attn_q_proj_weight_to_fp16, x = obj_15_cast_fp16)[name = tensor<string, []>("query_5_cast_fp16")];
            tensor<int32, [2]> var_326 = const()[name = tensor<string, []>("op_326"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_328 = const()[name = tensor<string, []>("op_328"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_3_pad_type_0 = const()[name = tensor<string, []>("current_key_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_3_pad_0 = const()[name = tensor<string, []>("current_key_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_1_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(45208896)))];
            tensor<fp16, [1, 384, 1, 1]> current_key_3_cast_fp16 = conv(dilations = var_328, groups = var_285, pad = current_key_3_pad_0, pad_type = current_key_3_pad_type_0, strides = var_326, weight = layers_1_self_attn_k_proj_weight_to_fp16, x = obj_15_cast_fp16)[name = tensor<string, []>("current_key_3_cast_fp16")];
            tensor<int32, [2]> var_333 = const()[name = tensor<string, []>("op_333"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_335 = const()[name = tensor<string, []>("op_335"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_3_pad_type_0 = const()[name = tensor<string, []>("current_value_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_3_pad_0 = const()[name = tensor<string, []>("current_value_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_1_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(45503872)))];
            tensor<fp16, [384]> layers_1_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(45798848)))];
            tensor<fp16, [1, 384, 1, 1]> current_value_3_cast_fp16 = conv(bias = layers_1_self_attn_v_proj_bias_to_fp16, dilations = var_335, groups = var_285, pad = current_value_3_pad_0, pad_type = current_value_3_pad_type_0, strides = var_333, weight = layers_1_self_attn_v_proj_weight_to_fp16, x = obj_15_cast_fp16)[name = tensor<string, []>("current_value_3_cast_fp16")];
            tensor<fp16, [1, 384, 1, 224]> var_342_cast_fp16 = mul(x = current_key_3_cast_fp16, y = var_126_cast_fp16)[name = tensor<string, []>("op_342_cast_fp16")];
            tensor<fp16, [1, 384, 1, 224]> var_344_cast_fp16 = mul(x = var_47_cast_fp16_1, y = var_129_cast_fp16)[name = tensor<string, []>("op_344_cast_fp16")];
            tensor<fp16, [1, 384, 1, 224]> key_5_cast_fp16 = add(x = var_342_cast_fp16, y = var_344_cast_fp16)[name = tensor<string, []>("key_5_cast_fp16")];
            tensor<fp16, [1, 384, 1, 224]> var_346_cast_fp16 = mul(x = current_value_3_cast_fp16, y = var_126_cast_fp16)[name = tensor<string, []>("op_346_cast_fp16")];
            tensor<fp16, [1, 384, 1, 224]> var_348_cast_fp16 = mul(x = var_54_cast_fp16_1, y = var_129_cast_fp16)[name = tensor<string, []>("op_348_cast_fp16")];
            tensor<fp16, [1, 384, 1, 224]> value_5_cast_fp16 = add(x = var_346_cast_fp16, y = var_348_cast_fp16)[name = tensor<string, []>("value_5_cast_fp16")];
            tensor<int32, [4]> var_351 = const()[name = tensor<string, []>("op_351"), val = tensor<int32, [4]>([1, 6, 64, -1])];
            tensor<fp16, [1, 6, 64, 1]> var_352_cast_fp16 = reshape(shape = var_351, x = query_5_cast_fp16)[name = tensor<string, []>("op_352_cast_fp16")];
            tensor<fp16, []> var_353_to_fp16 = const()[name = tensor<string, []>("op_353_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 6, 64, 1]> var_354_cast_fp16 = mul(x = var_352_cast_fp16, y = var_353_to_fp16)[name = tensor<string, []>("op_354_cast_fp16")];
            tensor<int32, [4]> var_355 = const()[name = tensor<string, []>("op_355"), val = tensor<int32, [4]>([1, 6, 64, -1])];
            tensor<fp16, [1, 6, 64, 224]> var_356_cast_fp16 = reshape(shape = var_355, x = key_5_cast_fp16)[name = tensor<string, []>("op_356_cast_fp16")];
            tensor<bool, []> mh_w_7_transpose_x_0 = const()[name = tensor<string, []>("mh_w_7_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_7_transpose_y_0 = const()[name = tensor<string, []>("mh_w_7_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 6, 1, 224]> mh_w_7_cast_fp16 = matmul(transpose_x = mh_w_7_transpose_x_0, transpose_y = mh_w_7_transpose_y_0, x = var_354_cast_fp16, y = var_356_cast_fp16)[name = tensor<string, []>("mh_w_7_cast_fp16")];
            tensor<fp16, [1, 6, 1, 224]> mh_w_9_cast_fp16 = add(x = mh_w_7_cast_fp16, y = var_147_cast_fp16)[name = tensor<string, []>("mh_w_9_cast_fp16")];
            tensor<fp16, [1, 6, 1, 224]> var_364_cast_fp16 = softmax(axis = var_278, x = mh_w_9_cast_fp16)[name = tensor<string, []>("op_364_cast_fp16")];
            tensor<int32, [4]> var_365 = const()[name = tensor<string, []>("op_365"), val = tensor<int32, [4]>([1, 6, 64, -1])];
            tensor<fp16, [1, 6, 64, 224]> var_366_cast_fp16 = reshape(shape = var_365, x = value_5_cast_fp16)[name = tensor<string, []>("op_366_cast_fp16")];
            tensor<bool, []> attn_5_transpose_x_0 = const()[name = tensor<string, []>("attn_5_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_5_transpose_y_0 = const()[name = tensor<string, []>("attn_5_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 6, 64, 1]> attn_5_cast_fp16 = matmul(transpose_x = attn_5_transpose_x_0, transpose_y = attn_5_transpose_y_0, x = var_366_cast_fp16, y = var_364_cast_fp16)[name = tensor<string, []>("attn_5_cast_fp16")];
            tensor<int32, [4]> var_369 = const()[name = tensor<string, []>("op_369"), val = tensor<int32, [4]>([1, 384, 1, -1])];
            tensor<fp16, [1, 384, 1, 1]> input_11_cast_fp16 = reshape(shape = var_369, x = attn_5_cast_fp16)[name = tensor<string, []>("input_11_cast_fp16")];
            tensor<int32, [2]> var_373 = const()[name = tensor<string, []>("op_373"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_375 = const()[name = tensor<string, []>("op_375"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_21_pad_type_0 = const()[name = tensor<string, []>("obj_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_21_pad_0 = const()[name = tensor<string, []>("obj_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_1_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(45799680)))];
            tensor<fp16, [384]> layers_1_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(46094656)))];
            tensor<fp16, [1, 384, 1, 1]> obj_21_cast_fp16 = conv(bias = layers_1_self_attn_o_proj_bias_to_fp16, dilations = var_375, groups = var_285, pad = obj_21_pad_0, pad_type = obj_21_pad_type_0, strides = var_373, weight = layers_1_self_attn_o_proj_weight_to_fp16, x = input_11_cast_fp16)[name = tensor<string, []>("obj_21_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> inputs_9_cast_fp16 = add(x = inputs_7_cast_fp16, y = obj_21_cast_fp16)[name = tensor<string, []>("inputs_9_cast_fp16")];
            tensor<int32, [1]> var_385 = const()[name = tensor<string, []>("op_385"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_9_cast_fp16 = reduce_mean(axes = var_385, keep_dims = var_286, x = inputs_9_cast_fp16)[name = tensor<string, []>("channels_mean_9_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> zero_mean_9_cast_fp16 = sub(x = inputs_9_cast_fp16, y = channels_mean_9_cast_fp16)[name = tensor<string, []>("zero_mean_9_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> zero_mean_sq_9_cast_fp16 = mul(x = zero_mean_9_cast_fp16, y = zero_mean_9_cast_fp16)[name = tensor<string, []>("zero_mean_sq_9_cast_fp16")];
            tensor<int32, [1]> var_389 = const()[name = tensor<string, []>("op_389"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_390_cast_fp16 = reduce_mean(axes = var_389, keep_dims = var_286, x = zero_mean_sq_9_cast_fp16)[name = tensor<string, []>("op_390_cast_fp16")];
            tensor<fp16, []> var_391_to_fp16 = const()[name = tensor<string, []>("op_391_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_392_cast_fp16 = add(x = var_390_cast_fp16, y = var_391_to_fp16)[name = tensor<string, []>("op_392_cast_fp16")];
            tensor<fp16, []> denom_9_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_9_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_9_cast_fp16 = rsqrt(epsilon = denom_9_epsilon_0_to_fp16, x = var_392_cast_fp16)[name = tensor<string, []>("denom_9_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> out_9_cast_fp16 = mul(x = zero_mean_9_cast_fp16, y = denom_9_cast_fp16)[name = tensor<string, []>("out_9_cast_fp16")];
            tensor<fp16, [384]> obj_23_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_23_gamma_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(46095488)))];
            tensor<fp16, [384]> obj_23_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_23_beta_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(46096320)))];
            tensor<fp16, []> obj_23_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_23_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 384, 1, 1]> obj_23_cast_fp16 = batch_norm(beta = obj_23_beta_0_to_fp16, epsilon = obj_23_epsilon_0_to_fp16, gamma = obj_23_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_9_cast_fp16)[name = tensor<string, []>("obj_23_cast_fp16")];
            tensor<int32, [2]> var_407 = const()[name = tensor<string, []>("op_407"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_409 = const()[name = tensor<string, []>("op_409"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_7_pad_type_0 = const()[name = tensor<string, []>("query_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_7_pad_0 = const()[name = tensor<string, []>("query_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_1_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(46097152)))];
            tensor<fp16, [384]> layers_1_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(46392128)))];
            tensor<fp16, [1, 384, 1, 1]> query_7_cast_fp16 = conv(bias = layers_1_encoder_attn_q_proj_bias_to_fp16, dilations = var_409, groups = var_285, pad = query_7_pad_0, pad_type = query_7_pad_type_0, strides = var_407, weight = layers_1_encoder_attn_q_proj_weight_to_fp16, x = obj_23_cast_fp16)[name = tensor<string, []>("query_7_cast_fp16")];
            tensor<int32, [2]> var_413 = const()[name = tensor<string, []>("op_413"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_415 = const()[name = tensor<string, []>("op_415"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_7_pad_type_0 = const()[name = tensor<string, []>("key_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_7_pad_0 = const()[name = tensor<string, []>("key_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_1_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(46392960)))];
            tensor<fp16, [1, 384, 1, 1500]> key_7_cast_fp16 = conv(dilations = var_415, groups = var_285, pad = key_7_pad_0, pad_type = key_7_pad_type_0, strides = var_413, weight = layers_1_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_7_cast_fp16")];
            tensor<int32, [2]> var_420 = const()[name = tensor<string, []>("op_420"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_422 = const()[name = tensor<string, []>("op_422"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_7_pad_type_0 = const()[name = tensor<string, []>("value_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_7_pad_0 = const()[name = tensor<string, []>("value_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_1_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(46687936)))];
            tensor<fp16, [384]> layers_1_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(46982912)))];
            tensor<fp16, [1, 384, 1, 1500]> value_7_cast_fp16 = conv(bias = layers_1_encoder_attn_v_proj_bias_to_fp16, dilations = var_422, groups = var_285, pad = value_7_pad_0, pad_type = value_7_pad_type_0, strides = var_420, weight = layers_1_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_7_cast_fp16")];
            tensor<int32, [4]> var_426 = const()[name = tensor<string, []>("op_426"), val = tensor<int32, [4]>([1, 6, 64, -1])];
            tensor<fp16, [1, 6, 64, 1]> var_427_cast_fp16 = reshape(shape = var_426, x = query_7_cast_fp16)[name = tensor<string, []>("op_427_cast_fp16")];
            tensor<fp16, []> var_428_to_fp16 = const()[name = tensor<string, []>("op_428_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 6, 64, 1]> var_429_cast_fp16 = mul(x = var_427_cast_fp16, y = var_428_to_fp16)[name = tensor<string, []>("op_429_cast_fp16")];
            tensor<int32, [4]> var_430 = const()[name = tensor<string, []>("op_430"), val = tensor<int32, [4]>([1, 6, 64, -1])];
            tensor<fp16, [1, 6, 64, 1500]> var_431_cast_fp16 = reshape(shape = var_430, x = key_7_cast_fp16)[name = tensor<string, []>("op_431_cast_fp16")];
            tensor<bool, []> mh_w_11_transpose_x_0 = const()[name = tensor<string, []>("mh_w_11_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_11_transpose_y_0 = const()[name = tensor<string, []>("mh_w_11_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 6, 1, 1500]> mh_w_11_cast_fp16 = matmul(transpose_x = mh_w_11_transpose_x_0, transpose_y = mh_w_11_transpose_y_0, x = var_429_cast_fp16, y = var_431_cast_fp16)[name = tensor<string, []>("mh_w_11_cast_fp16")];
            tensor<fp16, [1, 6, 1, 1500]> obj_27_cast_fp16 = softmax(axis = var_278, x = mh_w_11_cast_fp16)[name = tensor<string, []>("obj_27_cast_fp16")];
            tensor<int32, [4]> var_435 = const()[name = tensor<string, []>("op_435"), val = tensor<int32, [4]>([1, 6, 64, -1])];
            tensor<fp16, [1, 6, 64, 1500]> var_436_cast_fp16 = reshape(shape = var_435, x = value_7_cast_fp16)[name = tensor<string, []>("op_436_cast_fp16")];
            tensor<bool, []> attn_7_transpose_x_0 = const()[name = tensor<string, []>("attn_7_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_7_transpose_y_0 = const()[name = tensor<string, []>("attn_7_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 6, 64, 1]> attn_7_cast_fp16 = matmul(transpose_x = attn_7_transpose_x_0, transpose_y = attn_7_transpose_y_0, x = var_436_cast_fp16, y = obj_27_cast_fp16)[name = tensor<string, []>("attn_7_cast_fp16")];
            tensor<int32, [4]> var_439 = const()[name = tensor<string, []>("op_439"), val = tensor<int32, [4]>([1, 384, 1, -1])];
            tensor<fp16, [1, 384, 1, 1]> input_13_cast_fp16 = reshape(shape = var_439, x = attn_7_cast_fp16)[name = tensor<string, []>("input_13_cast_fp16")];
            tensor<int32, [2]> var_443 = const()[name = tensor<string, []>("op_443"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_445 = const()[name = tensor<string, []>("op_445"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_25_pad_type_0 = const()[name = tensor<string, []>("obj_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_25_pad_0 = const()[name = tensor<string, []>("obj_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_1_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(46983744)))];
            tensor<fp16, [384]> layers_1_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47278720)))];
            tensor<fp16, [1, 384, 1, 1]> obj_25_cast_fp16 = conv(bias = layers_1_encoder_attn_o_proj_bias_to_fp16, dilations = var_445, groups = var_285, pad = obj_25_pad_0, pad_type = obj_25_pad_type_0, strides = var_443, weight = layers_1_encoder_attn_o_proj_weight_to_fp16, x = input_13_cast_fp16)[name = tensor<string, []>("obj_25_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> inputs_11_cast_fp16 = add(x = inputs_9_cast_fp16, y = obj_25_cast_fp16)[name = tensor<string, []>("inputs_11_cast_fp16")];
            tensor<int32, [1]> var_451 = const()[name = tensor<string, []>("op_451"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_11_cast_fp16 = reduce_mean(axes = var_451, keep_dims = var_286, x = inputs_11_cast_fp16)[name = tensor<string, []>("channels_mean_11_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> zero_mean_11_cast_fp16 = sub(x = inputs_11_cast_fp16, y = channels_mean_11_cast_fp16)[name = tensor<string, []>("zero_mean_11_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> zero_mean_sq_11_cast_fp16 = mul(x = zero_mean_11_cast_fp16, y = zero_mean_11_cast_fp16)[name = tensor<string, []>("zero_mean_sq_11_cast_fp16")];
            tensor<int32, [1]> var_455 = const()[name = tensor<string, []>("op_455"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_456_cast_fp16 = reduce_mean(axes = var_455, keep_dims = var_286, x = zero_mean_sq_11_cast_fp16)[name = tensor<string, []>("op_456_cast_fp16")];
            tensor<fp16, []> var_457_to_fp16 = const()[name = tensor<string, []>("op_457_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_458_cast_fp16 = add(x = var_456_cast_fp16, y = var_457_to_fp16)[name = tensor<string, []>("op_458_cast_fp16")];
            tensor<fp16, []> denom_11_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_11_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_11_cast_fp16 = rsqrt(epsilon = denom_11_epsilon_0_to_fp16, x = var_458_cast_fp16)[name = tensor<string, []>("denom_11_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> out_11_cast_fp16 = mul(x = zero_mean_11_cast_fp16, y = denom_11_cast_fp16)[name = tensor<string, []>("out_11_cast_fp16")];
            tensor<fp16, [384]> input_15_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_15_gamma_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47279552)))];
            tensor<fp16, [384]> input_15_beta_0_to_fp16 = const()[name = tensor<string, []>("input_15_beta_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47280384)))];
            tensor<fp16, []> input_15_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_15_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 384, 1, 1]> input_15_cast_fp16 = batch_norm(beta = input_15_beta_0_to_fp16, epsilon = input_15_epsilon_0_to_fp16, gamma = input_15_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_11_cast_fp16)[name = tensor<string, []>("input_15_cast_fp16")];
            tensor<int32, [2]> var_469 = const()[name = tensor<string, []>("op_469"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_471 = const()[name = tensor<string, []>("op_471"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_17_pad_type_0 = const()[name = tensor<string, []>("input_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_17_pad_0 = const()[name = tensor<string, []>("input_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 384, 1, 1]> layers_1_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_fc1_weight_to_fp16"), val = tensor<fp16, [1536, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47281216)))];
            tensor<fp16, [1536]> layers_1_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_fc1_bias_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48460928)))];
            tensor<fp16, [1, 1536, 1, 1]> input_17_cast_fp16 = conv(bias = layers_1_fc1_bias_to_fp16, dilations = var_471, groups = var_285, pad = input_17_pad_0, pad_type = input_17_pad_type_0, strides = var_469, weight = layers_1_fc1_weight_to_fp16, x = input_15_cast_fp16)[name = tensor<string, []>("input_17_cast_fp16")];
            tensor<string, []> input_19_mode_0 = const()[name = tensor<string, []>("input_19_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 1536, 1, 1]> input_19_cast_fp16 = gelu(mode = input_19_mode_0, x = input_17_cast_fp16)[name = tensor<string, []>("input_19_cast_fp16")];
            tensor<int32, [2]> var_477 = const()[name = tensor<string, []>("op_477"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_479 = const()[name = tensor<string, []>("op_479"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_5_pad_type_0 = const()[name = tensor<string, []>("hidden_states_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_5_pad_0 = const()[name = tensor<string, []>("hidden_states_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 1536, 1, 1]> layers_1_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_fc2_weight_to_fp16"), val = tensor<fp16, [384, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48464064)))];
            tensor<fp16, [384]> layers_1_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_fc2_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(49643776)))];
            tensor<fp16, [1, 384, 1, 1]> hidden_states_5_cast_fp16 = conv(bias = layers_1_fc2_bias_to_fp16, dilations = var_479, groups = var_285, pad = hidden_states_5_pad_0, pad_type = hidden_states_5_pad_type_0, strides = var_477, weight = layers_1_fc2_weight_to_fp16, x = input_19_cast_fp16)[name = tensor<string, []>("hidden_states_5_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> inputs_13_cast_fp16 = add(x = inputs_11_cast_fp16, y = hidden_states_5_cast_fp16)[name = tensor<string, []>("inputs_13_cast_fp16")];
            tensor<int32, []> var_492 = const()[name = tensor<string, []>("op_492"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_499 = const()[name = tensor<string, []>("op_499"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_500 = const()[name = tensor<string, []>("op_500"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_512 = const()[name = tensor<string, []>("op_512"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_13_cast_fp16 = reduce_mean(axes = var_512, keep_dims = var_500, x = inputs_13_cast_fp16)[name = tensor<string, []>("channels_mean_13_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> zero_mean_13_cast_fp16 = sub(x = inputs_13_cast_fp16, y = channels_mean_13_cast_fp16)[name = tensor<string, []>("zero_mean_13_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> zero_mean_sq_13_cast_fp16 = mul(x = zero_mean_13_cast_fp16, y = zero_mean_13_cast_fp16)[name = tensor<string, []>("zero_mean_sq_13_cast_fp16")];
            tensor<int32, [1]> var_516 = const()[name = tensor<string, []>("op_516"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_517_cast_fp16 = reduce_mean(axes = var_516, keep_dims = var_500, x = zero_mean_sq_13_cast_fp16)[name = tensor<string, []>("op_517_cast_fp16")];
            tensor<fp16, []> var_518_to_fp16 = const()[name = tensor<string, []>("op_518_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_519_cast_fp16 = add(x = var_517_cast_fp16, y = var_518_to_fp16)[name = tensor<string, []>("op_519_cast_fp16")];
            tensor<fp16, []> denom_13_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_13_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_13_cast_fp16 = rsqrt(epsilon = denom_13_epsilon_0_to_fp16, x = var_519_cast_fp16)[name = tensor<string, []>("denom_13_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> out_13_cast_fp16 = mul(x = zero_mean_13_cast_fp16, y = denom_13_cast_fp16)[name = tensor<string, []>("out_13_cast_fp16")];
            tensor<fp16, [384]> obj_29_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_29_gamma_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(49644608)))];
            tensor<fp16, [384]> obj_29_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_29_beta_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(49645440)))];
            tensor<fp16, []> obj_29_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_29_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 384, 1, 1]> obj_29_cast_fp16 = batch_norm(beta = obj_29_beta_0_to_fp16, epsilon = obj_29_epsilon_0_to_fp16, gamma = obj_29_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_13_cast_fp16)[name = tensor<string, []>("obj_29_cast_fp16")];
            tensor<int32, [2]> var_534 = const()[name = tensor<string, []>("op_534"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_536 = const()[name = tensor<string, []>("op_536"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_9_pad_type_0 = const()[name = tensor<string, []>("query_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_9_pad_0 = const()[name = tensor<string, []>("query_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_2_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(49646272)))];
            tensor<fp16, [384]> layers_2_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(49941248)))];
            tensor<fp16, [1, 384, 1, 1]> query_9_cast_fp16 = conv(bias = layers_2_self_attn_q_proj_bias_to_fp16, dilations = var_536, groups = var_499, pad = query_9_pad_0, pad_type = query_9_pad_type_0, strides = var_534, weight = layers_2_self_attn_q_proj_weight_to_fp16, x = obj_29_cast_fp16)[name = tensor<string, []>("query_9_cast_fp16")];
            tensor<int32, [2]> var_540 = const()[name = tensor<string, []>("op_540"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_542 = const()[name = tensor<string, []>("op_542"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_5_pad_type_0 = const()[name = tensor<string, []>("current_key_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_5_pad_0 = const()[name = tensor<string, []>("current_key_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_2_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(49942080)))];
            tensor<fp16, [1, 384, 1, 1]> current_key_5_cast_fp16 = conv(dilations = var_542, groups = var_499, pad = current_key_5_pad_0, pad_type = current_key_5_pad_type_0, strides = var_540, weight = layers_2_self_attn_k_proj_weight_to_fp16, x = obj_29_cast_fp16)[name = tensor<string, []>("current_key_5_cast_fp16")];
            tensor<int32, [2]> var_547 = const()[name = tensor<string, []>("op_547"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_549 = const()[name = tensor<string, []>("op_549"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_5_pad_type_0 = const()[name = tensor<string, []>("current_value_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_5_pad_0 = const()[name = tensor<string, []>("current_value_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_2_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(50237056)))];
            tensor<fp16, [384]> layers_2_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(50532032)))];
            tensor<fp16, [1, 384, 1, 1]> current_value_5_cast_fp16 = conv(bias = layers_2_self_attn_v_proj_bias_to_fp16, dilations = var_549, groups = var_499, pad = current_value_5_pad_0, pad_type = current_value_5_pad_type_0, strides = var_547, weight = layers_2_self_attn_v_proj_weight_to_fp16, x = obj_29_cast_fp16)[name = tensor<string, []>("current_value_5_cast_fp16")];
            tensor<fp16, [1, 384, 1, 224]> var_556_cast_fp16 = mul(x = current_key_5_cast_fp16, y = var_126_cast_fp16)[name = tensor<string, []>("op_556_cast_fp16")];
            tensor<fp16, [1, 384, 1, 224]> var_558_cast_fp16 = mul(x = var_47_cast_fp16_2, y = var_129_cast_fp16)[name = tensor<string, []>("op_558_cast_fp16")];
            tensor<fp16, [1, 384, 1, 224]> key_9_cast_fp16 = add(x = var_556_cast_fp16, y = var_558_cast_fp16)[name = tensor<string, []>("key_9_cast_fp16")];
            tensor<fp16, [1, 384, 1, 224]> var_560_cast_fp16 = mul(x = current_value_5_cast_fp16, y = var_126_cast_fp16)[name = tensor<string, []>("op_560_cast_fp16")];
            tensor<fp16, [1, 384, 1, 224]> var_562_cast_fp16 = mul(x = var_54_cast_fp16_2, y = var_129_cast_fp16)[name = tensor<string, []>("op_562_cast_fp16")];
            tensor<fp16, [1, 384, 1, 224]> value_9_cast_fp16 = add(x = var_560_cast_fp16, y = var_562_cast_fp16)[name = tensor<string, []>("value_9_cast_fp16")];
            tensor<int32, [4]> var_565 = const()[name = tensor<string, []>("op_565"), val = tensor<int32, [4]>([1, 6, 64, -1])];
            tensor<fp16, [1, 6, 64, 1]> var_566_cast_fp16 = reshape(shape = var_565, x = query_9_cast_fp16)[name = tensor<string, []>("op_566_cast_fp16")];
            tensor<fp16, []> var_567_to_fp16 = const()[name = tensor<string, []>("op_567_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 6, 64, 1]> var_568_cast_fp16 = mul(x = var_566_cast_fp16, y = var_567_to_fp16)[name = tensor<string, []>("op_568_cast_fp16")];
            tensor<int32, [4]> var_569 = const()[name = tensor<string, []>("op_569"), val = tensor<int32, [4]>([1, 6, 64, -1])];
            tensor<fp16, [1, 6, 64, 224]> var_570_cast_fp16 = reshape(shape = var_569, x = key_9_cast_fp16)[name = tensor<string, []>("op_570_cast_fp16")];
            tensor<bool, []> mh_w_13_transpose_x_0 = const()[name = tensor<string, []>("mh_w_13_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_13_transpose_y_0 = const()[name = tensor<string, []>("mh_w_13_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 6, 1, 224]> mh_w_13_cast_fp16 = matmul(transpose_x = mh_w_13_transpose_x_0, transpose_y = mh_w_13_transpose_y_0, x = var_568_cast_fp16, y = var_570_cast_fp16)[name = tensor<string, []>("mh_w_13_cast_fp16")];
            tensor<fp16, [1, 6, 1, 224]> mh_w_15_cast_fp16 = add(x = mh_w_13_cast_fp16, y = var_147_cast_fp16)[name = tensor<string, []>("mh_w_15_cast_fp16")];
            tensor<fp16, [1, 6, 1, 224]> var_578_cast_fp16 = softmax(axis = var_492, x = mh_w_15_cast_fp16)[name = tensor<string, []>("op_578_cast_fp16")];
            tensor<int32, [4]> var_579 = const()[name = tensor<string, []>("op_579"), val = tensor<int32, [4]>([1, 6, 64, -1])];
            tensor<fp16, [1, 6, 64, 224]> var_580_cast_fp16 = reshape(shape = var_579, x = value_9_cast_fp16)[name = tensor<string, []>("op_580_cast_fp16")];
            tensor<bool, []> attn_9_transpose_x_0 = const()[name = tensor<string, []>("attn_9_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_9_transpose_y_0 = const()[name = tensor<string, []>("attn_9_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 6, 64, 1]> attn_9_cast_fp16 = matmul(transpose_x = attn_9_transpose_x_0, transpose_y = attn_9_transpose_y_0, x = var_580_cast_fp16, y = var_578_cast_fp16)[name = tensor<string, []>("attn_9_cast_fp16")];
            tensor<int32, [4]> var_583 = const()[name = tensor<string, []>("op_583"), val = tensor<int32, [4]>([1, 384, 1, -1])];
            tensor<fp16, [1, 384, 1, 1]> input_21_cast_fp16 = reshape(shape = var_583, x = attn_9_cast_fp16)[name = tensor<string, []>("input_21_cast_fp16")];
            tensor<int32, [2]> var_587 = const()[name = tensor<string, []>("op_587"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_589 = const()[name = tensor<string, []>("op_589"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_35_pad_type_0 = const()[name = tensor<string, []>("obj_35_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_35_pad_0 = const()[name = tensor<string, []>("obj_35_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_2_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(50532864)))];
            tensor<fp16, [384]> layers_2_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(50827840)))];
            tensor<fp16, [1, 384, 1, 1]> obj_35_cast_fp16 = conv(bias = layers_2_self_attn_o_proj_bias_to_fp16, dilations = var_589, groups = var_499, pad = obj_35_pad_0, pad_type = obj_35_pad_type_0, strides = var_587, weight = layers_2_self_attn_o_proj_weight_to_fp16, x = input_21_cast_fp16)[name = tensor<string, []>("obj_35_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> inputs_15_cast_fp16 = add(x = inputs_13_cast_fp16, y = obj_35_cast_fp16)[name = tensor<string, []>("inputs_15_cast_fp16")];
            tensor<int32, [1]> var_599 = const()[name = tensor<string, []>("op_599"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_15_cast_fp16 = reduce_mean(axes = var_599, keep_dims = var_500, x = inputs_15_cast_fp16)[name = tensor<string, []>("channels_mean_15_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> zero_mean_15_cast_fp16 = sub(x = inputs_15_cast_fp16, y = channels_mean_15_cast_fp16)[name = tensor<string, []>("zero_mean_15_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> zero_mean_sq_15_cast_fp16 = mul(x = zero_mean_15_cast_fp16, y = zero_mean_15_cast_fp16)[name = tensor<string, []>("zero_mean_sq_15_cast_fp16")];
            tensor<int32, [1]> var_603 = const()[name = tensor<string, []>("op_603"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_604_cast_fp16 = reduce_mean(axes = var_603, keep_dims = var_500, x = zero_mean_sq_15_cast_fp16)[name = tensor<string, []>("op_604_cast_fp16")];
            tensor<fp16, []> var_605_to_fp16 = const()[name = tensor<string, []>("op_605_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_606_cast_fp16 = add(x = var_604_cast_fp16, y = var_605_to_fp16)[name = tensor<string, []>("op_606_cast_fp16")];
            tensor<fp16, []> denom_15_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_15_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_15_cast_fp16 = rsqrt(epsilon = denom_15_epsilon_0_to_fp16, x = var_606_cast_fp16)[name = tensor<string, []>("denom_15_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> out_15_cast_fp16 = mul(x = zero_mean_15_cast_fp16, y = denom_15_cast_fp16)[name = tensor<string, []>("out_15_cast_fp16")];
            tensor<fp16, [384]> obj_37_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_37_gamma_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(50828672)))];
            tensor<fp16, [384]> obj_37_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_37_beta_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(50829504)))];
            tensor<fp16, []> obj_37_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_37_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 384, 1, 1]> obj_37_cast_fp16 = batch_norm(beta = obj_37_beta_0_to_fp16, epsilon = obj_37_epsilon_0_to_fp16, gamma = obj_37_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_15_cast_fp16)[name = tensor<string, []>("obj_37_cast_fp16")];
            tensor<int32, [2]> var_621 = const()[name = tensor<string, []>("op_621"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_623 = const()[name = tensor<string, []>("op_623"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_11_pad_type_0 = const()[name = tensor<string, []>("query_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_11_pad_0 = const()[name = tensor<string, []>("query_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_2_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(50830336)))];
            tensor<fp16, [384]> layers_2_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(51125312)))];
            tensor<fp16, [1, 384, 1, 1]> query_11_cast_fp16 = conv(bias = layers_2_encoder_attn_q_proj_bias_to_fp16, dilations = var_623, groups = var_499, pad = query_11_pad_0, pad_type = query_11_pad_type_0, strides = var_621, weight = layers_2_encoder_attn_q_proj_weight_to_fp16, x = obj_37_cast_fp16)[name = tensor<string, []>("query_11_cast_fp16")];
            tensor<int32, [2]> var_627 = const()[name = tensor<string, []>("op_627"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_629 = const()[name = tensor<string, []>("op_629"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_11_pad_type_0 = const()[name = tensor<string, []>("key_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_11_pad_0 = const()[name = tensor<string, []>("key_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_2_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(51126144)))];
            tensor<fp16, [1, 384, 1, 1500]> key_11_cast_fp16 = conv(dilations = var_629, groups = var_499, pad = key_11_pad_0, pad_type = key_11_pad_type_0, strides = var_627, weight = layers_2_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_11_cast_fp16")];
            tensor<int32, [2]> var_634 = const()[name = tensor<string, []>("op_634"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_636 = const()[name = tensor<string, []>("op_636"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_11_pad_type_0 = const()[name = tensor<string, []>("value_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_11_pad_0 = const()[name = tensor<string, []>("value_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_2_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(51421120)))];
            tensor<fp16, [384]> layers_2_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(51716096)))];
            tensor<fp16, [1, 384, 1, 1500]> value_11_cast_fp16 = conv(bias = layers_2_encoder_attn_v_proj_bias_to_fp16, dilations = var_636, groups = var_499, pad = value_11_pad_0, pad_type = value_11_pad_type_0, strides = var_634, weight = layers_2_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_11_cast_fp16")];
            tensor<int32, [4]> var_640 = const()[name = tensor<string, []>("op_640"), val = tensor<int32, [4]>([1, 6, 64, -1])];
            tensor<fp16, [1, 6, 64, 1]> var_641_cast_fp16 = reshape(shape = var_640, x = query_11_cast_fp16)[name = tensor<string, []>("op_641_cast_fp16")];
            tensor<fp16, []> var_642_to_fp16 = const()[name = tensor<string, []>("op_642_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 6, 64, 1]> var_643_cast_fp16 = mul(x = var_641_cast_fp16, y = var_642_to_fp16)[name = tensor<string, []>("op_643_cast_fp16")];
            tensor<int32, [4]> var_644 = const()[name = tensor<string, []>("op_644"), val = tensor<int32, [4]>([1, 6, 64, -1])];
            tensor<fp16, [1, 6, 64, 1500]> var_645_cast_fp16 = reshape(shape = var_644, x = key_11_cast_fp16)[name = tensor<string, []>("op_645_cast_fp16")];
            tensor<bool, []> mh_w_17_transpose_x_0 = const()[name = tensor<string, []>("mh_w_17_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_17_transpose_y_0 = const()[name = tensor<string, []>("mh_w_17_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 6, 1, 1500]> mh_w_17_cast_fp16 = matmul(transpose_x = mh_w_17_transpose_x_0, transpose_y = mh_w_17_transpose_y_0, x = var_643_cast_fp16, y = var_645_cast_fp16)[name = tensor<string, []>("mh_w_17_cast_fp16")];
            tensor<fp16, [1, 6, 1, 1500]> obj_41_cast_fp16 = softmax(axis = var_492, x = mh_w_17_cast_fp16)[name = tensor<string, []>("obj_41_cast_fp16")];
            tensor<int32, [4]> var_649 = const()[name = tensor<string, []>("op_649"), val = tensor<int32, [4]>([1, 6, 64, -1])];
            tensor<fp16, [1, 6, 64, 1500]> var_650_cast_fp16 = reshape(shape = var_649, x = value_11_cast_fp16)[name = tensor<string, []>("op_650_cast_fp16")];
            tensor<bool, []> attn_11_transpose_x_0 = const()[name = tensor<string, []>("attn_11_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_11_transpose_y_0 = const()[name = tensor<string, []>("attn_11_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 6, 64, 1]> attn_11_cast_fp16 = matmul(transpose_x = attn_11_transpose_x_0, transpose_y = attn_11_transpose_y_0, x = var_650_cast_fp16, y = obj_41_cast_fp16)[name = tensor<string, []>("attn_11_cast_fp16")];
            tensor<int32, [4]> var_653 = const()[name = tensor<string, []>("op_653"), val = tensor<int32, [4]>([1, 384, 1, -1])];
            tensor<fp16, [1, 384, 1, 1]> input_23_cast_fp16 = reshape(shape = var_653, x = attn_11_cast_fp16)[name = tensor<string, []>("input_23_cast_fp16")];
            tensor<int32, [2]> var_657 = const()[name = tensor<string, []>("op_657"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_659 = const()[name = tensor<string, []>("op_659"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_39_pad_type_0 = const()[name = tensor<string, []>("obj_39_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_39_pad_0 = const()[name = tensor<string, []>("obj_39_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_2_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(51716928)))];
            tensor<fp16, [384]> layers_2_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(52011904)))];
            tensor<fp16, [1, 384, 1, 1]> obj_39_cast_fp16 = conv(bias = layers_2_encoder_attn_o_proj_bias_to_fp16, dilations = var_659, groups = var_499, pad = obj_39_pad_0, pad_type = obj_39_pad_type_0, strides = var_657, weight = layers_2_encoder_attn_o_proj_weight_to_fp16, x = input_23_cast_fp16)[name = tensor<string, []>("obj_39_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> inputs_17_cast_fp16 = add(x = inputs_15_cast_fp16, y = obj_39_cast_fp16)[name = tensor<string, []>("inputs_17_cast_fp16")];
            tensor<int32, [1]> var_668 = const()[name = tensor<string, []>("op_668"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_17_cast_fp16 = reduce_mean(axes = var_668, keep_dims = var_500, x = inputs_17_cast_fp16)[name = tensor<string, []>("channels_mean_17_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> zero_mean_17_cast_fp16 = sub(x = inputs_17_cast_fp16, y = channels_mean_17_cast_fp16)[name = tensor<string, []>("zero_mean_17_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> zero_mean_sq_17_cast_fp16 = mul(x = zero_mean_17_cast_fp16, y = zero_mean_17_cast_fp16)[name = tensor<string, []>("zero_mean_sq_17_cast_fp16")];
            tensor<int32, [1]> var_672 = const()[name = tensor<string, []>("op_672"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_673_cast_fp16 = reduce_mean(axes = var_672, keep_dims = var_500, x = zero_mean_sq_17_cast_fp16)[name = tensor<string, []>("op_673_cast_fp16")];
            tensor<fp16, []> var_674_to_fp16 = const()[name = tensor<string, []>("op_674_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_675_cast_fp16 = add(x = var_673_cast_fp16, y = var_674_to_fp16)[name = tensor<string, []>("op_675_cast_fp16")];
            tensor<fp16, []> denom_17_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_17_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_17_cast_fp16 = rsqrt(epsilon = denom_17_epsilon_0_to_fp16, x = var_675_cast_fp16)[name = tensor<string, []>("denom_17_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> out_17_cast_fp16 = mul(x = zero_mean_17_cast_fp16, y = denom_17_cast_fp16)[name = tensor<string, []>("out_17_cast_fp16")];
            tensor<fp16, [384]> input_25_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_25_gamma_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(52012736)))];
            tensor<fp16, [384]> input_25_beta_0_to_fp16 = const()[name = tensor<string, []>("input_25_beta_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(52013568)))];
            tensor<fp16, []> input_25_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_25_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 384, 1, 1]> input_25_cast_fp16 = batch_norm(beta = input_25_beta_0_to_fp16, epsilon = input_25_epsilon_0_to_fp16, gamma = input_25_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_17_cast_fp16)[name = tensor<string, []>("input_25_cast_fp16")];
            tensor<int32, [2]> var_686 = const()[name = tensor<string, []>("op_686"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_688 = const()[name = tensor<string, []>("op_688"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_27_pad_type_0 = const()[name = tensor<string, []>("input_27_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_27_pad_0 = const()[name = tensor<string, []>("input_27_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 384, 1, 1]> layers_2_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_fc1_weight_to_fp16"), val = tensor<fp16, [1536, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(52014400)))];
            tensor<fp16, [1536]> layers_2_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_fc1_bias_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53194112)))];
            tensor<fp16, [1, 1536, 1, 1]> input_27_cast_fp16 = conv(bias = layers_2_fc1_bias_to_fp16, dilations = var_688, groups = var_499, pad = input_27_pad_0, pad_type = input_27_pad_type_0, strides = var_686, weight = layers_2_fc1_weight_to_fp16, x = input_25_cast_fp16)[name = tensor<string, []>("input_27_cast_fp16")];
            tensor<string, []> input_29_mode_0 = const()[name = tensor<string, []>("input_29_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 1536, 1, 1]> input_29_cast_fp16 = gelu(mode = input_29_mode_0, x = input_27_cast_fp16)[name = tensor<string, []>("input_29_cast_fp16")];
            tensor<int32, [2]> var_694 = const()[name = tensor<string, []>("op_694"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_696 = const()[name = tensor<string, []>("op_696"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_7_pad_type_0 = const()[name = tensor<string, []>("hidden_states_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_7_pad_0 = const()[name = tensor<string, []>("hidden_states_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 1536, 1, 1]> layers_2_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_fc2_weight_to_fp16"), val = tensor<fp16, [384, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53197248)))];
            tensor<fp16, [384]> layers_2_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_fc2_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54376960)))];
            tensor<fp16, [1, 384, 1, 1]> hidden_states_7_cast_fp16 = conv(bias = layers_2_fc2_bias_to_fp16, dilations = var_696, groups = var_499, pad = hidden_states_7_pad_0, pad_type = hidden_states_7_pad_type_0, strides = var_694, weight = layers_2_fc2_weight_to_fp16, x = input_29_cast_fp16)[name = tensor<string, []>("hidden_states_7_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> inputs_19_cast_fp16 = add(x = inputs_17_cast_fp16, y = hidden_states_7_cast_fp16)[name = tensor<string, []>("inputs_19_cast_fp16")];
            tensor<int32, []> var_710 = const()[name = tensor<string, []>("op_710"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_717 = const()[name = tensor<string, []>("op_717"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_718 = const()[name = tensor<string, []>("op_718"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_730 = const()[name = tensor<string, []>("op_730"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_19_cast_fp16 = reduce_mean(axes = var_730, keep_dims = var_718, x = inputs_19_cast_fp16)[name = tensor<string, []>("channels_mean_19_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> zero_mean_19_cast_fp16 = sub(x = inputs_19_cast_fp16, y = channels_mean_19_cast_fp16)[name = tensor<string, []>("zero_mean_19_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> zero_mean_sq_19_cast_fp16 = mul(x = zero_mean_19_cast_fp16, y = zero_mean_19_cast_fp16)[name = tensor<string, []>("zero_mean_sq_19_cast_fp16")];
            tensor<int32, [1]> var_734 = const()[name = tensor<string, []>("op_734"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_735_cast_fp16 = reduce_mean(axes = var_734, keep_dims = var_718, x = zero_mean_sq_19_cast_fp16)[name = tensor<string, []>("op_735_cast_fp16")];
            tensor<fp16, []> var_736_to_fp16 = const()[name = tensor<string, []>("op_736_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_737_cast_fp16 = add(x = var_735_cast_fp16, y = var_736_to_fp16)[name = tensor<string, []>("op_737_cast_fp16")];
            tensor<fp16, []> denom_19_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_19_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_19_cast_fp16 = rsqrt(epsilon = denom_19_epsilon_0_to_fp16, x = var_737_cast_fp16)[name = tensor<string, []>("denom_19_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> out_19_cast_fp16 = mul(x = zero_mean_19_cast_fp16, y = denom_19_cast_fp16)[name = tensor<string, []>("out_19_cast_fp16")];
            tensor<fp16, [384]> obj_43_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_43_gamma_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54377792)))];
            tensor<fp16, [384]> obj_43_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_43_beta_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54378624)))];
            tensor<fp16, []> obj_43_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_43_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 384, 1, 1]> obj_43_cast_fp16 = batch_norm(beta = obj_43_beta_0_to_fp16, epsilon = obj_43_epsilon_0_to_fp16, gamma = obj_43_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_19_cast_fp16)[name = tensor<string, []>("obj_43_cast_fp16")];
            tensor<int32, [2]> var_752 = const()[name = tensor<string, []>("op_752"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_754 = const()[name = tensor<string, []>("op_754"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_13_pad_type_0 = const()[name = tensor<string, []>("query_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_13_pad_0 = const()[name = tensor<string, []>("query_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_3_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54379456)))];
            tensor<fp16, [384]> layers_3_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54674432)))];
            tensor<fp16, [1, 384, 1, 1]> query_13_cast_fp16 = conv(bias = layers_3_self_attn_q_proj_bias_to_fp16, dilations = var_754, groups = var_717, pad = query_13_pad_0, pad_type = query_13_pad_type_0, strides = var_752, weight = layers_3_self_attn_q_proj_weight_to_fp16, x = obj_43_cast_fp16)[name = tensor<string, []>("query_13_cast_fp16")];
            tensor<int32, [2]> var_758 = const()[name = tensor<string, []>("op_758"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_760 = const()[name = tensor<string, []>("op_760"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_pad_type_0 = const()[name = tensor<string, []>("current_key_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_pad_0 = const()[name = tensor<string, []>("current_key_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_3_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54675264)))];
            tensor<fp16, [1, 384, 1, 1]> current_key_cast_fp16 = conv(dilations = var_760, groups = var_717, pad = current_key_pad_0, pad_type = current_key_pad_type_0, strides = var_758, weight = layers_3_self_attn_k_proj_weight_to_fp16, x = obj_43_cast_fp16)[name = tensor<string, []>("current_key_cast_fp16")];
            tensor<int32, [2]> var_765 = const()[name = tensor<string, []>("op_765"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_767 = const()[name = tensor<string, []>("op_767"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_pad_type_0 = const()[name = tensor<string, []>("current_value_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_pad_0 = const()[name = tensor<string, []>("current_value_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_3_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54970240)))];
            tensor<fp16, [384]> layers_3_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(55265216)))];
            tensor<fp16, [1, 384, 1, 1]> current_value_cast_fp16 = conv(bias = layers_3_self_attn_v_proj_bias_to_fp16, dilations = var_767, groups = var_717, pad = current_value_pad_0, pad_type = current_value_pad_type_0, strides = var_765, weight = layers_3_self_attn_v_proj_weight_to_fp16, x = obj_43_cast_fp16)[name = tensor<string, []>("current_value_cast_fp16")];
            tensor<fp16, [1, 384, 1, 224]> var_774_cast_fp16 = mul(x = current_key_cast_fp16, y = var_126_cast_fp16)[name = tensor<string, []>("op_774_cast_fp16")];
            tensor<fp16, [1, 384, 1, 224]> var_776_cast_fp16 = mul(x = var_47_cast_fp16_3, y = var_129_cast_fp16)[name = tensor<string, []>("op_776_cast_fp16")];
            tensor<fp16, [1, 384, 1, 224]> key_13_cast_fp16 = add(x = var_774_cast_fp16, y = var_776_cast_fp16)[name = tensor<string, []>("key_13_cast_fp16")];
            tensor<fp16, [1, 384, 1, 224]> var_778_cast_fp16 = mul(x = current_value_cast_fp16, y = var_126_cast_fp16)[name = tensor<string, []>("op_778_cast_fp16")];
            tensor<fp16, [1, 384, 1, 224]> var_780_cast_fp16 = mul(x = var_54_cast_fp16_3, y = var_129_cast_fp16)[name = tensor<string, []>("op_780_cast_fp16")];
            tensor<fp16, [1, 384, 1, 224]> value_13_cast_fp16 = add(x = var_778_cast_fp16, y = var_780_cast_fp16)[name = tensor<string, []>("value_13_cast_fp16")];
            tensor<int32, [4]> var_783 = const()[name = tensor<string, []>("op_783"), val = tensor<int32, [4]>([1, 6, 64, -1])];
            tensor<fp16, [1, 6, 64, 1]> var_784_cast_fp16 = reshape(shape = var_783, x = query_13_cast_fp16)[name = tensor<string, []>("op_784_cast_fp16")];
            tensor<fp16, []> var_785_to_fp16 = const()[name = tensor<string, []>("op_785_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 6, 64, 1]> var_786_cast_fp16 = mul(x = var_784_cast_fp16, y = var_785_to_fp16)[name = tensor<string, []>("op_786_cast_fp16")];
            tensor<int32, [4]> var_787 = const()[name = tensor<string, []>("op_787"), val = tensor<int32, [4]>([1, 6, 64, -1])];
            tensor<fp16, [1, 6, 64, 224]> var_788_cast_fp16 = reshape(shape = var_787, x = key_13_cast_fp16)[name = tensor<string, []>("op_788_cast_fp16")];
            tensor<bool, []> mh_w_19_transpose_x_0 = const()[name = tensor<string, []>("mh_w_19_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_19_transpose_y_0 = const()[name = tensor<string, []>("mh_w_19_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 6, 1, 224]> mh_w_19_cast_fp16 = matmul(transpose_x = mh_w_19_transpose_x_0, transpose_y = mh_w_19_transpose_y_0, x = var_786_cast_fp16, y = var_788_cast_fp16)[name = tensor<string, []>("mh_w_19_cast_fp16")];
            tensor<fp16, [1, 6, 1, 224]> mh_w_21_cast_fp16 = add(x = mh_w_19_cast_fp16, y = var_147_cast_fp16)[name = tensor<string, []>("mh_w_21_cast_fp16")];
            tensor<fp16, [1, 6, 1, 224]> var_796_cast_fp16 = softmax(axis = var_710, x = mh_w_21_cast_fp16)[name = tensor<string, []>("op_796_cast_fp16")];
            tensor<int32, [4]> var_797 = const()[name = tensor<string, []>("op_797"), val = tensor<int32, [4]>([1, 6, 64, -1])];
            tensor<fp16, [1, 6, 64, 224]> var_798_cast_fp16 = reshape(shape = var_797, x = value_13_cast_fp16)[name = tensor<string, []>("op_798_cast_fp16")];
            tensor<bool, []> attn_13_transpose_x_0 = const()[name = tensor<string, []>("attn_13_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_13_transpose_y_0 = const()[name = tensor<string, []>("attn_13_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 6, 64, 1]> attn_13_cast_fp16 = matmul(transpose_x = attn_13_transpose_x_0, transpose_y = attn_13_transpose_y_0, x = var_798_cast_fp16, y = var_796_cast_fp16)[name = tensor<string, []>("attn_13_cast_fp16")];
            tensor<int32, [4]> var_801 = const()[name = tensor<string, []>("op_801"), val = tensor<int32, [4]>([1, 384, 1, -1])];
            tensor<fp16, [1, 384, 1, 1]> input_31_cast_fp16 = reshape(shape = var_801, x = attn_13_cast_fp16)[name = tensor<string, []>("input_31_cast_fp16")];
            tensor<int32, [2]> var_805 = const()[name = tensor<string, []>("op_805"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_807 = const()[name = tensor<string, []>("op_807"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_49_pad_type_0 = const()[name = tensor<string, []>("obj_49_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_49_pad_0 = const()[name = tensor<string, []>("obj_49_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_3_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(55266048)))];
            tensor<fp16, [384]> layers_3_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(55561024)))];
            tensor<fp16, [1, 384, 1, 1]> obj_49_cast_fp16 = conv(bias = layers_3_self_attn_o_proj_bias_to_fp16, dilations = var_807, groups = var_717, pad = obj_49_pad_0, pad_type = obj_49_pad_type_0, strides = var_805, weight = layers_3_self_attn_o_proj_weight_to_fp16, x = input_31_cast_fp16)[name = tensor<string, []>("obj_49_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> inputs_21_cast_fp16 = add(x = inputs_19_cast_fp16, y = obj_49_cast_fp16)[name = tensor<string, []>("inputs_21_cast_fp16")];
            tensor<int32, [1]> var_817 = const()[name = tensor<string, []>("op_817"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_21_cast_fp16 = reduce_mean(axes = var_817, keep_dims = var_718, x = inputs_21_cast_fp16)[name = tensor<string, []>("channels_mean_21_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> zero_mean_21_cast_fp16 = sub(x = inputs_21_cast_fp16, y = channels_mean_21_cast_fp16)[name = tensor<string, []>("zero_mean_21_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> zero_mean_sq_21_cast_fp16 = mul(x = zero_mean_21_cast_fp16, y = zero_mean_21_cast_fp16)[name = tensor<string, []>("zero_mean_sq_21_cast_fp16")];
            tensor<int32, [1]> var_821 = const()[name = tensor<string, []>("op_821"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_822_cast_fp16 = reduce_mean(axes = var_821, keep_dims = var_718, x = zero_mean_sq_21_cast_fp16)[name = tensor<string, []>("op_822_cast_fp16")];
            tensor<fp16, []> var_823_to_fp16 = const()[name = tensor<string, []>("op_823_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_824_cast_fp16 = add(x = var_822_cast_fp16, y = var_823_to_fp16)[name = tensor<string, []>("op_824_cast_fp16")];
            tensor<fp16, []> denom_21_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_21_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_21_cast_fp16 = rsqrt(epsilon = denom_21_epsilon_0_to_fp16, x = var_824_cast_fp16)[name = tensor<string, []>("denom_21_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> out_21_cast_fp16 = mul(x = zero_mean_21_cast_fp16, y = denom_21_cast_fp16)[name = tensor<string, []>("out_21_cast_fp16")];
            tensor<fp16, [384]> obj_51_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_51_gamma_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(55561856)))];
            tensor<fp16, [384]> obj_51_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_51_beta_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(55562688)))];
            tensor<fp16, []> obj_51_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_51_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 384, 1, 1]> obj_51_cast_fp16 = batch_norm(beta = obj_51_beta_0_to_fp16, epsilon = obj_51_epsilon_0_to_fp16, gamma = obj_51_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_21_cast_fp16)[name = tensor<string, []>("obj_51_cast_fp16")];
            tensor<int32, [2]> var_839 = const()[name = tensor<string, []>("op_839"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_841 = const()[name = tensor<string, []>("op_841"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_pad_type_0 = const()[name = tensor<string, []>("query_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_pad_0 = const()[name = tensor<string, []>("query_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_3_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(55563520)))];
            tensor<fp16, [384]> layers_3_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(55858496)))];
            tensor<fp16, [1, 384, 1, 1]> query_cast_fp16 = conv(bias = layers_3_encoder_attn_q_proj_bias_to_fp16, dilations = var_841, groups = var_717, pad = query_pad_0, pad_type = query_pad_type_0, strides = var_839, weight = layers_3_encoder_attn_q_proj_weight_to_fp16, x = obj_51_cast_fp16)[name = tensor<string, []>("query_cast_fp16")];
            tensor<int32, [2]> var_845 = const()[name = tensor<string, []>("op_845"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_847 = const()[name = tensor<string, []>("op_847"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_pad_type_0 = const()[name = tensor<string, []>("key_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_pad_0 = const()[name = tensor<string, []>("key_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_3_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(55859328)))];
            tensor<fp16, [1, 384, 1, 1500]> key_cast_fp16 = conv(dilations = var_847, groups = var_717, pad = key_pad_0, pad_type = key_pad_type_0, strides = var_845, weight = layers_3_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_cast_fp16")];
            tensor<int32, [2]> var_852 = const()[name = tensor<string, []>("op_852"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_854 = const()[name = tensor<string, []>("op_854"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_pad_type_0 = const()[name = tensor<string, []>("value_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_pad_0 = const()[name = tensor<string, []>("value_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_3_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56154304)))];
            tensor<fp16, [384]> layers_3_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56449280)))];
            tensor<fp16, [1, 384, 1, 1500]> value_cast_fp16 = conv(bias = layers_3_encoder_attn_v_proj_bias_to_fp16, dilations = var_854, groups = var_717, pad = value_pad_0, pad_type = value_pad_type_0, strides = var_852, weight = layers_3_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_cast_fp16")];
            tensor<int32, [4]> var_858 = const()[name = tensor<string, []>("op_858"), val = tensor<int32, [4]>([1, 6, 64, -1])];
            tensor<fp16, [1, 6, 64, 1]> var_859_cast_fp16 = reshape(shape = var_858, x = query_cast_fp16)[name = tensor<string, []>("op_859_cast_fp16")];
            tensor<fp16, []> var_860_to_fp16 = const()[name = tensor<string, []>("op_860_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 6, 64, 1]> var_861_cast_fp16 = mul(x = var_859_cast_fp16, y = var_860_to_fp16)[name = tensor<string, []>("op_861_cast_fp16")];
            tensor<int32, [4]> var_862 = const()[name = tensor<string, []>("op_862"), val = tensor<int32, [4]>([1, 6, 64, -1])];
            tensor<fp16, [1, 6, 64, 1500]> var_863_cast_fp16 = reshape(shape = var_862, x = key_cast_fp16)[name = tensor<string, []>("op_863_cast_fp16")];
            tensor<bool, []> mh_w_transpose_x_0 = const()[name = tensor<string, []>("mh_w_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_transpose_y_0 = const()[name = tensor<string, []>("mh_w_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 6, 1, 1500]> mh_w_cast_fp16 = matmul(transpose_x = mh_w_transpose_x_0, transpose_y = mh_w_transpose_y_0, x = var_861_cast_fp16, y = var_863_cast_fp16)[name = tensor<string, []>("mh_w_cast_fp16")];
            tensor<fp16, [1, 6, 1, 1500]> obj_55_cast_fp16 = softmax(axis = var_710, x = mh_w_cast_fp16)[name = tensor<string, []>("obj_55_cast_fp16")];
            tensor<int32, [4]> var_867 = const()[name = tensor<string, []>("op_867"), val = tensor<int32, [4]>([1, 6, 64, -1])];
            tensor<fp16, [1, 6, 64, 1500]> var_868_cast_fp16 = reshape(shape = var_867, x = value_cast_fp16)[name = tensor<string, []>("op_868_cast_fp16")];
            tensor<bool, []> attn_transpose_x_0 = const()[name = tensor<string, []>("attn_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_transpose_y_0 = const()[name = tensor<string, []>("attn_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 6, 64, 1]> attn_cast_fp16 = matmul(transpose_x = attn_transpose_x_0, transpose_y = attn_transpose_y_0, x = var_868_cast_fp16, y = obj_55_cast_fp16)[name = tensor<string, []>("attn_cast_fp16")];
            tensor<int32, [4]> var_871 = const()[name = tensor<string, []>("op_871"), val = tensor<int32, [4]>([1, 384, 1, -1])];
            tensor<fp16, [1, 384, 1, 1]> input_33_cast_fp16 = reshape(shape = var_871, x = attn_cast_fp16)[name = tensor<string, []>("input_33_cast_fp16")];
            tensor<int32, [2]> var_875 = const()[name = tensor<string, []>("op_875"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_877 = const()[name = tensor<string, []>("op_877"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_53_pad_type_0 = const()[name = tensor<string, []>("obj_53_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_53_pad_0 = const()[name = tensor<string, []>("obj_53_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_3_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56450112)))];
            tensor<fp16, [384]> layers_3_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56745088)))];
            tensor<fp16, [1, 384, 1, 1]> obj_53_cast_fp16 = conv(bias = layers_3_encoder_attn_o_proj_bias_to_fp16, dilations = var_877, groups = var_717, pad = obj_53_pad_0, pad_type = obj_53_pad_type_0, strides = var_875, weight = layers_3_encoder_attn_o_proj_weight_to_fp16, x = input_33_cast_fp16)[name = tensor<string, []>("obj_53_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> inputs_23_cast_fp16 = add(x = inputs_21_cast_fp16, y = obj_53_cast_fp16)[name = tensor<string, []>("inputs_23_cast_fp16")];
            tensor<int32, [1]> var_886 = const()[name = tensor<string, []>("op_886"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_23_cast_fp16 = reduce_mean(axes = var_886, keep_dims = var_718, x = inputs_23_cast_fp16)[name = tensor<string, []>("channels_mean_23_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> zero_mean_23_cast_fp16 = sub(x = inputs_23_cast_fp16, y = channels_mean_23_cast_fp16)[name = tensor<string, []>("zero_mean_23_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> zero_mean_sq_23_cast_fp16 = mul(x = zero_mean_23_cast_fp16, y = zero_mean_23_cast_fp16)[name = tensor<string, []>("zero_mean_sq_23_cast_fp16")];
            tensor<int32, [1]> var_890 = const()[name = tensor<string, []>("op_890"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_891_cast_fp16 = reduce_mean(axes = var_890, keep_dims = var_718, x = zero_mean_sq_23_cast_fp16)[name = tensor<string, []>("op_891_cast_fp16")];
            tensor<fp16, []> var_892_to_fp16 = const()[name = tensor<string, []>("op_892_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_893_cast_fp16 = add(x = var_891_cast_fp16, y = var_892_to_fp16)[name = tensor<string, []>("op_893_cast_fp16")];
            tensor<fp16, []> denom_23_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_23_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_23_cast_fp16 = rsqrt(epsilon = denom_23_epsilon_0_to_fp16, x = var_893_cast_fp16)[name = tensor<string, []>("denom_23_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> out_23_cast_fp16 = mul(x = zero_mean_23_cast_fp16, y = denom_23_cast_fp16)[name = tensor<string, []>("out_23_cast_fp16")];
            tensor<fp16, [384]> input_35_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_35_gamma_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56745920)))];
            tensor<fp16, [384]> input_35_beta_0_to_fp16 = const()[name = tensor<string, []>("input_35_beta_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56746752)))];
            tensor<fp16, []> input_35_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_35_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 384, 1, 1]> input_35_cast_fp16 = batch_norm(beta = input_35_beta_0_to_fp16, epsilon = input_35_epsilon_0_to_fp16, gamma = input_35_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_23_cast_fp16)[name = tensor<string, []>("input_35_cast_fp16")];
            tensor<int32, [2]> var_904 = const()[name = tensor<string, []>("op_904"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_906 = const()[name = tensor<string, []>("op_906"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_37_pad_type_0 = const()[name = tensor<string, []>("input_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_37_pad_0 = const()[name = tensor<string, []>("input_37_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 384, 1, 1]> layers_3_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_fc1_weight_to_fp16"), val = tensor<fp16, [1536, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56747584)))];
            tensor<fp16, [1536]> layers_3_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_fc1_bias_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57927296)))];
            tensor<fp16, [1, 1536, 1, 1]> input_37_cast_fp16 = conv(bias = layers_3_fc1_bias_to_fp16, dilations = var_906, groups = var_717, pad = input_37_pad_0, pad_type = input_37_pad_type_0, strides = var_904, weight = layers_3_fc1_weight_to_fp16, x = input_35_cast_fp16)[name = tensor<string, []>("input_37_cast_fp16")];
            tensor<string, []> input_mode_0 = const()[name = tensor<string, []>("input_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 1536, 1, 1]> input_cast_fp16 = gelu(mode = input_mode_0, x = input_37_cast_fp16)[name = tensor<string, []>("input_cast_fp16")];
            tensor<int32, [2]> var_912 = const()[name = tensor<string, []>("op_912"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_914 = const()[name = tensor<string, []>("op_914"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_9_pad_type_0 = const()[name = tensor<string, []>("hidden_states_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_9_pad_0 = const()[name = tensor<string, []>("hidden_states_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 1536, 1, 1]> layers_3_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_fc2_weight_to_fp16"), val = tensor<fp16, [384, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57930432)))];
            tensor<fp16, [384]> layers_3_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_fc2_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(59110144)))];
            tensor<fp16, [1, 384, 1, 1]> hidden_states_9_cast_fp16 = conv(bias = layers_3_fc2_bias_to_fp16, dilations = var_914, groups = var_717, pad = hidden_states_9_pad_0, pad_type = hidden_states_9_pad_type_0, strides = var_912, weight = layers_3_fc2_weight_to_fp16, x = input_cast_fp16)[name = tensor<string, []>("hidden_states_9_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> inputs_cast_fp16 = add(x = inputs_23_cast_fp16, y = hidden_states_9_cast_fp16)[name = tensor<string, []>("inputs_cast_fp16")];
            tensor<bool, []> var_925 = const()[name = tensor<string, []>("op_925"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_929 = const()[name = tensor<string, []>("op_929"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_cast_fp16 = reduce_mean(axes = var_929, keep_dims = var_925, x = inputs_cast_fp16)[name = tensor<string, []>("channels_mean_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> zero_mean_cast_fp16 = sub(x = inputs_cast_fp16, y = channels_mean_cast_fp16)[name = tensor<string, []>("zero_mean_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> zero_mean_sq_cast_fp16 = mul(x = zero_mean_cast_fp16, y = zero_mean_cast_fp16)[name = tensor<string, []>("zero_mean_sq_cast_fp16")];
            tensor<int32, [1]> var_933 = const()[name = tensor<string, []>("op_933"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_934_cast_fp16 = reduce_mean(axes = var_933, keep_dims = var_925, x = zero_mean_sq_cast_fp16)[name = tensor<string, []>("op_934_cast_fp16")];
            tensor<fp16, []> var_935_to_fp16 = const()[name = tensor<string, []>("op_935_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_936_cast_fp16 = add(x = var_934_cast_fp16, y = var_935_to_fp16)[name = tensor<string, []>("op_936_cast_fp16")];
            tensor<fp16, []> denom_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_cast_fp16 = rsqrt(epsilon = denom_epsilon_0_to_fp16, x = var_936_cast_fp16)[name = tensor<string, []>("denom_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1]> out_cast_fp16 = mul(x = zero_mean_cast_fp16, y = denom_cast_fp16)[name = tensor<string, []>("out_cast_fp16")];
            tensor<fp16, [384]> hidden_states_gamma_0_to_fp16 = const()[name = tensor<string, []>("hidden_states_gamma_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(59110976)))];
            tensor<fp16, [384]> hidden_states_beta_0_to_fp16 = const()[name = tensor<string, []>("hidden_states_beta_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(59111808)))];
            tensor<fp16, []> hidden_states_epsilon_0_to_fp16 = const()[name = tensor<string, []>("hidden_states_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 384, 1, 1]> hidden_states_cast_fp16 = batch_norm(beta = hidden_states_beta_0_to_fp16, epsilon = hidden_states_epsilon_0_to_fp16, gamma = hidden_states_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_cast_fp16)[name = tensor<string, []>("hidden_states_cast_fp16")];
            tensor<int32, [1]> var_946_axes_0 = const()[name = tensor<string, []>("op_946_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [1, 384, 1]> var_946_cast_fp16 = squeeze(axes = var_946_axes_0, x = hidden_states_cast_fp16)[name = tensor<string, []>("op_946_cast_fp16")];
            tensor<int32, [3]> var_949_perm_0 = const()[name = tensor<string, []>("op_949_perm_0"), val = tensor<int32, [3]>([0, 2, 1])];
            tensor<fp16, [51865]> linear_0_bias_0_to_fp16 = const()[name = tensor<string, []>("linear_0_bias_0_to_fp16"), val = tensor<fp16, [51865]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(59112640)))];
            tensor<fp16, [1, 1, 384]> transpose_0 = transpose(perm = var_949_perm_0, x = var_946_cast_fp16)[name = tensor<string, []>("transpose_0")];
            tensor<fp16, [1, 1, 51865]> logits = linear(bias = linear_0_bias_0_to_fp16, weight = embed_tokens_weight_to_fp16, x = transpose_0)[name = tensor<string, []>("linear_0_cast_fp16")];
            tensor<int32, []> var_953 = const()[name = tensor<string, []>("op_953"), val = tensor<int32, []>(1)];
            tensor<bool, []> obj_59_interleave_0 = const()[name = tensor<string, []>("obj_59_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1536, 1, 1]> key_cache_updates = concat(axis = var_953, interleave = obj_59_interleave_0, values = (current_key_1_cast_fp16, current_key_3_cast_fp16, current_key_5_cast_fp16, current_key_cast_fp16))[name = tensor<string, []>("obj_59_cast_fp16")];
            tensor<int32, []> var_956 = const()[name = tensor<string, []>("op_956"), val = tensor<int32, []>(1)];
            tensor<bool, []> obj_61_interleave_0 = const()[name = tensor<string, []>("obj_61_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1536, 1, 1]> value_cache_updates = concat(axis = var_956, interleave = obj_61_interleave_0, values = (current_value_1_cast_fp16, current_value_3_cast_fp16, current_value_5_cast_fp16, current_value_cast_fp16))[name = tensor<string, []>("obj_61_cast_fp16")];
            tensor<int32, [4]> var_967_begin_0 = const()[name = tensor<string, []>("op_967_begin_0"), val = tensor<int32, [4]>([0, 2, 0, 0])];
            tensor<int32, [4]> var_967_end_0 = const()[name = tensor<string, []>("op_967_end_0"), val = tensor<int32, [4]>([1, 3, 1, 1500])];
            tensor<bool, [4]> var_967_end_mask_0 = const()[name = tensor<string, []>("op_967_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_967_cast_fp16 = slice_by_index(begin = var_967_begin_0, end = var_967_end_0, end_mask = var_967_end_mask_0, x = obj_41_cast_fp16)[name = tensor<string, []>("op_967_cast_fp16")];
            tensor<int32, [4]> var_970_begin_0 = const()[name = tensor<string, []>("op_970_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_970_end_0 = const()[name = tensor<string, []>("op_970_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_970_end_mask_0 = const()[name = tensor<string, []>("op_970_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_970_squeeze_mask_0 = const()[name = tensor<string, []>("op_970_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_970_cast_fp16 = slice_by_index(begin = var_970_begin_0, end = var_970_end_0, end_mask = var_970_end_mask_0, squeeze_mask = var_970_squeeze_mask_0, x = var_967_cast_fp16)[name = tensor<string, []>("op_970_cast_fp16")];
            tensor<int32, [4]> var_985_begin_0 = const()[name = tensor<string, []>("op_985_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_985_end_0 = const()[name = tensor<string, []>("op_985_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_985_end_mask_0 = const()[name = tensor<string, []>("op_985_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_985_cast_fp16 = slice_by_index(begin = var_985_begin_0, end = var_985_end_0, end_mask = var_985_end_mask_0, x = obj_55_cast_fp16)[name = tensor<string, []>("op_985_cast_fp16")];
            tensor<int32, [4]> var_988_begin_0 = const()[name = tensor<string, []>("op_988_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_988_end_0 = const()[name = tensor<string, []>("op_988_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_988_end_mask_0 = const()[name = tensor<string, []>("op_988_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_988_squeeze_mask_0 = const()[name = tensor<string, []>("op_988_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_988_cast_fp16 = slice_by_index(begin = var_988_begin_0, end = var_988_end_0, end_mask = var_988_end_mask_0, squeeze_mask = var_988_squeeze_mask_0, x = var_985_cast_fp16)[name = tensor<string, []>("op_988_cast_fp16")];
            tensor<int32, [4]> var_1003_begin_0 = const()[name = tensor<string, []>("op_1003_begin_0"), val = tensor<int32, [4]>([0, 2, 0, 0])];
            tensor<int32, [4]> var_1003_end_0 = const()[name = tensor<string, []>("op_1003_end_0"), val = tensor<int32, [4]>([1, 3, 1, 1500])];
            tensor<bool, [4]> var_1003_end_mask_0 = const()[name = tensor<string, []>("op_1003_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_1003_cast_fp16 = slice_by_index(begin = var_1003_begin_0, end = var_1003_end_0, end_mask = var_1003_end_mask_0, x = obj_55_cast_fp16)[name = tensor<string, []>("op_1003_cast_fp16")];
            tensor<int32, [4]> var_1006_begin_0 = const()[name = tensor<string, []>("op_1006_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1006_end_0 = const()[name = tensor<string, []>("op_1006_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_1006_end_mask_0 = const()[name = tensor<string, []>("op_1006_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_1006_squeeze_mask_0 = const()[name = tensor<string, []>("op_1006_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_1006_cast_fp16 = slice_by_index(begin = var_1006_begin_0, end = var_1006_end_0, end_mask = var_1006_end_mask_0, squeeze_mask = var_1006_squeeze_mask_0, x = var_1003_cast_fp16)[name = tensor<string, []>("op_1006_cast_fp16")];
            tensor<int32, [4]> var_1021_begin_0 = const()[name = tensor<string, []>("op_1021_begin_0"), val = tensor<int32, [4]>([0, 3, 0, 0])];
            tensor<int32, [4]> var_1021_end_0 = const()[name = tensor<string, []>("op_1021_end_0"), val = tensor<int32, [4]>([1, 4, 1, 1500])];
            tensor<bool, [4]> var_1021_end_mask_0 = const()[name = tensor<string, []>("op_1021_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_1021_cast_fp16 = slice_by_index(begin = var_1021_begin_0, end = var_1021_end_0, end_mask = var_1021_end_mask_0, x = obj_55_cast_fp16)[name = tensor<string, []>("op_1021_cast_fp16")];
            tensor<int32, [4]> var_1024_begin_0 = const()[name = tensor<string, []>("op_1024_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1024_end_0 = const()[name = tensor<string, []>("op_1024_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_1024_end_mask_0 = const()[name = tensor<string, []>("op_1024_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_1024_squeeze_mask_0 = const()[name = tensor<string, []>("op_1024_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_1024_cast_fp16 = slice_by_index(begin = var_1024_begin_0, end = var_1024_end_0, end_mask = var_1024_end_mask_0, squeeze_mask = var_1024_squeeze_mask_0, x = var_1021_cast_fp16)[name = tensor<string, []>("op_1024_cast_fp16")];
            tensor<int32, [4]> var_1039_begin_0 = const()[name = tensor<string, []>("op_1039_begin_0"), val = tensor<int32, [4]>([0, 4, 0, 0])];
            tensor<int32, [4]> var_1039_end_0 = const()[name = tensor<string, []>("op_1039_end_0"), val = tensor<int32, [4]>([1, 5, 1, 1500])];
            tensor<bool, [4]> var_1039_end_mask_0 = const()[name = tensor<string, []>("op_1039_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_1039_cast_fp16 = slice_by_index(begin = var_1039_begin_0, end = var_1039_end_0, end_mask = var_1039_end_mask_0, x = obj_55_cast_fp16)[name = tensor<string, []>("op_1039_cast_fp16")];
            tensor<int32, [4]> var_1042_begin_0 = const()[name = tensor<string, []>("op_1042_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1042_end_0 = const()[name = tensor<string, []>("op_1042_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_1042_end_mask_0 = const()[name = tensor<string, []>("op_1042_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_1042_squeeze_mask_0 = const()[name = tensor<string, []>("op_1042_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_1042_cast_fp16 = slice_by_index(begin = var_1042_begin_0, end = var_1042_end_0, end_mask = var_1042_end_mask_0, squeeze_mask = var_1042_squeeze_mask_0, x = var_1039_cast_fp16)[name = tensor<string, []>("op_1042_cast_fp16")];
            tensor<int32, [4]> var_1057_begin_0 = const()[name = tensor<string, []>("op_1057_begin_0"), val = tensor<int32, [4]>([0, 5, 0, 0])];
            tensor<int32, [4]> var_1057_end_0 = const()[name = tensor<string, []>("op_1057_end_0"), val = tensor<int32, [4]>([1, 6, 1, 1500])];
            tensor<bool, [4]> var_1057_end_mask_0 = const()[name = tensor<string, []>("op_1057_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_1057_cast_fp16 = slice_by_index(begin = var_1057_begin_0, end = var_1057_end_0, end_mask = var_1057_end_mask_0, x = obj_55_cast_fp16)[name = tensor<string, []>("op_1057_cast_fp16")];
            tensor<int32, [4]> var_1060_begin_0 = const()[name = tensor<string, []>("op_1060_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1060_end_0 = const()[name = tensor<string, []>("op_1060_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_1060_end_mask_0 = const()[name = tensor<string, []>("op_1060_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_1060_squeeze_mask_0 = const()[name = tensor<string, []>("op_1060_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_1060_cast_fp16 = slice_by_index(begin = var_1060_begin_0, end = var_1060_end_0, end_mask = var_1060_end_mask_0, squeeze_mask = var_1060_squeeze_mask_0, x = var_1057_cast_fp16)[name = tensor<string, []>("op_1060_cast_fp16")];
            tensor<int32, []> var_1067 = const()[name = tensor<string, []>("op_1067"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_1068_interleave_0 = const()[name = tensor<string, []>("op_1068_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 6, 1500]> var_1068_cast_fp16 = concat(axis = var_1067, interleave = var_1068_interleave_0, values = (var_970_cast_fp16, var_988_cast_fp16, var_1006_cast_fp16, var_1024_cast_fp16, var_1042_cast_fp16, var_1060_cast_fp16))[name = tensor<string, []>("op_1068_cast_fp16")];
            tensor<int32, [1]> var_1070 = const()[name = tensor<string, []>("op_1070"), val = tensor<int32, [1]>([1])];
            tensor<bool, []> var_1071 = const()[name = tensor<string, []>("op_1071"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1500]> alignment_heads_weights = reduce_mean(axes = var_1070, keep_dims = var_1071, x = var_1068_cast_fp16)[name = tensor<string, []>("obj_cast_fp16")];
        } -> (logits, key_cache_updates, value_cache_updates, alignment_heads_weights);
}