program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "5.33.5"}, {"coremlc-version", "1877.40.3"}, {"coremltools-component-torch", "2.2.1"}, {"coremltools-source-dialect", "TorchScript"}, {"coremltools-version", "7.1"}})]
{
    func main<ios16>(tensor<int32, [1]> cache_length, tensor<fp16, [1, 224]> decoder_key_padding_mask, tensor<fp16, [1, 768, 1, 1500]> encoder_output_embeds, tensor<int32, [1]> input_ids, tensor<fp16, [1, 9216, 1, 224]> key_cache, tensor<fp16, [1, 224]> kv_cache_update_mask, tensor<fp16, [1, 9216, 1, 224]> value_cache) {
            tensor<int32, []> var_40_axis_0 = const()[name = tensor<string, []>("op_40_axis_0"), val = tensor<int32, []>(0)];
            tensor<int32, []> var_40_batch_dims_0 = const()[name = tensor<string, []>("op_40_batch_dims_0"), val = tensor<int32, []>(0)];
            tensor<fp16, [51864, 768]> embed_tokens_weight_to_fp16 = const()[name = tensor<string, []>("embed_tokens_weight_to_fp16"), val = tensor<fp16, [51864, 768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [1, 768]> var_40_cast_fp16 = gather(axis = var_40_axis_0, batch_dims = var_40_batch_dims_0, indices = input_ids, x = embed_tokens_weight_to_fp16)[name = tensor<string, []>("op_40_cast_fp16")];
            tensor<int32, []> var_44_axis_0 = const()[name = tensor<string, []>("op_44_axis_0"), val = tensor<int32, []>(0)];
            tensor<int32, []> var_44_batch_dims_0 = const()[name = tensor<string, []>("op_44_batch_dims_0"), val = tensor<int32, []>(0)];
            tensor<fp16, [448, 768]> embed_positions_weight_to_fp16 = const()[name = tensor<string, []>("embed_positions_weight_to_fp16"), val = tensor<fp16, [448, 768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(79663232)))];
            tensor<fp16, [1, 768]> var_44_cast_fp16 = gather(axis = var_44_axis_0, batch_dims = var_44_batch_dims_0, indices = cache_length, x = embed_positions_weight_to_fp16)[name = tensor<string, []>("op_44_cast_fp16")];
            tensor<fp16, [1, 768]> hidden_states_1_cast_fp16 = add(x = var_40_cast_fp16, y = var_44_cast_fp16)[name = tensor<string, []>("hidden_states_1_cast_fp16")];
            tensor<int32, [1]> var_58_axes_0 = const()[name = tensor<string, []>("op_58_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [1, 768, 1]> var_58_cast_fp16 = expand_dims(axes = var_58_axes_0, x = hidden_states_1_cast_fp16)[name = tensor<string, []>("op_58_cast_fp16")];
            tensor<int32, [1]> inputs_1_axes_0 = const()[name = tensor<string, []>("inputs_1_axes_0"), val = tensor<int32, [1]>([3])];
            tensor<fp16, [1, 768, 1, 1]> inputs_1_cast_fp16 = expand_dims(axes = inputs_1_axes_0, x = var_58_cast_fp16)[name = tensor<string, []>("inputs_1_cast_fp16")];
            tensor<int32, [12]> tile_0 = const()[name = tensor<string, []>("tile_0"), val = tensor<int32, [12]>([768, 768, 768, 768, 768, 768, 768, 768, 768, 768, 768, 768])];
            tensor<int32, []> var_63_axis_0 = const()[name = tensor<string, []>("op_63_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 768, 1, 224]> var_63_cast_fp16_0, tensor<fp16, [1, 768, 1, 224]> var_63_cast_fp16_1, tensor<fp16, [1, 768, 1, 224]> var_63_cast_fp16_2, tensor<fp16, [1, 768, 1, 224]> var_63_cast_fp16_3, tensor<fp16, [1, 768, 1, 224]> var_63_cast_fp16_4, tensor<fp16, [1, 768, 1, 224]> var_63_cast_fp16_5, tensor<fp16, [1, 768, 1, 224]> var_63_cast_fp16_6, tensor<fp16, [1, 768, 1, 224]> var_63_cast_fp16_7, tensor<fp16, [1, 768, 1, 224]> var_63_cast_fp16_8, tensor<fp16, [1, 768, 1, 224]> var_63_cast_fp16_9, tensor<fp16, [1, 768, 1, 224]> var_63_cast_fp16_10, tensor<fp16, [1, 768, 1, 224]> var_63_cast_fp16_11 = split(axis = var_63_axis_0, split_sizes = tile_0, x = key_cache)[name = tensor<string, []>("op_63_cast_fp16")];
            tensor<int32, [12]> tile_1 = const()[name = tensor<string, []>("tile_1"), val = tensor<int32, [12]>([768, 768, 768, 768, 768, 768, 768, 768, 768, 768, 768, 768])];
            tensor<int32, []> var_78_axis_0 = const()[name = tensor<string, []>("op_78_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 768, 1, 224]> var_78_cast_fp16_0, tensor<fp16, [1, 768, 1, 224]> var_78_cast_fp16_1, tensor<fp16, [1, 768, 1, 224]> var_78_cast_fp16_2, tensor<fp16, [1, 768, 1, 224]> var_78_cast_fp16_3, tensor<fp16, [1, 768, 1, 224]> var_78_cast_fp16_4, tensor<fp16, [1, 768, 1, 224]> var_78_cast_fp16_5, tensor<fp16, [1, 768, 1, 224]> var_78_cast_fp16_6, tensor<fp16, [1, 768, 1, 224]> var_78_cast_fp16_7, tensor<fp16, [1, 768, 1, 224]> var_78_cast_fp16_8, tensor<fp16, [1, 768, 1, 224]> var_78_cast_fp16_9, tensor<fp16, [1, 768, 1, 224]> var_78_cast_fp16_10, tensor<fp16, [1, 768, 1, 224]> var_78_cast_fp16_11 = split(axis = var_78_axis_0, split_sizes = tile_1, x = value_cache)[name = tensor<string, []>("op_78_cast_fp16")];
            tensor<int32, []> var_96 = const()[name = tensor<string, []>("op_96"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_103 = const()[name = tensor<string, []>("op_103"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_104 = const()[name = tensor<string, []>("op_104"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_116 = const()[name = tensor<string, []>("op_116"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_1_cast_fp16 = reduce_mean(axes = var_116, keep_dims = var_104, x = inputs_1_cast_fp16)[name = tensor<string, []>("channels_mean_1_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_1_cast_fp16 = sub(x = inputs_1_cast_fp16, y = channels_mean_1_cast_fp16)[name = tensor<string, []>("zero_mean_1_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_1_cast_fp16 = mul(x = zero_mean_1_cast_fp16, y = zero_mean_1_cast_fp16)[name = tensor<string, []>("zero_mean_sq_1_cast_fp16")];
            tensor<int32, [1]> var_120 = const()[name = tensor<string, []>("op_120"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_121_cast_fp16 = reduce_mean(axes = var_120, keep_dims = var_104, x = zero_mean_sq_1_cast_fp16)[name = tensor<string, []>("op_121_cast_fp16")];
            tensor<fp16, []> var_122_to_fp16 = const()[name = tensor<string, []>("op_122_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_123_cast_fp16 = add(x = var_121_cast_fp16, y = var_122_to_fp16)[name = tensor<string, []>("op_123_cast_fp16")];
            tensor<fp16, []> denom_1_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_1_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_1_cast_fp16 = rsqrt(epsilon = denom_1_epsilon_0_to_fp16, x = var_123_cast_fp16)[name = tensor<string, []>("denom_1_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_1_cast_fp16 = mul(x = zero_mean_1_cast_fp16, y = denom_1_cast_fp16)[name = tensor<string, []>("out_1_cast_fp16")];
            tensor<fp16, [768]> obj_1_mean_0_to_fp16 = const()[name = tensor<string, []>("obj_1_mean_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80351424)))];
            tensor<fp16, [768]> obj_1_variance_0_to_fp16 = const()[name = tensor<string, []>("obj_1_variance_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80353024)))];
            tensor<fp16, [768]> obj_1_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_1_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80354624)))];
            tensor<fp16, [768]> obj_1_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_1_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80356224)))];
            tensor<fp16, []> obj_1_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_1_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_1_cast_fp16 = batch_norm(beta = obj_1_beta_0_to_fp16, epsilon = obj_1_epsilon_0_to_fp16, gamma = obj_1_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_1_cast_fp16)[name = tensor<string, []>("obj_1_cast_fp16")];
            tensor<int32, [2]> var_138 = const()[name = tensor<string, []>("op_138"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_140 = const()[name = tensor<string, []>("op_140"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_1_pad_type_0 = const()[name = tensor<string, []>("query_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_1_pad_0 = const()[name = tensor<string, []>("query_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_0_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80357824)))];
            tensor<fp16, [768]> layers_0_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(81537536)))];
            tensor<fp16, [1, 768, 1, 1]> query_1_cast_fp16 = conv(bias = layers_0_self_attn_q_proj_bias_to_fp16, dilations = var_140, groups = var_103, pad = query_1_pad_0, pad_type = query_1_pad_type_0, strides = var_138, weight = layers_0_self_attn_q_proj_weight_to_fp16, x = obj_1_cast_fp16)[name = tensor<string, []>("query_1_cast_fp16")];
            tensor<int32, [2]> var_144 = const()[name = tensor<string, []>("op_144"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_146 = const()[name = tensor<string, []>("op_146"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_1_pad_type_0 = const()[name = tensor<string, []>("current_key_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_1_pad_0 = const()[name = tensor<string, []>("current_key_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_0_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(81539136)))];
            tensor<fp16, [1, 768, 1, 1]> current_key_1_cast_fp16 = conv(dilations = var_146, groups = var_103, pad = current_key_1_pad_0, pad_type = current_key_1_pad_type_0, strides = var_144, weight = layers_0_self_attn_k_proj_weight_to_fp16, x = obj_1_cast_fp16)[name = tensor<string, []>("current_key_1_cast_fp16")];
            tensor<int32, [2]> var_151 = const()[name = tensor<string, []>("op_151"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_153 = const()[name = tensor<string, []>("op_153"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_1_pad_type_0 = const()[name = tensor<string, []>("current_value_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_1_pad_0 = const()[name = tensor<string, []>("current_value_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_0_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82718848)))];
            tensor<fp16, [768]> layers_0_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(83898560)))];
            tensor<fp16, [1, 768, 1, 1]> current_value_1_cast_fp16 = conv(bias = layers_0_self_attn_v_proj_bias_to_fp16, dilations = var_153, groups = var_103, pad = current_value_1_pad_0, pad_type = current_value_1_pad_type_0, strides = var_151, weight = layers_0_self_attn_v_proj_weight_to_fp16, x = obj_1_cast_fp16)[name = tensor<string, []>("current_value_1_cast_fp16")];
            tensor<int32, [1]> var_157_axes_0 = const()[name = tensor<string, []>("op_157_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 224]> var_157_cast_fp16 = expand_dims(axes = var_157_axes_0, x = kv_cache_update_mask)[name = tensor<string, []>("op_157_cast_fp16")];
            tensor<int32, [1]> var_158_axes_0 = const()[name = tensor<string, []>("op_158_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [1, 1, 1, 224]> var_158_cast_fp16 = expand_dims(axes = var_158_axes_0, x = var_157_cast_fp16)[name = tensor<string, []>("op_158_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_160_cast_fp16 = mul(x = current_key_1_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_160_cast_fp16")];
            tensor<fp16, []> var_97_to_fp16 = const()[name = tensor<string, []>("op_97_to_fp16"), val = tensor<fp16, []>(0x1p+0)];
            tensor<fp16, [1, 1, 1, 224]> var_161_cast_fp16 = sub(x = var_97_to_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_161_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_162_cast_fp16 = mul(x = var_63_cast_fp16_0, y = var_161_cast_fp16)[name = tensor<string, []>("op_162_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> key_1_cast_fp16 = add(x = var_160_cast_fp16, y = var_162_cast_fp16)[name = tensor<string, []>("key_1_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_164_cast_fp16 = mul(x = current_value_1_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_164_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_166_cast_fp16 = mul(x = var_78_cast_fp16_0, y = var_161_cast_fp16)[name = tensor<string, []>("op_166_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> value_1_cast_fp16 = add(x = var_164_cast_fp16, y = var_166_cast_fp16)[name = tensor<string, []>("value_1_cast_fp16")];
            tensor<int32, [4]> var_169 = const()[name = tensor<string, []>("op_169"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_170_cast_fp16 = reshape(shape = var_169, x = query_1_cast_fp16)[name = tensor<string, []>("op_170_cast_fp16")];
            tensor<fp16, []> var_171_to_fp16 = const()[name = tensor<string, []>("op_171_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_172_cast_fp16 = mul(x = var_170_cast_fp16, y = var_171_to_fp16)[name = tensor<string, []>("op_172_cast_fp16")];
            tensor<int32, [4]> var_173 = const()[name = tensor<string, []>("op_173"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_174_cast_fp16 = reshape(shape = var_173, x = key_1_cast_fp16)[name = tensor<string, []>("op_174_cast_fp16")];
            tensor<bool, []> mh_w_1_transpose_x_0 = const()[name = tensor<string, []>("mh_w_1_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_1_transpose_y_0 = const()[name = tensor<string, []>("mh_w_1_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 224]> mh_w_1_cast_fp16 = matmul(transpose_x = mh_w_1_transpose_x_0, transpose_y = mh_w_1_transpose_y_0, x = var_172_cast_fp16, y = var_174_cast_fp16)[name = tensor<string, []>("mh_w_1_cast_fp16")];
            tensor<int32, [1]> var_178_axes_0 = const()[name = tensor<string, []>("op_178_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 224]> var_178_cast_fp16 = expand_dims(axes = var_178_axes_0, x = decoder_key_padding_mask)[name = tensor<string, []>("op_178_cast_fp16")];
            tensor<int32, [1]> var_179_axes_0 = const()[name = tensor<string, []>("op_179_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [1, 1, 1, 224]> var_179_cast_fp16 = expand_dims(axes = var_179_axes_0, x = var_178_cast_fp16)[name = tensor<string, []>("op_179_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> mh_w_3_cast_fp16 = add(x = mh_w_1_cast_fp16, y = var_179_cast_fp16)[name = tensor<string, []>("mh_w_3_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> var_182_cast_fp16 = softmax(axis = var_96, x = mh_w_3_cast_fp16)[name = tensor<string, []>("op_182_cast_fp16")];
            tensor<int32, [4]> var_183 = const()[name = tensor<string, []>("op_183"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_184_cast_fp16 = reshape(shape = var_183, x = value_1_cast_fp16)[name = tensor<string, []>("op_184_cast_fp16")];
            tensor<bool, []> attn_1_transpose_x_0 = const()[name = tensor<string, []>("attn_1_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_1_transpose_y_0 = const()[name = tensor<string, []>("attn_1_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_1_cast_fp16 = matmul(transpose_x = attn_1_transpose_x_0, transpose_y = attn_1_transpose_y_0, x = var_184_cast_fp16, y = var_182_cast_fp16)[name = tensor<string, []>("attn_1_cast_fp16")];
            tensor<int32, [4]> var_187 = const()[name = tensor<string, []>("op_187"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_1_cast_fp16 = reshape(shape = var_187, x = attn_1_cast_fp16)[name = tensor<string, []>("input_1_cast_fp16")];
            tensor<int32, [2]> var_191 = const()[name = tensor<string, []>("op_191"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_193 = const()[name = tensor<string, []>("op_193"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_7_pad_type_0 = const()[name = tensor<string, []>("obj_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_7_pad_0 = const()[name = tensor<string, []>("obj_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_0_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(83900160)))];
            tensor<fp16, [768]> layers_0_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85079872)))];
            tensor<fp16, [1, 768, 1, 1]> obj_7_cast_fp16 = conv(bias = layers_0_self_attn_o_proj_bias_to_fp16, dilations = var_193, groups = var_103, pad = obj_7_pad_0, pad_type = obj_7_pad_type_0, strides = var_191, weight = layers_0_self_attn_o_proj_weight_to_fp16, x = input_1_cast_fp16)[name = tensor<string, []>("obj_7_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_3_cast_fp16 = add(x = inputs_1_cast_fp16, y = obj_7_cast_fp16)[name = tensor<string, []>("inputs_3_cast_fp16")];
            tensor<int32, [1]> var_203 = const()[name = tensor<string, []>("op_203"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_3_cast_fp16 = reduce_mean(axes = var_203, keep_dims = var_104, x = inputs_3_cast_fp16)[name = tensor<string, []>("channels_mean_3_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_3_cast_fp16 = sub(x = inputs_3_cast_fp16, y = channels_mean_3_cast_fp16)[name = tensor<string, []>("zero_mean_3_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_3_cast_fp16 = mul(x = zero_mean_3_cast_fp16, y = zero_mean_3_cast_fp16)[name = tensor<string, []>("zero_mean_sq_3_cast_fp16")];
            tensor<int32, [1]> var_207 = const()[name = tensor<string, []>("op_207"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_208_cast_fp16 = reduce_mean(axes = var_207, keep_dims = var_104, x = zero_mean_sq_3_cast_fp16)[name = tensor<string, []>("op_208_cast_fp16")];
            tensor<fp16, []> var_209_to_fp16 = const()[name = tensor<string, []>("op_209_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_210_cast_fp16 = add(x = var_208_cast_fp16, y = var_209_to_fp16)[name = tensor<string, []>("op_210_cast_fp16")];
            tensor<fp16, []> denom_3_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_3_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_3_cast_fp16 = rsqrt(epsilon = denom_3_epsilon_0_to_fp16, x = var_210_cast_fp16)[name = tensor<string, []>("denom_3_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_3_cast_fp16 = mul(x = zero_mean_3_cast_fp16, y = denom_3_cast_fp16)[name = tensor<string, []>("out_3_cast_fp16")];
            tensor<fp16, [768]> obj_9_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_9_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85081472)))];
            tensor<fp16, [768]> obj_9_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_9_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85083072)))];
            tensor<fp16, []> obj_9_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_9_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_9_cast_fp16 = batch_norm(beta = obj_9_beta_0_to_fp16, epsilon = obj_9_epsilon_0_to_fp16, gamma = obj_9_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_3_cast_fp16)[name = tensor<string, []>("obj_9_cast_fp16")];
            tensor<int32, [2]> var_225 = const()[name = tensor<string, []>("op_225"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_227 = const()[name = tensor<string, []>("op_227"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_3_pad_type_0 = const()[name = tensor<string, []>("query_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_3_pad_0 = const()[name = tensor<string, []>("query_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_0_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85084672)))];
            tensor<fp16, [768]> layers_0_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86264384)))];
            tensor<fp16, [1, 768, 1, 1]> query_3_cast_fp16 = conv(bias = layers_0_encoder_attn_q_proj_bias_to_fp16, dilations = var_227, groups = var_103, pad = query_3_pad_0, pad_type = query_3_pad_type_0, strides = var_225, weight = layers_0_encoder_attn_q_proj_weight_to_fp16, x = obj_9_cast_fp16)[name = tensor<string, []>("query_3_cast_fp16")];
            tensor<int32, [2]> var_231 = const()[name = tensor<string, []>("op_231"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_233 = const()[name = tensor<string, []>("op_233"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_3_pad_type_0 = const()[name = tensor<string, []>("key_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_3_pad_0 = const()[name = tensor<string, []>("key_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_0_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86265984)))];
            tensor<fp16, [1, 768, 1, 1500]> key_3_cast_fp16 = conv(dilations = var_233, groups = var_103, pad = key_3_pad_0, pad_type = key_3_pad_type_0, strides = var_231, weight = layers_0_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_3_cast_fp16")];
            tensor<int32, [2]> var_238 = const()[name = tensor<string, []>("op_238"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_240 = const()[name = tensor<string, []>("op_240"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_3_pad_type_0 = const()[name = tensor<string, []>("value_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_3_pad_0 = const()[name = tensor<string, []>("value_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_0_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(87445696)))];
            tensor<fp16, [768]> layers_0_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(88625408)))];
            tensor<fp16, [1, 768, 1, 1500]> value_3_cast_fp16 = conv(bias = layers_0_encoder_attn_v_proj_bias_to_fp16, dilations = var_240, groups = var_103, pad = value_3_pad_0, pad_type = value_3_pad_type_0, strides = var_238, weight = layers_0_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_3_cast_fp16")];
            tensor<int32, [4]> var_244 = const()[name = tensor<string, []>("op_244"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_245_cast_fp16 = reshape(shape = var_244, x = query_3_cast_fp16)[name = tensor<string, []>("op_245_cast_fp16")];
            tensor<fp16, []> var_246_to_fp16 = const()[name = tensor<string, []>("op_246_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_247_cast_fp16 = mul(x = var_245_cast_fp16, y = var_246_to_fp16)[name = tensor<string, []>("op_247_cast_fp16")];
            tensor<int32, [4]> var_248 = const()[name = tensor<string, []>("op_248"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_249_cast_fp16 = reshape(shape = var_248, x = key_3_cast_fp16)[name = tensor<string, []>("op_249_cast_fp16")];
            tensor<bool, []> mh_w_5_transpose_x_0 = const()[name = tensor<string, []>("mh_w_5_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_5_transpose_y_0 = const()[name = tensor<string, []>("mh_w_5_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 1500]> mh_w_5_cast_fp16 = matmul(transpose_x = mh_w_5_transpose_x_0, transpose_y = mh_w_5_transpose_y_0, x = var_247_cast_fp16, y = var_249_cast_fp16)[name = tensor<string, []>("mh_w_5_cast_fp16")];
            tensor<fp16, [1, 12, 1, 1500]> obj_13_cast_fp16 = softmax(axis = var_96, x = mh_w_5_cast_fp16)[name = tensor<string, []>("obj_13_cast_fp16")];
            tensor<int32, [4]> var_253 = const()[name = tensor<string, []>("op_253"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_254_cast_fp16 = reshape(shape = var_253, x = value_3_cast_fp16)[name = tensor<string, []>("op_254_cast_fp16")];
            tensor<bool, []> attn_3_transpose_x_0 = const()[name = tensor<string, []>("attn_3_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_3_transpose_y_0 = const()[name = tensor<string, []>("attn_3_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_3_cast_fp16 = matmul(transpose_x = attn_3_transpose_x_0, transpose_y = attn_3_transpose_y_0, x = var_254_cast_fp16, y = obj_13_cast_fp16)[name = tensor<string, []>("attn_3_cast_fp16")];
            tensor<int32, [4]> var_257 = const()[name = tensor<string, []>("op_257"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_3_cast_fp16 = reshape(shape = var_257, x = attn_3_cast_fp16)[name = tensor<string, []>("input_3_cast_fp16")];
            tensor<int32, [2]> var_261 = const()[name = tensor<string, []>("op_261"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_263 = const()[name = tensor<string, []>("op_263"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_11_pad_type_0 = const()[name = tensor<string, []>("obj_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_11_pad_0 = const()[name = tensor<string, []>("obj_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_0_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(88627008)))];
            tensor<fp16, [768]> layers_0_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89806720)))];
            tensor<fp16, [1, 768, 1, 1]> obj_11_cast_fp16 = conv(bias = layers_0_encoder_attn_o_proj_bias_to_fp16, dilations = var_263, groups = var_103, pad = obj_11_pad_0, pad_type = obj_11_pad_type_0, strides = var_261, weight = layers_0_encoder_attn_o_proj_weight_to_fp16, x = input_3_cast_fp16)[name = tensor<string, []>("obj_11_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_5_cast_fp16 = add(x = inputs_3_cast_fp16, y = obj_11_cast_fp16)[name = tensor<string, []>("inputs_5_cast_fp16")];
            tensor<int32, [1]> var_269 = const()[name = tensor<string, []>("op_269"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_5_cast_fp16 = reduce_mean(axes = var_269, keep_dims = var_104, x = inputs_5_cast_fp16)[name = tensor<string, []>("channels_mean_5_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_5_cast_fp16 = sub(x = inputs_5_cast_fp16, y = channels_mean_5_cast_fp16)[name = tensor<string, []>("zero_mean_5_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_5_cast_fp16 = mul(x = zero_mean_5_cast_fp16, y = zero_mean_5_cast_fp16)[name = tensor<string, []>("zero_mean_sq_5_cast_fp16")];
            tensor<int32, [1]> var_273 = const()[name = tensor<string, []>("op_273"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_274_cast_fp16 = reduce_mean(axes = var_273, keep_dims = var_104, x = zero_mean_sq_5_cast_fp16)[name = tensor<string, []>("op_274_cast_fp16")];
            tensor<fp16, []> var_275_to_fp16 = const()[name = tensor<string, []>("op_275_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_276_cast_fp16 = add(x = var_274_cast_fp16, y = var_275_to_fp16)[name = tensor<string, []>("op_276_cast_fp16")];
            tensor<fp16, []> denom_5_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_5_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_5_cast_fp16 = rsqrt(epsilon = denom_5_epsilon_0_to_fp16, x = var_276_cast_fp16)[name = tensor<string, []>("denom_5_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_5_cast_fp16 = mul(x = zero_mean_5_cast_fp16, y = denom_5_cast_fp16)[name = tensor<string, []>("out_5_cast_fp16")];
            tensor<fp16, [768]> input_5_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_5_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89808320)))];
            tensor<fp16, [768]> input_5_beta_0_to_fp16 = const()[name = tensor<string, []>("input_5_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89809920)))];
            tensor<fp16, []> input_5_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_5_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> input_5_cast_fp16 = batch_norm(beta = input_5_beta_0_to_fp16, epsilon = input_5_epsilon_0_to_fp16, gamma = input_5_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_5_cast_fp16)[name = tensor<string, []>("input_5_cast_fp16")];
            tensor<int32, [2]> var_287 = const()[name = tensor<string, []>("op_287"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_289 = const()[name = tensor<string, []>("op_289"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_7_pad_type_0 = const()[name = tensor<string, []>("input_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_7_pad_0 = const()[name = tensor<string, []>("input_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [3072, 768, 1, 1]> layers_0_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_fc1_weight_to_fp16"), val = tensor<fp16, [3072, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89811520)))];
            tensor<fp16, [3072]> layers_0_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_fc1_bias_to_fp16"), val = tensor<fp16, [3072]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(94530176)))];
            tensor<fp16, [1, 3072, 1, 1]> input_7_cast_fp16 = conv(bias = layers_0_fc1_bias_to_fp16, dilations = var_289, groups = var_103, pad = input_7_pad_0, pad_type = input_7_pad_type_0, strides = var_287, weight = layers_0_fc1_weight_to_fp16, x = input_5_cast_fp16)[name = tensor<string, []>("input_7_cast_fp16")];
            tensor<string, []> input_9_mode_0 = const()[name = tensor<string, []>("input_9_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 3072, 1, 1]> input_9_cast_fp16 = gelu(mode = input_9_mode_0, x = input_7_cast_fp16)[name = tensor<string, []>("input_9_cast_fp16")];
            tensor<int32, [2]> var_295 = const()[name = tensor<string, []>("op_295"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_297 = const()[name = tensor<string, []>("op_297"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_3_pad_type_0 = const()[name = tensor<string, []>("hidden_states_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_3_pad_0 = const()[name = tensor<string, []>("hidden_states_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 3072, 1, 1]> layers_0_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_fc2_weight_to_fp16"), val = tensor<fp16, [768, 3072, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(94536384)))];
            tensor<fp16, [768]> layers_0_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_fc2_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(99255040)))];
            tensor<fp16, [1, 768, 1, 1]> hidden_states_3_cast_fp16 = conv(bias = layers_0_fc2_bias_to_fp16, dilations = var_297, groups = var_103, pad = hidden_states_3_pad_0, pad_type = hidden_states_3_pad_type_0, strides = var_295, weight = layers_0_fc2_weight_to_fp16, x = input_9_cast_fp16)[name = tensor<string, []>("hidden_states_3_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_7_cast_fp16 = add(x = inputs_5_cast_fp16, y = hidden_states_3_cast_fp16)[name = tensor<string, []>("inputs_7_cast_fp16")];
            tensor<int32, []> var_310 = const()[name = tensor<string, []>("op_310"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_317 = const()[name = tensor<string, []>("op_317"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_318 = const()[name = tensor<string, []>("op_318"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_330 = const()[name = tensor<string, []>("op_330"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_7_cast_fp16 = reduce_mean(axes = var_330, keep_dims = var_318, x = inputs_7_cast_fp16)[name = tensor<string, []>("channels_mean_7_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_7_cast_fp16 = sub(x = inputs_7_cast_fp16, y = channels_mean_7_cast_fp16)[name = tensor<string, []>("zero_mean_7_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_7_cast_fp16 = mul(x = zero_mean_7_cast_fp16, y = zero_mean_7_cast_fp16)[name = tensor<string, []>("zero_mean_sq_7_cast_fp16")];
            tensor<int32, [1]> var_334 = const()[name = tensor<string, []>("op_334"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_335_cast_fp16 = reduce_mean(axes = var_334, keep_dims = var_318, x = zero_mean_sq_7_cast_fp16)[name = tensor<string, []>("op_335_cast_fp16")];
            tensor<fp16, []> var_336_to_fp16 = const()[name = tensor<string, []>("op_336_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_337_cast_fp16 = add(x = var_335_cast_fp16, y = var_336_to_fp16)[name = tensor<string, []>("op_337_cast_fp16")];
            tensor<fp16, []> denom_7_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_7_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_7_cast_fp16 = rsqrt(epsilon = denom_7_epsilon_0_to_fp16, x = var_337_cast_fp16)[name = tensor<string, []>("denom_7_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_7_cast_fp16 = mul(x = zero_mean_7_cast_fp16, y = denom_7_cast_fp16)[name = tensor<string, []>("out_7_cast_fp16")];
            tensor<fp16, [768]> obj_15_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_15_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(99256640)))];
            tensor<fp16, [768]> obj_15_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_15_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(99258240)))];
            tensor<fp16, []> obj_15_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_15_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_15_cast_fp16 = batch_norm(beta = obj_15_beta_0_to_fp16, epsilon = obj_15_epsilon_0_to_fp16, gamma = obj_15_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_7_cast_fp16)[name = tensor<string, []>("obj_15_cast_fp16")];
            tensor<int32, [2]> var_352 = const()[name = tensor<string, []>("op_352"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_354 = const()[name = tensor<string, []>("op_354"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_5_pad_type_0 = const()[name = tensor<string, []>("query_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_5_pad_0 = const()[name = tensor<string, []>("query_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_1_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(99259840)))];
            tensor<fp16, [768]> layers_1_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(100439552)))];
            tensor<fp16, [1, 768, 1, 1]> query_5_cast_fp16 = conv(bias = layers_1_self_attn_q_proj_bias_to_fp16, dilations = var_354, groups = var_317, pad = query_5_pad_0, pad_type = query_5_pad_type_0, strides = var_352, weight = layers_1_self_attn_q_proj_weight_to_fp16, x = obj_15_cast_fp16)[name = tensor<string, []>("query_5_cast_fp16")];
            tensor<int32, [2]> var_358 = const()[name = tensor<string, []>("op_358"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_360 = const()[name = tensor<string, []>("op_360"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_3_pad_type_0 = const()[name = tensor<string, []>("current_key_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_3_pad_0 = const()[name = tensor<string, []>("current_key_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_1_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(100441152)))];
            tensor<fp16, [1, 768, 1, 1]> current_key_3_cast_fp16 = conv(dilations = var_360, groups = var_317, pad = current_key_3_pad_0, pad_type = current_key_3_pad_type_0, strides = var_358, weight = layers_1_self_attn_k_proj_weight_to_fp16, x = obj_15_cast_fp16)[name = tensor<string, []>("current_key_3_cast_fp16")];
            tensor<int32, [2]> var_365 = const()[name = tensor<string, []>("op_365"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_367 = const()[name = tensor<string, []>("op_367"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_3_pad_type_0 = const()[name = tensor<string, []>("current_value_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_3_pad_0 = const()[name = tensor<string, []>("current_value_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_1_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(101620864)))];
            tensor<fp16, [768]> layers_1_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(102800576)))];
            tensor<fp16, [1, 768, 1, 1]> current_value_3_cast_fp16 = conv(bias = layers_1_self_attn_v_proj_bias_to_fp16, dilations = var_367, groups = var_317, pad = current_value_3_pad_0, pad_type = current_value_3_pad_type_0, strides = var_365, weight = layers_1_self_attn_v_proj_weight_to_fp16, x = obj_15_cast_fp16)[name = tensor<string, []>("current_value_3_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_374_cast_fp16 = mul(x = current_key_3_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_374_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_376_cast_fp16 = mul(x = var_63_cast_fp16_1, y = var_161_cast_fp16)[name = tensor<string, []>("op_376_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> key_5_cast_fp16 = add(x = var_374_cast_fp16, y = var_376_cast_fp16)[name = tensor<string, []>("key_5_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_378_cast_fp16 = mul(x = current_value_3_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_378_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_380_cast_fp16 = mul(x = var_78_cast_fp16_1, y = var_161_cast_fp16)[name = tensor<string, []>("op_380_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> value_5_cast_fp16 = add(x = var_378_cast_fp16, y = var_380_cast_fp16)[name = tensor<string, []>("value_5_cast_fp16")];
            tensor<int32, [4]> var_383 = const()[name = tensor<string, []>("op_383"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_384_cast_fp16 = reshape(shape = var_383, x = query_5_cast_fp16)[name = tensor<string, []>("op_384_cast_fp16")];
            tensor<fp16, []> var_385_to_fp16 = const()[name = tensor<string, []>("op_385_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_386_cast_fp16 = mul(x = var_384_cast_fp16, y = var_385_to_fp16)[name = tensor<string, []>("op_386_cast_fp16")];
            tensor<int32, [4]> var_387 = const()[name = tensor<string, []>("op_387"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_388_cast_fp16 = reshape(shape = var_387, x = key_5_cast_fp16)[name = tensor<string, []>("op_388_cast_fp16")];
            tensor<bool, []> mh_w_7_transpose_x_0 = const()[name = tensor<string, []>("mh_w_7_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_7_transpose_y_0 = const()[name = tensor<string, []>("mh_w_7_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 224]> mh_w_7_cast_fp16 = matmul(transpose_x = mh_w_7_transpose_x_0, transpose_y = mh_w_7_transpose_y_0, x = var_386_cast_fp16, y = var_388_cast_fp16)[name = tensor<string, []>("mh_w_7_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> mh_w_9_cast_fp16 = add(x = mh_w_7_cast_fp16, y = var_179_cast_fp16)[name = tensor<string, []>("mh_w_9_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> var_396_cast_fp16 = softmax(axis = var_310, x = mh_w_9_cast_fp16)[name = tensor<string, []>("op_396_cast_fp16")];
            tensor<int32, [4]> var_397 = const()[name = tensor<string, []>("op_397"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_398_cast_fp16 = reshape(shape = var_397, x = value_5_cast_fp16)[name = tensor<string, []>("op_398_cast_fp16")];
            tensor<bool, []> attn_5_transpose_x_0 = const()[name = tensor<string, []>("attn_5_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_5_transpose_y_0 = const()[name = tensor<string, []>("attn_5_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_5_cast_fp16 = matmul(transpose_x = attn_5_transpose_x_0, transpose_y = attn_5_transpose_y_0, x = var_398_cast_fp16, y = var_396_cast_fp16)[name = tensor<string, []>("attn_5_cast_fp16")];
            tensor<int32, [4]> var_401 = const()[name = tensor<string, []>("op_401"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_11_cast_fp16 = reshape(shape = var_401, x = attn_5_cast_fp16)[name = tensor<string, []>("input_11_cast_fp16")];
            tensor<int32, [2]> var_405 = const()[name = tensor<string, []>("op_405"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_407 = const()[name = tensor<string, []>("op_407"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_21_pad_type_0 = const()[name = tensor<string, []>("obj_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_21_pad_0 = const()[name = tensor<string, []>("obj_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_1_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(102802176)))];
            tensor<fp16, [768]> layers_1_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(103981888)))];
            tensor<fp16, [1, 768, 1, 1]> obj_21_cast_fp16 = conv(bias = layers_1_self_attn_o_proj_bias_to_fp16, dilations = var_407, groups = var_317, pad = obj_21_pad_0, pad_type = obj_21_pad_type_0, strides = var_405, weight = layers_1_self_attn_o_proj_weight_to_fp16, x = input_11_cast_fp16)[name = tensor<string, []>("obj_21_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_9_cast_fp16 = add(x = inputs_7_cast_fp16, y = obj_21_cast_fp16)[name = tensor<string, []>("inputs_9_cast_fp16")];
            tensor<int32, [1]> var_417 = const()[name = tensor<string, []>("op_417"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_9_cast_fp16 = reduce_mean(axes = var_417, keep_dims = var_318, x = inputs_9_cast_fp16)[name = tensor<string, []>("channels_mean_9_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_9_cast_fp16 = sub(x = inputs_9_cast_fp16, y = channels_mean_9_cast_fp16)[name = tensor<string, []>("zero_mean_9_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_9_cast_fp16 = mul(x = zero_mean_9_cast_fp16, y = zero_mean_9_cast_fp16)[name = tensor<string, []>("zero_mean_sq_9_cast_fp16")];
            tensor<int32, [1]> var_421 = const()[name = tensor<string, []>("op_421"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_422_cast_fp16 = reduce_mean(axes = var_421, keep_dims = var_318, x = zero_mean_sq_9_cast_fp16)[name = tensor<string, []>("op_422_cast_fp16")];
            tensor<fp16, []> var_423_to_fp16 = const()[name = tensor<string, []>("op_423_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_424_cast_fp16 = add(x = var_422_cast_fp16, y = var_423_to_fp16)[name = tensor<string, []>("op_424_cast_fp16")];
            tensor<fp16, []> denom_9_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_9_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_9_cast_fp16 = rsqrt(epsilon = denom_9_epsilon_0_to_fp16, x = var_424_cast_fp16)[name = tensor<string, []>("denom_9_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_9_cast_fp16 = mul(x = zero_mean_9_cast_fp16, y = denom_9_cast_fp16)[name = tensor<string, []>("out_9_cast_fp16")];
            tensor<fp16, [768]> obj_23_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_23_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(103983488)))];
            tensor<fp16, [768]> obj_23_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_23_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(103985088)))];
            tensor<fp16, []> obj_23_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_23_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_23_cast_fp16 = batch_norm(beta = obj_23_beta_0_to_fp16, epsilon = obj_23_epsilon_0_to_fp16, gamma = obj_23_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_9_cast_fp16)[name = tensor<string, []>("obj_23_cast_fp16")];
            tensor<int32, [2]> var_439 = const()[name = tensor<string, []>("op_439"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_441 = const()[name = tensor<string, []>("op_441"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_7_pad_type_0 = const()[name = tensor<string, []>("query_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_7_pad_0 = const()[name = tensor<string, []>("query_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_1_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(103986688)))];
            tensor<fp16, [768]> layers_1_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(105166400)))];
            tensor<fp16, [1, 768, 1, 1]> query_7_cast_fp16 = conv(bias = layers_1_encoder_attn_q_proj_bias_to_fp16, dilations = var_441, groups = var_317, pad = query_7_pad_0, pad_type = query_7_pad_type_0, strides = var_439, weight = layers_1_encoder_attn_q_proj_weight_to_fp16, x = obj_23_cast_fp16)[name = tensor<string, []>("query_7_cast_fp16")];
            tensor<int32, [2]> var_445 = const()[name = tensor<string, []>("op_445"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_447 = const()[name = tensor<string, []>("op_447"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_7_pad_type_0 = const()[name = tensor<string, []>("key_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_7_pad_0 = const()[name = tensor<string, []>("key_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_1_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(105168000)))];
            tensor<fp16, [1, 768, 1, 1500]> key_7_cast_fp16 = conv(dilations = var_447, groups = var_317, pad = key_7_pad_0, pad_type = key_7_pad_type_0, strides = var_445, weight = layers_1_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_7_cast_fp16")];
            tensor<int32, [2]> var_452 = const()[name = tensor<string, []>("op_452"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_454 = const()[name = tensor<string, []>("op_454"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_7_pad_type_0 = const()[name = tensor<string, []>("value_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_7_pad_0 = const()[name = tensor<string, []>("value_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_1_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(106347712)))];
            tensor<fp16, [768]> layers_1_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(107527424)))];
            tensor<fp16, [1, 768, 1, 1500]> value_7_cast_fp16 = conv(bias = layers_1_encoder_attn_v_proj_bias_to_fp16, dilations = var_454, groups = var_317, pad = value_7_pad_0, pad_type = value_7_pad_type_0, strides = var_452, weight = layers_1_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_7_cast_fp16")];
            tensor<int32, [4]> var_458 = const()[name = tensor<string, []>("op_458"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_459_cast_fp16 = reshape(shape = var_458, x = query_7_cast_fp16)[name = tensor<string, []>("op_459_cast_fp16")];
            tensor<fp16, []> var_460_to_fp16 = const()[name = tensor<string, []>("op_460_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_461_cast_fp16 = mul(x = var_459_cast_fp16, y = var_460_to_fp16)[name = tensor<string, []>("op_461_cast_fp16")];
            tensor<int32, [4]> var_462 = const()[name = tensor<string, []>("op_462"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_463_cast_fp16 = reshape(shape = var_462, x = key_7_cast_fp16)[name = tensor<string, []>("op_463_cast_fp16")];
            tensor<bool, []> mh_w_11_transpose_x_0 = const()[name = tensor<string, []>("mh_w_11_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_11_transpose_y_0 = const()[name = tensor<string, []>("mh_w_11_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 1500]> mh_w_11_cast_fp16 = matmul(transpose_x = mh_w_11_transpose_x_0, transpose_y = mh_w_11_transpose_y_0, x = var_461_cast_fp16, y = var_463_cast_fp16)[name = tensor<string, []>("mh_w_11_cast_fp16")];
            tensor<fp16, [1, 12, 1, 1500]> obj_27_cast_fp16 = softmax(axis = var_310, x = mh_w_11_cast_fp16)[name = tensor<string, []>("obj_27_cast_fp16")];
            tensor<int32, [4]> var_467 = const()[name = tensor<string, []>("op_467"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_468_cast_fp16 = reshape(shape = var_467, x = value_7_cast_fp16)[name = tensor<string, []>("op_468_cast_fp16")];
            tensor<bool, []> attn_7_transpose_x_0 = const()[name = tensor<string, []>("attn_7_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_7_transpose_y_0 = const()[name = tensor<string, []>("attn_7_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_7_cast_fp16 = matmul(transpose_x = attn_7_transpose_x_0, transpose_y = attn_7_transpose_y_0, x = var_468_cast_fp16, y = obj_27_cast_fp16)[name = tensor<string, []>("attn_7_cast_fp16")];
            tensor<int32, [4]> var_471 = const()[name = tensor<string, []>("op_471"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_13_cast_fp16 = reshape(shape = var_471, x = attn_7_cast_fp16)[name = tensor<string, []>("input_13_cast_fp16")];
            tensor<int32, [2]> var_475 = const()[name = tensor<string, []>("op_475"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_477 = const()[name = tensor<string, []>("op_477"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_25_pad_type_0 = const()[name = tensor<string, []>("obj_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_25_pad_0 = const()[name = tensor<string, []>("obj_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_1_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(107529024)))];
            tensor<fp16, [768]> layers_1_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(108708736)))];
            tensor<fp16, [1, 768, 1, 1]> obj_25_cast_fp16 = conv(bias = layers_1_encoder_attn_o_proj_bias_to_fp16, dilations = var_477, groups = var_317, pad = obj_25_pad_0, pad_type = obj_25_pad_type_0, strides = var_475, weight = layers_1_encoder_attn_o_proj_weight_to_fp16, x = input_13_cast_fp16)[name = tensor<string, []>("obj_25_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_11_cast_fp16 = add(x = inputs_9_cast_fp16, y = obj_25_cast_fp16)[name = tensor<string, []>("inputs_11_cast_fp16")];
            tensor<int32, [1]> var_483 = const()[name = tensor<string, []>("op_483"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_11_cast_fp16 = reduce_mean(axes = var_483, keep_dims = var_318, x = inputs_11_cast_fp16)[name = tensor<string, []>("channels_mean_11_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_11_cast_fp16 = sub(x = inputs_11_cast_fp16, y = channels_mean_11_cast_fp16)[name = tensor<string, []>("zero_mean_11_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_11_cast_fp16 = mul(x = zero_mean_11_cast_fp16, y = zero_mean_11_cast_fp16)[name = tensor<string, []>("zero_mean_sq_11_cast_fp16")];
            tensor<int32, [1]> var_487 = const()[name = tensor<string, []>("op_487"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_488_cast_fp16 = reduce_mean(axes = var_487, keep_dims = var_318, x = zero_mean_sq_11_cast_fp16)[name = tensor<string, []>("op_488_cast_fp16")];
            tensor<fp16, []> var_489_to_fp16 = const()[name = tensor<string, []>("op_489_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_490_cast_fp16 = add(x = var_488_cast_fp16, y = var_489_to_fp16)[name = tensor<string, []>("op_490_cast_fp16")];
            tensor<fp16, []> denom_11_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_11_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_11_cast_fp16 = rsqrt(epsilon = denom_11_epsilon_0_to_fp16, x = var_490_cast_fp16)[name = tensor<string, []>("denom_11_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_11_cast_fp16 = mul(x = zero_mean_11_cast_fp16, y = denom_11_cast_fp16)[name = tensor<string, []>("out_11_cast_fp16")];
            tensor<fp16, [768]> input_15_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_15_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(108710336)))];
            tensor<fp16, [768]> input_15_beta_0_to_fp16 = const()[name = tensor<string, []>("input_15_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(108711936)))];
            tensor<fp16, []> input_15_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_15_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> input_15_cast_fp16 = batch_norm(beta = input_15_beta_0_to_fp16, epsilon = input_15_epsilon_0_to_fp16, gamma = input_15_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_11_cast_fp16)[name = tensor<string, []>("input_15_cast_fp16")];
            tensor<int32, [2]> var_501 = const()[name = tensor<string, []>("op_501"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_503 = const()[name = tensor<string, []>("op_503"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_17_pad_type_0 = const()[name = tensor<string, []>("input_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_17_pad_0 = const()[name = tensor<string, []>("input_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [3072, 768, 1, 1]> layers_1_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_fc1_weight_to_fp16"), val = tensor<fp16, [3072, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(108713536)))];
            tensor<fp16, [3072]> layers_1_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_fc1_bias_to_fp16"), val = tensor<fp16, [3072]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(113432192)))];
            tensor<fp16, [1, 3072, 1, 1]> input_17_cast_fp16 = conv(bias = layers_1_fc1_bias_to_fp16, dilations = var_503, groups = var_317, pad = input_17_pad_0, pad_type = input_17_pad_type_0, strides = var_501, weight = layers_1_fc1_weight_to_fp16, x = input_15_cast_fp16)[name = tensor<string, []>("input_17_cast_fp16")];
            tensor<string, []> input_19_mode_0 = const()[name = tensor<string, []>("input_19_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 3072, 1, 1]> input_19_cast_fp16 = gelu(mode = input_19_mode_0, x = input_17_cast_fp16)[name = tensor<string, []>("input_19_cast_fp16")];
            tensor<int32, [2]> var_509 = const()[name = tensor<string, []>("op_509"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_511 = const()[name = tensor<string, []>("op_511"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_5_pad_type_0 = const()[name = tensor<string, []>("hidden_states_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_5_pad_0 = const()[name = tensor<string, []>("hidden_states_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 3072, 1, 1]> layers_1_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_fc2_weight_to_fp16"), val = tensor<fp16, [768, 3072, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(113438400)))];
            tensor<fp16, [768]> layers_1_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_fc2_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(118157056)))];
            tensor<fp16, [1, 768, 1, 1]> hidden_states_5_cast_fp16 = conv(bias = layers_1_fc2_bias_to_fp16, dilations = var_511, groups = var_317, pad = hidden_states_5_pad_0, pad_type = hidden_states_5_pad_type_0, strides = var_509, weight = layers_1_fc2_weight_to_fp16, x = input_19_cast_fp16)[name = tensor<string, []>("hidden_states_5_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_13_cast_fp16 = add(x = inputs_11_cast_fp16, y = hidden_states_5_cast_fp16)[name = tensor<string, []>("inputs_13_cast_fp16")];
            tensor<int32, []> var_524 = const()[name = tensor<string, []>("op_524"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_531 = const()[name = tensor<string, []>("op_531"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_532 = const()[name = tensor<string, []>("op_532"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_544 = const()[name = tensor<string, []>("op_544"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_13_cast_fp16 = reduce_mean(axes = var_544, keep_dims = var_532, x = inputs_13_cast_fp16)[name = tensor<string, []>("channels_mean_13_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_13_cast_fp16 = sub(x = inputs_13_cast_fp16, y = channels_mean_13_cast_fp16)[name = tensor<string, []>("zero_mean_13_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_13_cast_fp16 = mul(x = zero_mean_13_cast_fp16, y = zero_mean_13_cast_fp16)[name = tensor<string, []>("zero_mean_sq_13_cast_fp16")];
            tensor<int32, [1]> var_548 = const()[name = tensor<string, []>("op_548"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_549_cast_fp16 = reduce_mean(axes = var_548, keep_dims = var_532, x = zero_mean_sq_13_cast_fp16)[name = tensor<string, []>("op_549_cast_fp16")];
            tensor<fp16, []> var_550_to_fp16 = const()[name = tensor<string, []>("op_550_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_551_cast_fp16 = add(x = var_549_cast_fp16, y = var_550_to_fp16)[name = tensor<string, []>("op_551_cast_fp16")];
            tensor<fp16, []> denom_13_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_13_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_13_cast_fp16 = rsqrt(epsilon = denom_13_epsilon_0_to_fp16, x = var_551_cast_fp16)[name = tensor<string, []>("denom_13_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_13_cast_fp16 = mul(x = zero_mean_13_cast_fp16, y = denom_13_cast_fp16)[name = tensor<string, []>("out_13_cast_fp16")];
            tensor<fp16, [768]> obj_29_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_29_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(118158656)))];
            tensor<fp16, [768]> obj_29_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_29_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(118160256)))];
            tensor<fp16, []> obj_29_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_29_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_29_cast_fp16 = batch_norm(beta = obj_29_beta_0_to_fp16, epsilon = obj_29_epsilon_0_to_fp16, gamma = obj_29_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_13_cast_fp16)[name = tensor<string, []>("obj_29_cast_fp16")];
            tensor<int32, [2]> var_566 = const()[name = tensor<string, []>("op_566"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_568 = const()[name = tensor<string, []>("op_568"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_9_pad_type_0 = const()[name = tensor<string, []>("query_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_9_pad_0 = const()[name = tensor<string, []>("query_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_2_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(118161856)))];
            tensor<fp16, [768]> layers_2_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(119341568)))];
            tensor<fp16, [1, 768, 1, 1]> query_9_cast_fp16 = conv(bias = layers_2_self_attn_q_proj_bias_to_fp16, dilations = var_568, groups = var_531, pad = query_9_pad_0, pad_type = query_9_pad_type_0, strides = var_566, weight = layers_2_self_attn_q_proj_weight_to_fp16, x = obj_29_cast_fp16)[name = tensor<string, []>("query_9_cast_fp16")];
            tensor<int32, [2]> var_572 = const()[name = tensor<string, []>("op_572"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_574 = const()[name = tensor<string, []>("op_574"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_5_pad_type_0 = const()[name = tensor<string, []>("current_key_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_5_pad_0 = const()[name = tensor<string, []>("current_key_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_2_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(119343168)))];
            tensor<fp16, [1, 768, 1, 1]> current_key_5_cast_fp16 = conv(dilations = var_574, groups = var_531, pad = current_key_5_pad_0, pad_type = current_key_5_pad_type_0, strides = var_572, weight = layers_2_self_attn_k_proj_weight_to_fp16, x = obj_29_cast_fp16)[name = tensor<string, []>("current_key_5_cast_fp16")];
            tensor<int32, [2]> var_579 = const()[name = tensor<string, []>("op_579"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_581 = const()[name = tensor<string, []>("op_581"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_5_pad_type_0 = const()[name = tensor<string, []>("current_value_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_5_pad_0 = const()[name = tensor<string, []>("current_value_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_2_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(120522880)))];
            tensor<fp16, [768]> layers_2_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(121702592)))];
            tensor<fp16, [1, 768, 1, 1]> current_value_5_cast_fp16 = conv(bias = layers_2_self_attn_v_proj_bias_to_fp16, dilations = var_581, groups = var_531, pad = current_value_5_pad_0, pad_type = current_value_5_pad_type_0, strides = var_579, weight = layers_2_self_attn_v_proj_weight_to_fp16, x = obj_29_cast_fp16)[name = tensor<string, []>("current_value_5_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_588_cast_fp16 = mul(x = current_key_5_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_588_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_590_cast_fp16 = mul(x = var_63_cast_fp16_2, y = var_161_cast_fp16)[name = tensor<string, []>("op_590_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> key_9_cast_fp16 = add(x = var_588_cast_fp16, y = var_590_cast_fp16)[name = tensor<string, []>("key_9_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_592_cast_fp16 = mul(x = current_value_5_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_592_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_594_cast_fp16 = mul(x = var_78_cast_fp16_2, y = var_161_cast_fp16)[name = tensor<string, []>("op_594_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> value_9_cast_fp16 = add(x = var_592_cast_fp16, y = var_594_cast_fp16)[name = tensor<string, []>("value_9_cast_fp16")];
            tensor<int32, [4]> var_597 = const()[name = tensor<string, []>("op_597"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_598_cast_fp16 = reshape(shape = var_597, x = query_9_cast_fp16)[name = tensor<string, []>("op_598_cast_fp16")];
            tensor<fp16, []> var_599_to_fp16 = const()[name = tensor<string, []>("op_599_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_600_cast_fp16 = mul(x = var_598_cast_fp16, y = var_599_to_fp16)[name = tensor<string, []>("op_600_cast_fp16")];
            tensor<int32, [4]> var_601 = const()[name = tensor<string, []>("op_601"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_602_cast_fp16 = reshape(shape = var_601, x = key_9_cast_fp16)[name = tensor<string, []>("op_602_cast_fp16")];
            tensor<bool, []> mh_w_13_transpose_x_0 = const()[name = tensor<string, []>("mh_w_13_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_13_transpose_y_0 = const()[name = tensor<string, []>("mh_w_13_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 224]> mh_w_13_cast_fp16 = matmul(transpose_x = mh_w_13_transpose_x_0, transpose_y = mh_w_13_transpose_y_0, x = var_600_cast_fp16, y = var_602_cast_fp16)[name = tensor<string, []>("mh_w_13_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> mh_w_15_cast_fp16 = add(x = mh_w_13_cast_fp16, y = var_179_cast_fp16)[name = tensor<string, []>("mh_w_15_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> var_610_cast_fp16 = softmax(axis = var_524, x = mh_w_15_cast_fp16)[name = tensor<string, []>("op_610_cast_fp16")];
            tensor<int32, [4]> var_611 = const()[name = tensor<string, []>("op_611"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_612_cast_fp16 = reshape(shape = var_611, x = value_9_cast_fp16)[name = tensor<string, []>("op_612_cast_fp16")];
            tensor<bool, []> attn_9_transpose_x_0 = const()[name = tensor<string, []>("attn_9_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_9_transpose_y_0 = const()[name = tensor<string, []>("attn_9_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_9_cast_fp16 = matmul(transpose_x = attn_9_transpose_x_0, transpose_y = attn_9_transpose_y_0, x = var_612_cast_fp16, y = var_610_cast_fp16)[name = tensor<string, []>("attn_9_cast_fp16")];
            tensor<int32, [4]> var_615 = const()[name = tensor<string, []>("op_615"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_21_cast_fp16 = reshape(shape = var_615, x = attn_9_cast_fp16)[name = tensor<string, []>("input_21_cast_fp16")];
            tensor<int32, [2]> var_619 = const()[name = tensor<string, []>("op_619"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_621 = const()[name = tensor<string, []>("op_621"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_35_pad_type_0 = const()[name = tensor<string, []>("obj_35_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_35_pad_0 = const()[name = tensor<string, []>("obj_35_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_2_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(121704192)))];
            tensor<fp16, [768]> layers_2_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(122883904)))];
            tensor<fp16, [1, 768, 1, 1]> obj_35_cast_fp16 = conv(bias = layers_2_self_attn_o_proj_bias_to_fp16, dilations = var_621, groups = var_531, pad = obj_35_pad_0, pad_type = obj_35_pad_type_0, strides = var_619, weight = layers_2_self_attn_o_proj_weight_to_fp16, x = input_21_cast_fp16)[name = tensor<string, []>("obj_35_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_15_cast_fp16 = add(x = inputs_13_cast_fp16, y = obj_35_cast_fp16)[name = tensor<string, []>("inputs_15_cast_fp16")];
            tensor<int32, [1]> var_631 = const()[name = tensor<string, []>("op_631"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_15_cast_fp16 = reduce_mean(axes = var_631, keep_dims = var_532, x = inputs_15_cast_fp16)[name = tensor<string, []>("channels_mean_15_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_15_cast_fp16 = sub(x = inputs_15_cast_fp16, y = channels_mean_15_cast_fp16)[name = tensor<string, []>("zero_mean_15_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_15_cast_fp16 = mul(x = zero_mean_15_cast_fp16, y = zero_mean_15_cast_fp16)[name = tensor<string, []>("zero_mean_sq_15_cast_fp16")];
            tensor<int32, [1]> var_635 = const()[name = tensor<string, []>("op_635"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_636_cast_fp16 = reduce_mean(axes = var_635, keep_dims = var_532, x = zero_mean_sq_15_cast_fp16)[name = tensor<string, []>("op_636_cast_fp16")];
            tensor<fp16, []> var_637_to_fp16 = const()[name = tensor<string, []>("op_637_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_638_cast_fp16 = add(x = var_636_cast_fp16, y = var_637_to_fp16)[name = tensor<string, []>("op_638_cast_fp16")];
            tensor<fp16, []> denom_15_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_15_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_15_cast_fp16 = rsqrt(epsilon = denom_15_epsilon_0_to_fp16, x = var_638_cast_fp16)[name = tensor<string, []>("denom_15_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_15_cast_fp16 = mul(x = zero_mean_15_cast_fp16, y = denom_15_cast_fp16)[name = tensor<string, []>("out_15_cast_fp16")];
            tensor<fp16, [768]> obj_37_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_37_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(122885504)))];
            tensor<fp16, [768]> obj_37_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_37_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(122887104)))];
            tensor<fp16, []> obj_37_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_37_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_37_cast_fp16 = batch_norm(beta = obj_37_beta_0_to_fp16, epsilon = obj_37_epsilon_0_to_fp16, gamma = obj_37_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_15_cast_fp16)[name = tensor<string, []>("obj_37_cast_fp16")];
            tensor<int32, [2]> var_653 = const()[name = tensor<string, []>("op_653"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_655 = const()[name = tensor<string, []>("op_655"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_11_pad_type_0 = const()[name = tensor<string, []>("query_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_11_pad_0 = const()[name = tensor<string, []>("query_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_2_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(122888704)))];
            tensor<fp16, [768]> layers_2_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(124068416)))];
            tensor<fp16, [1, 768, 1, 1]> query_11_cast_fp16 = conv(bias = layers_2_encoder_attn_q_proj_bias_to_fp16, dilations = var_655, groups = var_531, pad = query_11_pad_0, pad_type = query_11_pad_type_0, strides = var_653, weight = layers_2_encoder_attn_q_proj_weight_to_fp16, x = obj_37_cast_fp16)[name = tensor<string, []>("query_11_cast_fp16")];
            tensor<int32, [2]> var_659 = const()[name = tensor<string, []>("op_659"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_661 = const()[name = tensor<string, []>("op_661"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_11_pad_type_0 = const()[name = tensor<string, []>("key_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_11_pad_0 = const()[name = tensor<string, []>("key_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_2_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(124070016)))];
            tensor<fp16, [1, 768, 1, 1500]> key_11_cast_fp16 = conv(dilations = var_661, groups = var_531, pad = key_11_pad_0, pad_type = key_11_pad_type_0, strides = var_659, weight = layers_2_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_11_cast_fp16")];
            tensor<int32, [2]> var_666 = const()[name = tensor<string, []>("op_666"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_668 = const()[name = tensor<string, []>("op_668"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_11_pad_type_0 = const()[name = tensor<string, []>("value_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_11_pad_0 = const()[name = tensor<string, []>("value_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_2_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(125249728)))];
            tensor<fp16, [768]> layers_2_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(126429440)))];
            tensor<fp16, [1, 768, 1, 1500]> value_11_cast_fp16 = conv(bias = layers_2_encoder_attn_v_proj_bias_to_fp16, dilations = var_668, groups = var_531, pad = value_11_pad_0, pad_type = value_11_pad_type_0, strides = var_666, weight = layers_2_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_11_cast_fp16")];
            tensor<int32, [4]> var_672 = const()[name = tensor<string, []>("op_672"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_673_cast_fp16 = reshape(shape = var_672, x = query_11_cast_fp16)[name = tensor<string, []>("op_673_cast_fp16")];
            tensor<fp16, []> var_674_to_fp16 = const()[name = tensor<string, []>("op_674_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_675_cast_fp16 = mul(x = var_673_cast_fp16, y = var_674_to_fp16)[name = tensor<string, []>("op_675_cast_fp16")];
            tensor<int32, [4]> var_676 = const()[name = tensor<string, []>("op_676"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_677_cast_fp16 = reshape(shape = var_676, x = key_11_cast_fp16)[name = tensor<string, []>("op_677_cast_fp16")];
            tensor<bool, []> mh_w_17_transpose_x_0 = const()[name = tensor<string, []>("mh_w_17_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_17_transpose_y_0 = const()[name = tensor<string, []>("mh_w_17_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 1500]> mh_w_17_cast_fp16 = matmul(transpose_x = mh_w_17_transpose_x_0, transpose_y = mh_w_17_transpose_y_0, x = var_675_cast_fp16, y = var_677_cast_fp16)[name = tensor<string, []>("mh_w_17_cast_fp16")];
            tensor<fp16, [1, 12, 1, 1500]> obj_41_cast_fp16 = softmax(axis = var_524, x = mh_w_17_cast_fp16)[name = tensor<string, []>("obj_41_cast_fp16")];
            tensor<int32, [4]> var_681 = const()[name = tensor<string, []>("op_681"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_682_cast_fp16 = reshape(shape = var_681, x = value_11_cast_fp16)[name = tensor<string, []>("op_682_cast_fp16")];
            tensor<bool, []> attn_11_transpose_x_0 = const()[name = tensor<string, []>("attn_11_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_11_transpose_y_0 = const()[name = tensor<string, []>("attn_11_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_11_cast_fp16 = matmul(transpose_x = attn_11_transpose_x_0, transpose_y = attn_11_transpose_y_0, x = var_682_cast_fp16, y = obj_41_cast_fp16)[name = tensor<string, []>("attn_11_cast_fp16")];
            tensor<int32, [4]> var_685 = const()[name = tensor<string, []>("op_685"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_23_cast_fp16 = reshape(shape = var_685, x = attn_11_cast_fp16)[name = tensor<string, []>("input_23_cast_fp16")];
            tensor<int32, [2]> var_689 = const()[name = tensor<string, []>("op_689"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_691 = const()[name = tensor<string, []>("op_691"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_39_pad_type_0 = const()[name = tensor<string, []>("obj_39_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_39_pad_0 = const()[name = tensor<string, []>("obj_39_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_2_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(126431040)))];
            tensor<fp16, [768]> layers_2_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(127610752)))];
            tensor<fp16, [1, 768, 1, 1]> obj_39_cast_fp16 = conv(bias = layers_2_encoder_attn_o_proj_bias_to_fp16, dilations = var_691, groups = var_531, pad = obj_39_pad_0, pad_type = obj_39_pad_type_0, strides = var_689, weight = layers_2_encoder_attn_o_proj_weight_to_fp16, x = input_23_cast_fp16)[name = tensor<string, []>("obj_39_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_17_cast_fp16 = add(x = inputs_15_cast_fp16, y = obj_39_cast_fp16)[name = tensor<string, []>("inputs_17_cast_fp16")];
            tensor<int32, [1]> var_697 = const()[name = tensor<string, []>("op_697"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_17_cast_fp16 = reduce_mean(axes = var_697, keep_dims = var_532, x = inputs_17_cast_fp16)[name = tensor<string, []>("channels_mean_17_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_17_cast_fp16 = sub(x = inputs_17_cast_fp16, y = channels_mean_17_cast_fp16)[name = tensor<string, []>("zero_mean_17_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_17_cast_fp16 = mul(x = zero_mean_17_cast_fp16, y = zero_mean_17_cast_fp16)[name = tensor<string, []>("zero_mean_sq_17_cast_fp16")];
            tensor<int32, [1]> var_701 = const()[name = tensor<string, []>("op_701"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_702_cast_fp16 = reduce_mean(axes = var_701, keep_dims = var_532, x = zero_mean_sq_17_cast_fp16)[name = tensor<string, []>("op_702_cast_fp16")];
            tensor<fp16, []> var_703_to_fp16 = const()[name = tensor<string, []>("op_703_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_704_cast_fp16 = add(x = var_702_cast_fp16, y = var_703_to_fp16)[name = tensor<string, []>("op_704_cast_fp16")];
            tensor<fp16, []> denom_17_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_17_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_17_cast_fp16 = rsqrt(epsilon = denom_17_epsilon_0_to_fp16, x = var_704_cast_fp16)[name = tensor<string, []>("denom_17_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_17_cast_fp16 = mul(x = zero_mean_17_cast_fp16, y = denom_17_cast_fp16)[name = tensor<string, []>("out_17_cast_fp16")];
            tensor<fp16, [768]> input_25_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_25_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(127612352)))];
            tensor<fp16, [768]> input_25_beta_0_to_fp16 = const()[name = tensor<string, []>("input_25_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(127613952)))];
            tensor<fp16, []> input_25_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_25_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> input_25_cast_fp16 = batch_norm(beta = input_25_beta_0_to_fp16, epsilon = input_25_epsilon_0_to_fp16, gamma = input_25_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_17_cast_fp16)[name = tensor<string, []>("input_25_cast_fp16")];
            tensor<int32, [2]> var_715 = const()[name = tensor<string, []>("op_715"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_717 = const()[name = tensor<string, []>("op_717"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_27_pad_type_0 = const()[name = tensor<string, []>("input_27_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_27_pad_0 = const()[name = tensor<string, []>("input_27_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [3072, 768, 1, 1]> layers_2_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_fc1_weight_to_fp16"), val = tensor<fp16, [3072, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(127615552)))];
            tensor<fp16, [3072]> layers_2_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_fc1_bias_to_fp16"), val = tensor<fp16, [3072]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(132334208)))];
            tensor<fp16, [1, 3072, 1, 1]> input_27_cast_fp16 = conv(bias = layers_2_fc1_bias_to_fp16, dilations = var_717, groups = var_531, pad = input_27_pad_0, pad_type = input_27_pad_type_0, strides = var_715, weight = layers_2_fc1_weight_to_fp16, x = input_25_cast_fp16)[name = tensor<string, []>("input_27_cast_fp16")];
            tensor<string, []> input_29_mode_0 = const()[name = tensor<string, []>("input_29_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 3072, 1, 1]> input_29_cast_fp16 = gelu(mode = input_29_mode_0, x = input_27_cast_fp16)[name = tensor<string, []>("input_29_cast_fp16")];
            tensor<int32, [2]> var_723 = const()[name = tensor<string, []>("op_723"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_725 = const()[name = tensor<string, []>("op_725"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_7_pad_type_0 = const()[name = tensor<string, []>("hidden_states_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_7_pad_0 = const()[name = tensor<string, []>("hidden_states_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 3072, 1, 1]> layers_2_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_fc2_weight_to_fp16"), val = tensor<fp16, [768, 3072, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(132340416)))];
            tensor<fp16, [768]> layers_2_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_fc2_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(137059072)))];
            tensor<fp16, [1, 768, 1, 1]> hidden_states_7_cast_fp16 = conv(bias = layers_2_fc2_bias_to_fp16, dilations = var_725, groups = var_531, pad = hidden_states_7_pad_0, pad_type = hidden_states_7_pad_type_0, strides = var_723, weight = layers_2_fc2_weight_to_fp16, x = input_29_cast_fp16)[name = tensor<string, []>("hidden_states_7_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_19_cast_fp16 = add(x = inputs_17_cast_fp16, y = hidden_states_7_cast_fp16)[name = tensor<string, []>("inputs_19_cast_fp16")];
            tensor<int32, []> var_738 = const()[name = tensor<string, []>("op_738"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_745 = const()[name = tensor<string, []>("op_745"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_746 = const()[name = tensor<string, []>("op_746"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_758 = const()[name = tensor<string, []>("op_758"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_19_cast_fp16 = reduce_mean(axes = var_758, keep_dims = var_746, x = inputs_19_cast_fp16)[name = tensor<string, []>("channels_mean_19_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_19_cast_fp16 = sub(x = inputs_19_cast_fp16, y = channels_mean_19_cast_fp16)[name = tensor<string, []>("zero_mean_19_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_19_cast_fp16 = mul(x = zero_mean_19_cast_fp16, y = zero_mean_19_cast_fp16)[name = tensor<string, []>("zero_mean_sq_19_cast_fp16")];
            tensor<int32, [1]> var_762 = const()[name = tensor<string, []>("op_762"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_763_cast_fp16 = reduce_mean(axes = var_762, keep_dims = var_746, x = zero_mean_sq_19_cast_fp16)[name = tensor<string, []>("op_763_cast_fp16")];
            tensor<fp16, []> var_764_to_fp16 = const()[name = tensor<string, []>("op_764_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_765_cast_fp16 = add(x = var_763_cast_fp16, y = var_764_to_fp16)[name = tensor<string, []>("op_765_cast_fp16")];
            tensor<fp16, []> denom_19_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_19_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_19_cast_fp16 = rsqrt(epsilon = denom_19_epsilon_0_to_fp16, x = var_765_cast_fp16)[name = tensor<string, []>("denom_19_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_19_cast_fp16 = mul(x = zero_mean_19_cast_fp16, y = denom_19_cast_fp16)[name = tensor<string, []>("out_19_cast_fp16")];
            tensor<fp16, [768]> obj_43_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_43_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(137060672)))];
            tensor<fp16, [768]> obj_43_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_43_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(137062272)))];
            tensor<fp16, []> obj_43_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_43_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_43_cast_fp16 = batch_norm(beta = obj_43_beta_0_to_fp16, epsilon = obj_43_epsilon_0_to_fp16, gamma = obj_43_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_19_cast_fp16)[name = tensor<string, []>("obj_43_cast_fp16")];
            tensor<int32, [2]> var_780 = const()[name = tensor<string, []>("op_780"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_782 = const()[name = tensor<string, []>("op_782"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_13_pad_type_0 = const()[name = tensor<string, []>("query_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_13_pad_0 = const()[name = tensor<string, []>("query_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_3_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(137063872)))];
            tensor<fp16, [768]> layers_3_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(138243584)))];
            tensor<fp16, [1, 768, 1, 1]> query_13_cast_fp16 = conv(bias = layers_3_self_attn_q_proj_bias_to_fp16, dilations = var_782, groups = var_745, pad = query_13_pad_0, pad_type = query_13_pad_type_0, strides = var_780, weight = layers_3_self_attn_q_proj_weight_to_fp16, x = obj_43_cast_fp16)[name = tensor<string, []>("query_13_cast_fp16")];
            tensor<int32, [2]> var_786 = const()[name = tensor<string, []>("op_786"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_788 = const()[name = tensor<string, []>("op_788"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_7_pad_type_0 = const()[name = tensor<string, []>("current_key_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_7_pad_0 = const()[name = tensor<string, []>("current_key_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_3_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(138245184)))];
            tensor<fp16, [1, 768, 1, 1]> current_key_7_cast_fp16 = conv(dilations = var_788, groups = var_745, pad = current_key_7_pad_0, pad_type = current_key_7_pad_type_0, strides = var_786, weight = layers_3_self_attn_k_proj_weight_to_fp16, x = obj_43_cast_fp16)[name = tensor<string, []>("current_key_7_cast_fp16")];
            tensor<int32, [2]> var_793 = const()[name = tensor<string, []>("op_793"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_795 = const()[name = tensor<string, []>("op_795"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_7_pad_type_0 = const()[name = tensor<string, []>("current_value_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_7_pad_0 = const()[name = tensor<string, []>("current_value_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_3_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(139424896)))];
            tensor<fp16, [768]> layers_3_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(140604608)))];
            tensor<fp16, [1, 768, 1, 1]> current_value_7_cast_fp16 = conv(bias = layers_3_self_attn_v_proj_bias_to_fp16, dilations = var_795, groups = var_745, pad = current_value_7_pad_0, pad_type = current_value_7_pad_type_0, strides = var_793, weight = layers_3_self_attn_v_proj_weight_to_fp16, x = obj_43_cast_fp16)[name = tensor<string, []>("current_value_7_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_802_cast_fp16 = mul(x = current_key_7_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_802_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_804_cast_fp16 = mul(x = var_63_cast_fp16_3, y = var_161_cast_fp16)[name = tensor<string, []>("op_804_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> key_13_cast_fp16 = add(x = var_802_cast_fp16, y = var_804_cast_fp16)[name = tensor<string, []>("key_13_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_806_cast_fp16 = mul(x = current_value_7_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_806_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_808_cast_fp16 = mul(x = var_78_cast_fp16_3, y = var_161_cast_fp16)[name = tensor<string, []>("op_808_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> value_13_cast_fp16 = add(x = var_806_cast_fp16, y = var_808_cast_fp16)[name = tensor<string, []>("value_13_cast_fp16")];
            tensor<int32, [4]> var_811 = const()[name = tensor<string, []>("op_811"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_812_cast_fp16 = reshape(shape = var_811, x = query_13_cast_fp16)[name = tensor<string, []>("op_812_cast_fp16")];
            tensor<fp16, []> var_813_to_fp16 = const()[name = tensor<string, []>("op_813_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_814_cast_fp16 = mul(x = var_812_cast_fp16, y = var_813_to_fp16)[name = tensor<string, []>("op_814_cast_fp16")];
            tensor<int32, [4]> var_815 = const()[name = tensor<string, []>("op_815"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_816_cast_fp16 = reshape(shape = var_815, x = key_13_cast_fp16)[name = tensor<string, []>("op_816_cast_fp16")];
            tensor<bool, []> mh_w_19_transpose_x_0 = const()[name = tensor<string, []>("mh_w_19_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_19_transpose_y_0 = const()[name = tensor<string, []>("mh_w_19_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 224]> mh_w_19_cast_fp16 = matmul(transpose_x = mh_w_19_transpose_x_0, transpose_y = mh_w_19_transpose_y_0, x = var_814_cast_fp16, y = var_816_cast_fp16)[name = tensor<string, []>("mh_w_19_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> mh_w_21_cast_fp16 = add(x = mh_w_19_cast_fp16, y = var_179_cast_fp16)[name = tensor<string, []>("mh_w_21_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> var_824_cast_fp16 = softmax(axis = var_738, x = mh_w_21_cast_fp16)[name = tensor<string, []>("op_824_cast_fp16")];
            tensor<int32, [4]> var_825 = const()[name = tensor<string, []>("op_825"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_826_cast_fp16 = reshape(shape = var_825, x = value_13_cast_fp16)[name = tensor<string, []>("op_826_cast_fp16")];
            tensor<bool, []> attn_13_transpose_x_0 = const()[name = tensor<string, []>("attn_13_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_13_transpose_y_0 = const()[name = tensor<string, []>("attn_13_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_13_cast_fp16 = matmul(transpose_x = attn_13_transpose_x_0, transpose_y = attn_13_transpose_y_0, x = var_826_cast_fp16, y = var_824_cast_fp16)[name = tensor<string, []>("attn_13_cast_fp16")];
            tensor<int32, [4]> var_829 = const()[name = tensor<string, []>("op_829"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_31_cast_fp16 = reshape(shape = var_829, x = attn_13_cast_fp16)[name = tensor<string, []>("input_31_cast_fp16")];
            tensor<int32, [2]> var_833 = const()[name = tensor<string, []>("op_833"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_835 = const()[name = tensor<string, []>("op_835"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_49_pad_type_0 = const()[name = tensor<string, []>("obj_49_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_49_pad_0 = const()[name = tensor<string, []>("obj_49_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_3_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(140606208)))];
            tensor<fp16, [768]> layers_3_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(141785920)))];
            tensor<fp16, [1, 768, 1, 1]> obj_49_cast_fp16 = conv(bias = layers_3_self_attn_o_proj_bias_to_fp16, dilations = var_835, groups = var_745, pad = obj_49_pad_0, pad_type = obj_49_pad_type_0, strides = var_833, weight = layers_3_self_attn_o_proj_weight_to_fp16, x = input_31_cast_fp16)[name = tensor<string, []>("obj_49_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_21_cast_fp16 = add(x = inputs_19_cast_fp16, y = obj_49_cast_fp16)[name = tensor<string, []>("inputs_21_cast_fp16")];
            tensor<int32, [1]> var_845 = const()[name = tensor<string, []>("op_845"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_21_cast_fp16 = reduce_mean(axes = var_845, keep_dims = var_746, x = inputs_21_cast_fp16)[name = tensor<string, []>("channels_mean_21_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_21_cast_fp16 = sub(x = inputs_21_cast_fp16, y = channels_mean_21_cast_fp16)[name = tensor<string, []>("zero_mean_21_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_21_cast_fp16 = mul(x = zero_mean_21_cast_fp16, y = zero_mean_21_cast_fp16)[name = tensor<string, []>("zero_mean_sq_21_cast_fp16")];
            tensor<int32, [1]> var_849 = const()[name = tensor<string, []>("op_849"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_850_cast_fp16 = reduce_mean(axes = var_849, keep_dims = var_746, x = zero_mean_sq_21_cast_fp16)[name = tensor<string, []>("op_850_cast_fp16")];
            tensor<fp16, []> var_851_to_fp16 = const()[name = tensor<string, []>("op_851_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_852_cast_fp16 = add(x = var_850_cast_fp16, y = var_851_to_fp16)[name = tensor<string, []>("op_852_cast_fp16")];
            tensor<fp16, []> denom_21_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_21_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_21_cast_fp16 = rsqrt(epsilon = denom_21_epsilon_0_to_fp16, x = var_852_cast_fp16)[name = tensor<string, []>("denom_21_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_21_cast_fp16 = mul(x = zero_mean_21_cast_fp16, y = denom_21_cast_fp16)[name = tensor<string, []>("out_21_cast_fp16")];
            tensor<fp16, [768]> obj_51_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_51_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(141787520)))];
            tensor<fp16, [768]> obj_51_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_51_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(141789120)))];
            tensor<fp16, []> obj_51_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_51_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_51_cast_fp16 = batch_norm(beta = obj_51_beta_0_to_fp16, epsilon = obj_51_epsilon_0_to_fp16, gamma = obj_51_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_21_cast_fp16)[name = tensor<string, []>("obj_51_cast_fp16")];
            tensor<int32, [2]> var_867 = const()[name = tensor<string, []>("op_867"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_869 = const()[name = tensor<string, []>("op_869"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_15_pad_type_0 = const()[name = tensor<string, []>("query_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_15_pad_0 = const()[name = tensor<string, []>("query_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_3_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(141790720)))];
            tensor<fp16, [768]> layers_3_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(142970432)))];
            tensor<fp16, [1, 768, 1, 1]> query_15_cast_fp16 = conv(bias = layers_3_encoder_attn_q_proj_bias_to_fp16, dilations = var_869, groups = var_745, pad = query_15_pad_0, pad_type = query_15_pad_type_0, strides = var_867, weight = layers_3_encoder_attn_q_proj_weight_to_fp16, x = obj_51_cast_fp16)[name = tensor<string, []>("query_15_cast_fp16")];
            tensor<int32, [2]> var_873 = const()[name = tensor<string, []>("op_873"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_875 = const()[name = tensor<string, []>("op_875"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_15_pad_type_0 = const()[name = tensor<string, []>("key_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_15_pad_0 = const()[name = tensor<string, []>("key_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_3_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(142972032)))];
            tensor<fp16, [1, 768, 1, 1500]> key_15_cast_fp16 = conv(dilations = var_875, groups = var_745, pad = key_15_pad_0, pad_type = key_15_pad_type_0, strides = var_873, weight = layers_3_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_15_cast_fp16")];
            tensor<int32, [2]> var_880 = const()[name = tensor<string, []>("op_880"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_882 = const()[name = tensor<string, []>("op_882"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_15_pad_type_0 = const()[name = tensor<string, []>("value_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_15_pad_0 = const()[name = tensor<string, []>("value_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_3_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(144151744)))];
            tensor<fp16, [768]> layers_3_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(145331456)))];
            tensor<fp16, [1, 768, 1, 1500]> value_15_cast_fp16 = conv(bias = layers_3_encoder_attn_v_proj_bias_to_fp16, dilations = var_882, groups = var_745, pad = value_15_pad_0, pad_type = value_15_pad_type_0, strides = var_880, weight = layers_3_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_15_cast_fp16")];
            tensor<int32, [4]> var_886 = const()[name = tensor<string, []>("op_886"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_887_cast_fp16 = reshape(shape = var_886, x = query_15_cast_fp16)[name = tensor<string, []>("op_887_cast_fp16")];
            tensor<fp16, []> var_888_to_fp16 = const()[name = tensor<string, []>("op_888_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_889_cast_fp16 = mul(x = var_887_cast_fp16, y = var_888_to_fp16)[name = tensor<string, []>("op_889_cast_fp16")];
            tensor<int32, [4]> var_890 = const()[name = tensor<string, []>("op_890"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_891_cast_fp16 = reshape(shape = var_890, x = key_15_cast_fp16)[name = tensor<string, []>("op_891_cast_fp16")];
            tensor<bool, []> mh_w_23_transpose_x_0 = const()[name = tensor<string, []>("mh_w_23_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_23_transpose_y_0 = const()[name = tensor<string, []>("mh_w_23_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 1500]> mh_w_23_cast_fp16 = matmul(transpose_x = mh_w_23_transpose_x_0, transpose_y = mh_w_23_transpose_y_0, x = var_889_cast_fp16, y = var_891_cast_fp16)[name = tensor<string, []>("mh_w_23_cast_fp16")];
            tensor<fp16, [1, 12, 1, 1500]> obj_55_cast_fp16 = softmax(axis = var_738, x = mh_w_23_cast_fp16)[name = tensor<string, []>("obj_55_cast_fp16")];
            tensor<int32, [4]> var_895 = const()[name = tensor<string, []>("op_895"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_896_cast_fp16 = reshape(shape = var_895, x = value_15_cast_fp16)[name = tensor<string, []>("op_896_cast_fp16")];
            tensor<bool, []> attn_15_transpose_x_0 = const()[name = tensor<string, []>("attn_15_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_15_transpose_y_0 = const()[name = tensor<string, []>("attn_15_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_15_cast_fp16 = matmul(transpose_x = attn_15_transpose_x_0, transpose_y = attn_15_transpose_y_0, x = var_896_cast_fp16, y = obj_55_cast_fp16)[name = tensor<string, []>("attn_15_cast_fp16")];
            tensor<int32, [4]> var_899 = const()[name = tensor<string, []>("op_899"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_33_cast_fp16 = reshape(shape = var_899, x = attn_15_cast_fp16)[name = tensor<string, []>("input_33_cast_fp16")];
            tensor<int32, [2]> var_903 = const()[name = tensor<string, []>("op_903"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_905 = const()[name = tensor<string, []>("op_905"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_53_pad_type_0 = const()[name = tensor<string, []>("obj_53_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_53_pad_0 = const()[name = tensor<string, []>("obj_53_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_3_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(145333056)))];
            tensor<fp16, [768]> layers_3_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(146512768)))];
            tensor<fp16, [1, 768, 1, 1]> obj_53_cast_fp16 = conv(bias = layers_3_encoder_attn_o_proj_bias_to_fp16, dilations = var_905, groups = var_745, pad = obj_53_pad_0, pad_type = obj_53_pad_type_0, strides = var_903, weight = layers_3_encoder_attn_o_proj_weight_to_fp16, x = input_33_cast_fp16)[name = tensor<string, []>("obj_53_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_23_cast_fp16 = add(x = inputs_21_cast_fp16, y = obj_53_cast_fp16)[name = tensor<string, []>("inputs_23_cast_fp16")];
            tensor<int32, [1]> var_911 = const()[name = tensor<string, []>("op_911"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_23_cast_fp16 = reduce_mean(axes = var_911, keep_dims = var_746, x = inputs_23_cast_fp16)[name = tensor<string, []>("channels_mean_23_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_23_cast_fp16 = sub(x = inputs_23_cast_fp16, y = channels_mean_23_cast_fp16)[name = tensor<string, []>("zero_mean_23_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_23_cast_fp16 = mul(x = zero_mean_23_cast_fp16, y = zero_mean_23_cast_fp16)[name = tensor<string, []>("zero_mean_sq_23_cast_fp16")];
            tensor<int32, [1]> var_915 = const()[name = tensor<string, []>("op_915"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_916_cast_fp16 = reduce_mean(axes = var_915, keep_dims = var_746, x = zero_mean_sq_23_cast_fp16)[name = tensor<string, []>("op_916_cast_fp16")];
            tensor<fp16, []> var_917_to_fp16 = const()[name = tensor<string, []>("op_917_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_918_cast_fp16 = add(x = var_916_cast_fp16, y = var_917_to_fp16)[name = tensor<string, []>("op_918_cast_fp16")];
            tensor<fp16, []> denom_23_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_23_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_23_cast_fp16 = rsqrt(epsilon = denom_23_epsilon_0_to_fp16, x = var_918_cast_fp16)[name = tensor<string, []>("denom_23_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_23_cast_fp16 = mul(x = zero_mean_23_cast_fp16, y = denom_23_cast_fp16)[name = tensor<string, []>("out_23_cast_fp16")];
            tensor<fp16, [768]> input_35_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_35_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(146514368)))];
            tensor<fp16, [768]> input_35_beta_0_to_fp16 = const()[name = tensor<string, []>("input_35_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(146515968)))];
            tensor<fp16, []> input_35_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_35_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> input_35_cast_fp16 = batch_norm(beta = input_35_beta_0_to_fp16, epsilon = input_35_epsilon_0_to_fp16, gamma = input_35_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_23_cast_fp16)[name = tensor<string, []>("input_35_cast_fp16")];
            tensor<int32, [2]> var_929 = const()[name = tensor<string, []>("op_929"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_931 = const()[name = tensor<string, []>("op_931"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_37_pad_type_0 = const()[name = tensor<string, []>("input_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_37_pad_0 = const()[name = tensor<string, []>("input_37_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [3072, 768, 1, 1]> layers_3_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_fc1_weight_to_fp16"), val = tensor<fp16, [3072, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(146517568)))];
            tensor<fp16, [3072]> layers_3_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_fc1_bias_to_fp16"), val = tensor<fp16, [3072]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(151236224)))];
            tensor<fp16, [1, 3072, 1, 1]> input_37_cast_fp16 = conv(bias = layers_3_fc1_bias_to_fp16, dilations = var_931, groups = var_745, pad = input_37_pad_0, pad_type = input_37_pad_type_0, strides = var_929, weight = layers_3_fc1_weight_to_fp16, x = input_35_cast_fp16)[name = tensor<string, []>("input_37_cast_fp16")];
            tensor<string, []> input_39_mode_0 = const()[name = tensor<string, []>("input_39_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 3072, 1, 1]> input_39_cast_fp16 = gelu(mode = input_39_mode_0, x = input_37_cast_fp16)[name = tensor<string, []>("input_39_cast_fp16")];
            tensor<int32, [2]> var_937 = const()[name = tensor<string, []>("op_937"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_939 = const()[name = tensor<string, []>("op_939"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_9_pad_type_0 = const()[name = tensor<string, []>("hidden_states_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_9_pad_0 = const()[name = tensor<string, []>("hidden_states_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 3072, 1, 1]> layers_3_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_fc2_weight_to_fp16"), val = tensor<fp16, [768, 3072, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(151242432)))];
            tensor<fp16, [768]> layers_3_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_fc2_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(155961088)))];
            tensor<fp16, [1, 768, 1, 1]> hidden_states_9_cast_fp16 = conv(bias = layers_3_fc2_bias_to_fp16, dilations = var_939, groups = var_745, pad = hidden_states_9_pad_0, pad_type = hidden_states_9_pad_type_0, strides = var_937, weight = layers_3_fc2_weight_to_fp16, x = input_39_cast_fp16)[name = tensor<string, []>("hidden_states_9_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_25_cast_fp16 = add(x = inputs_23_cast_fp16, y = hidden_states_9_cast_fp16)[name = tensor<string, []>("inputs_25_cast_fp16")];
            tensor<int32, []> var_952 = const()[name = tensor<string, []>("op_952"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_959 = const()[name = tensor<string, []>("op_959"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_960 = const()[name = tensor<string, []>("op_960"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_972 = const()[name = tensor<string, []>("op_972"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_25_cast_fp16 = reduce_mean(axes = var_972, keep_dims = var_960, x = inputs_25_cast_fp16)[name = tensor<string, []>("channels_mean_25_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_25_cast_fp16 = sub(x = inputs_25_cast_fp16, y = channels_mean_25_cast_fp16)[name = tensor<string, []>("zero_mean_25_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_25_cast_fp16 = mul(x = zero_mean_25_cast_fp16, y = zero_mean_25_cast_fp16)[name = tensor<string, []>("zero_mean_sq_25_cast_fp16")];
            tensor<int32, [1]> var_976 = const()[name = tensor<string, []>("op_976"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_977_cast_fp16 = reduce_mean(axes = var_976, keep_dims = var_960, x = zero_mean_sq_25_cast_fp16)[name = tensor<string, []>("op_977_cast_fp16")];
            tensor<fp16, []> var_978_to_fp16 = const()[name = tensor<string, []>("op_978_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_979_cast_fp16 = add(x = var_977_cast_fp16, y = var_978_to_fp16)[name = tensor<string, []>("op_979_cast_fp16")];
            tensor<fp16, []> denom_25_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_25_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_25_cast_fp16 = rsqrt(epsilon = denom_25_epsilon_0_to_fp16, x = var_979_cast_fp16)[name = tensor<string, []>("denom_25_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_25_cast_fp16 = mul(x = zero_mean_25_cast_fp16, y = denom_25_cast_fp16)[name = tensor<string, []>("out_25_cast_fp16")];
            tensor<fp16, [768]> obj_57_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_57_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(155962688)))];
            tensor<fp16, [768]> obj_57_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_57_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(155964288)))];
            tensor<fp16, []> obj_57_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_57_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_57_cast_fp16 = batch_norm(beta = obj_57_beta_0_to_fp16, epsilon = obj_57_epsilon_0_to_fp16, gamma = obj_57_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_25_cast_fp16)[name = tensor<string, []>("obj_57_cast_fp16")];
            tensor<int32, [2]> var_994 = const()[name = tensor<string, []>("op_994"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_996 = const()[name = tensor<string, []>("op_996"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_17_pad_type_0 = const()[name = tensor<string, []>("query_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_17_pad_0 = const()[name = tensor<string, []>("query_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_4_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(155965888)))];
            tensor<fp16, [768]> layers_4_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_4_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(157145600)))];
            tensor<fp16, [1, 768, 1, 1]> query_17_cast_fp16 = conv(bias = layers_4_self_attn_q_proj_bias_to_fp16, dilations = var_996, groups = var_959, pad = query_17_pad_0, pad_type = query_17_pad_type_0, strides = var_994, weight = layers_4_self_attn_q_proj_weight_to_fp16, x = obj_57_cast_fp16)[name = tensor<string, []>("query_17_cast_fp16")];
            tensor<int32, [2]> var_1000 = const()[name = tensor<string, []>("op_1000"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1002 = const()[name = tensor<string, []>("op_1002"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_9_pad_type_0 = const()[name = tensor<string, []>("current_key_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_9_pad_0 = const()[name = tensor<string, []>("current_key_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_4_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(157147200)))];
            tensor<fp16, [1, 768, 1, 1]> current_key_9_cast_fp16 = conv(dilations = var_1002, groups = var_959, pad = current_key_9_pad_0, pad_type = current_key_9_pad_type_0, strides = var_1000, weight = layers_4_self_attn_k_proj_weight_to_fp16, x = obj_57_cast_fp16)[name = tensor<string, []>("current_key_9_cast_fp16")];
            tensor<int32, [2]> var_1007 = const()[name = tensor<string, []>("op_1007"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1009 = const()[name = tensor<string, []>("op_1009"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_9_pad_type_0 = const()[name = tensor<string, []>("current_value_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_9_pad_0 = const()[name = tensor<string, []>("current_value_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_4_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(158326912)))];
            tensor<fp16, [768]> layers_4_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_4_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(159506624)))];
            tensor<fp16, [1, 768, 1, 1]> current_value_9_cast_fp16 = conv(bias = layers_4_self_attn_v_proj_bias_to_fp16, dilations = var_1009, groups = var_959, pad = current_value_9_pad_0, pad_type = current_value_9_pad_type_0, strides = var_1007, weight = layers_4_self_attn_v_proj_weight_to_fp16, x = obj_57_cast_fp16)[name = tensor<string, []>("current_value_9_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1016_cast_fp16 = mul(x = current_key_9_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_1016_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1018_cast_fp16 = mul(x = var_63_cast_fp16_4, y = var_161_cast_fp16)[name = tensor<string, []>("op_1018_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> key_17_cast_fp16 = add(x = var_1016_cast_fp16, y = var_1018_cast_fp16)[name = tensor<string, []>("key_17_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1020_cast_fp16 = mul(x = current_value_9_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_1020_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1022_cast_fp16 = mul(x = var_78_cast_fp16_4, y = var_161_cast_fp16)[name = tensor<string, []>("op_1022_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> value_17_cast_fp16 = add(x = var_1020_cast_fp16, y = var_1022_cast_fp16)[name = tensor<string, []>("value_17_cast_fp16")];
            tensor<int32, [4]> var_1025 = const()[name = tensor<string, []>("op_1025"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_1026_cast_fp16 = reshape(shape = var_1025, x = query_17_cast_fp16)[name = tensor<string, []>("op_1026_cast_fp16")];
            tensor<fp16, []> var_1027_to_fp16 = const()[name = tensor<string, []>("op_1027_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_1028_cast_fp16 = mul(x = var_1026_cast_fp16, y = var_1027_to_fp16)[name = tensor<string, []>("op_1028_cast_fp16")];
            tensor<int32, [4]> var_1029 = const()[name = tensor<string, []>("op_1029"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_1030_cast_fp16 = reshape(shape = var_1029, x = key_17_cast_fp16)[name = tensor<string, []>("op_1030_cast_fp16")];
            tensor<bool, []> mh_w_25_transpose_x_0 = const()[name = tensor<string, []>("mh_w_25_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_25_transpose_y_0 = const()[name = tensor<string, []>("mh_w_25_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 224]> mh_w_25_cast_fp16 = matmul(transpose_x = mh_w_25_transpose_x_0, transpose_y = mh_w_25_transpose_y_0, x = var_1028_cast_fp16, y = var_1030_cast_fp16)[name = tensor<string, []>("mh_w_25_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> mh_w_27_cast_fp16 = add(x = mh_w_25_cast_fp16, y = var_179_cast_fp16)[name = tensor<string, []>("mh_w_27_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> var_1038_cast_fp16 = softmax(axis = var_952, x = mh_w_27_cast_fp16)[name = tensor<string, []>("op_1038_cast_fp16")];
            tensor<int32, [4]> var_1039 = const()[name = tensor<string, []>("op_1039"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_1040_cast_fp16 = reshape(shape = var_1039, x = value_17_cast_fp16)[name = tensor<string, []>("op_1040_cast_fp16")];
            tensor<bool, []> attn_17_transpose_x_0 = const()[name = tensor<string, []>("attn_17_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_17_transpose_y_0 = const()[name = tensor<string, []>("attn_17_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_17_cast_fp16 = matmul(transpose_x = attn_17_transpose_x_0, transpose_y = attn_17_transpose_y_0, x = var_1040_cast_fp16, y = var_1038_cast_fp16)[name = tensor<string, []>("attn_17_cast_fp16")];
            tensor<int32, [4]> var_1043 = const()[name = tensor<string, []>("op_1043"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_41_cast_fp16 = reshape(shape = var_1043, x = attn_17_cast_fp16)[name = tensor<string, []>("input_41_cast_fp16")];
            tensor<int32, [2]> var_1047 = const()[name = tensor<string, []>("op_1047"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1049 = const()[name = tensor<string, []>("op_1049"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_63_pad_type_0 = const()[name = tensor<string, []>("obj_63_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_63_pad_0 = const()[name = tensor<string, []>("obj_63_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_4_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(159508224)))];
            tensor<fp16, [768]> layers_4_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_4_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(160687936)))];
            tensor<fp16, [1, 768, 1, 1]> obj_63_cast_fp16 = conv(bias = layers_4_self_attn_o_proj_bias_to_fp16, dilations = var_1049, groups = var_959, pad = obj_63_pad_0, pad_type = obj_63_pad_type_0, strides = var_1047, weight = layers_4_self_attn_o_proj_weight_to_fp16, x = input_41_cast_fp16)[name = tensor<string, []>("obj_63_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_27_cast_fp16 = add(x = inputs_25_cast_fp16, y = obj_63_cast_fp16)[name = tensor<string, []>("inputs_27_cast_fp16")];
            tensor<int32, [1]> var_1059 = const()[name = tensor<string, []>("op_1059"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_27_cast_fp16 = reduce_mean(axes = var_1059, keep_dims = var_960, x = inputs_27_cast_fp16)[name = tensor<string, []>("channels_mean_27_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_27_cast_fp16 = sub(x = inputs_27_cast_fp16, y = channels_mean_27_cast_fp16)[name = tensor<string, []>("zero_mean_27_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_27_cast_fp16 = mul(x = zero_mean_27_cast_fp16, y = zero_mean_27_cast_fp16)[name = tensor<string, []>("zero_mean_sq_27_cast_fp16")];
            tensor<int32, [1]> var_1063 = const()[name = tensor<string, []>("op_1063"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1064_cast_fp16 = reduce_mean(axes = var_1063, keep_dims = var_960, x = zero_mean_sq_27_cast_fp16)[name = tensor<string, []>("op_1064_cast_fp16")];
            tensor<fp16, []> var_1065_to_fp16 = const()[name = tensor<string, []>("op_1065_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1066_cast_fp16 = add(x = var_1064_cast_fp16, y = var_1065_to_fp16)[name = tensor<string, []>("op_1066_cast_fp16")];
            tensor<fp16, []> denom_27_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_27_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_27_cast_fp16 = rsqrt(epsilon = denom_27_epsilon_0_to_fp16, x = var_1066_cast_fp16)[name = tensor<string, []>("denom_27_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_27_cast_fp16 = mul(x = zero_mean_27_cast_fp16, y = denom_27_cast_fp16)[name = tensor<string, []>("out_27_cast_fp16")];
            tensor<fp16, [768]> obj_65_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_65_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(160689536)))];
            tensor<fp16, [768]> obj_65_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_65_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(160691136)))];
            tensor<fp16, []> obj_65_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_65_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_65_cast_fp16 = batch_norm(beta = obj_65_beta_0_to_fp16, epsilon = obj_65_epsilon_0_to_fp16, gamma = obj_65_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_27_cast_fp16)[name = tensor<string, []>("obj_65_cast_fp16")];
            tensor<int32, [2]> var_1081 = const()[name = tensor<string, []>("op_1081"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1083 = const()[name = tensor<string, []>("op_1083"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_19_pad_type_0 = const()[name = tensor<string, []>("query_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_19_pad_0 = const()[name = tensor<string, []>("query_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_4_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(160692736)))];
            tensor<fp16, [768]> layers_4_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_4_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(161872448)))];
            tensor<fp16, [1, 768, 1, 1]> query_19_cast_fp16 = conv(bias = layers_4_encoder_attn_q_proj_bias_to_fp16, dilations = var_1083, groups = var_959, pad = query_19_pad_0, pad_type = query_19_pad_type_0, strides = var_1081, weight = layers_4_encoder_attn_q_proj_weight_to_fp16, x = obj_65_cast_fp16)[name = tensor<string, []>("query_19_cast_fp16")];
            tensor<int32, [2]> var_1087 = const()[name = tensor<string, []>("op_1087"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1089 = const()[name = tensor<string, []>("op_1089"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_19_pad_type_0 = const()[name = tensor<string, []>("key_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_19_pad_0 = const()[name = tensor<string, []>("key_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_4_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(161874048)))];
            tensor<fp16, [1, 768, 1, 1500]> key_19_cast_fp16 = conv(dilations = var_1089, groups = var_959, pad = key_19_pad_0, pad_type = key_19_pad_type_0, strides = var_1087, weight = layers_4_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_19_cast_fp16")];
            tensor<int32, [2]> var_1094 = const()[name = tensor<string, []>("op_1094"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1096 = const()[name = tensor<string, []>("op_1096"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_19_pad_type_0 = const()[name = tensor<string, []>("value_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_19_pad_0 = const()[name = tensor<string, []>("value_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_4_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(163053760)))];
            tensor<fp16, [768]> layers_4_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_4_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(164233472)))];
            tensor<fp16, [1, 768, 1, 1500]> value_19_cast_fp16 = conv(bias = layers_4_encoder_attn_v_proj_bias_to_fp16, dilations = var_1096, groups = var_959, pad = value_19_pad_0, pad_type = value_19_pad_type_0, strides = var_1094, weight = layers_4_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_19_cast_fp16")];
            tensor<int32, [4]> var_1100 = const()[name = tensor<string, []>("op_1100"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_1101_cast_fp16 = reshape(shape = var_1100, x = query_19_cast_fp16)[name = tensor<string, []>("op_1101_cast_fp16")];
            tensor<fp16, []> var_1102_to_fp16 = const()[name = tensor<string, []>("op_1102_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_1103_cast_fp16 = mul(x = var_1101_cast_fp16, y = var_1102_to_fp16)[name = tensor<string, []>("op_1103_cast_fp16")];
            tensor<int32, [4]> var_1104 = const()[name = tensor<string, []>("op_1104"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_1105_cast_fp16 = reshape(shape = var_1104, x = key_19_cast_fp16)[name = tensor<string, []>("op_1105_cast_fp16")];
            tensor<bool, []> mh_w_29_transpose_x_0 = const()[name = tensor<string, []>("mh_w_29_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_29_transpose_y_0 = const()[name = tensor<string, []>("mh_w_29_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 1500]> mh_w_29_cast_fp16 = matmul(transpose_x = mh_w_29_transpose_x_0, transpose_y = mh_w_29_transpose_y_0, x = var_1103_cast_fp16, y = var_1105_cast_fp16)[name = tensor<string, []>("mh_w_29_cast_fp16")];
            tensor<fp16, [1, 12, 1, 1500]> obj_69_cast_fp16 = softmax(axis = var_952, x = mh_w_29_cast_fp16)[name = tensor<string, []>("obj_69_cast_fp16")];
            tensor<int32, [4]> var_1109 = const()[name = tensor<string, []>("op_1109"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_1110_cast_fp16 = reshape(shape = var_1109, x = value_19_cast_fp16)[name = tensor<string, []>("op_1110_cast_fp16")];
            tensor<bool, []> attn_19_transpose_x_0 = const()[name = tensor<string, []>("attn_19_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_19_transpose_y_0 = const()[name = tensor<string, []>("attn_19_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_19_cast_fp16 = matmul(transpose_x = attn_19_transpose_x_0, transpose_y = attn_19_transpose_y_0, x = var_1110_cast_fp16, y = obj_69_cast_fp16)[name = tensor<string, []>("attn_19_cast_fp16")];
            tensor<int32, [4]> var_1113 = const()[name = tensor<string, []>("op_1113"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_43_cast_fp16 = reshape(shape = var_1113, x = attn_19_cast_fp16)[name = tensor<string, []>("input_43_cast_fp16")];
            tensor<int32, [2]> var_1117 = const()[name = tensor<string, []>("op_1117"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1119 = const()[name = tensor<string, []>("op_1119"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_67_pad_type_0 = const()[name = tensor<string, []>("obj_67_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_67_pad_0 = const()[name = tensor<string, []>("obj_67_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_4_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(164235072)))];
            tensor<fp16, [768]> layers_4_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_4_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(165414784)))];
            tensor<fp16, [1, 768, 1, 1]> obj_67_cast_fp16 = conv(bias = layers_4_encoder_attn_o_proj_bias_to_fp16, dilations = var_1119, groups = var_959, pad = obj_67_pad_0, pad_type = obj_67_pad_type_0, strides = var_1117, weight = layers_4_encoder_attn_o_proj_weight_to_fp16, x = input_43_cast_fp16)[name = tensor<string, []>("obj_67_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_29_cast_fp16 = add(x = inputs_27_cast_fp16, y = obj_67_cast_fp16)[name = tensor<string, []>("inputs_29_cast_fp16")];
            tensor<int32, [1]> var_1125 = const()[name = tensor<string, []>("op_1125"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_29_cast_fp16 = reduce_mean(axes = var_1125, keep_dims = var_960, x = inputs_29_cast_fp16)[name = tensor<string, []>("channels_mean_29_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_29_cast_fp16 = sub(x = inputs_29_cast_fp16, y = channels_mean_29_cast_fp16)[name = tensor<string, []>("zero_mean_29_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_29_cast_fp16 = mul(x = zero_mean_29_cast_fp16, y = zero_mean_29_cast_fp16)[name = tensor<string, []>("zero_mean_sq_29_cast_fp16")];
            tensor<int32, [1]> var_1129 = const()[name = tensor<string, []>("op_1129"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1130_cast_fp16 = reduce_mean(axes = var_1129, keep_dims = var_960, x = zero_mean_sq_29_cast_fp16)[name = tensor<string, []>("op_1130_cast_fp16")];
            tensor<fp16, []> var_1131_to_fp16 = const()[name = tensor<string, []>("op_1131_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1132_cast_fp16 = add(x = var_1130_cast_fp16, y = var_1131_to_fp16)[name = tensor<string, []>("op_1132_cast_fp16")];
            tensor<fp16, []> denom_29_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_29_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_29_cast_fp16 = rsqrt(epsilon = denom_29_epsilon_0_to_fp16, x = var_1132_cast_fp16)[name = tensor<string, []>("denom_29_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_29_cast_fp16 = mul(x = zero_mean_29_cast_fp16, y = denom_29_cast_fp16)[name = tensor<string, []>("out_29_cast_fp16")];
            tensor<fp16, [768]> input_45_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_45_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(165416384)))];
            tensor<fp16, [768]> input_45_beta_0_to_fp16 = const()[name = tensor<string, []>("input_45_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(165417984)))];
            tensor<fp16, []> input_45_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_45_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> input_45_cast_fp16 = batch_norm(beta = input_45_beta_0_to_fp16, epsilon = input_45_epsilon_0_to_fp16, gamma = input_45_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_29_cast_fp16)[name = tensor<string, []>("input_45_cast_fp16")];
            tensor<int32, [2]> var_1143 = const()[name = tensor<string, []>("op_1143"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1145 = const()[name = tensor<string, []>("op_1145"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_47_pad_type_0 = const()[name = tensor<string, []>("input_47_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_47_pad_0 = const()[name = tensor<string, []>("input_47_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [3072, 768, 1, 1]> layers_4_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_fc1_weight_to_fp16"), val = tensor<fp16, [3072, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(165419584)))];
            tensor<fp16, [3072]> layers_4_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_4_fc1_bias_to_fp16"), val = tensor<fp16, [3072]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(170138240)))];
            tensor<fp16, [1, 3072, 1, 1]> input_47_cast_fp16 = conv(bias = layers_4_fc1_bias_to_fp16, dilations = var_1145, groups = var_959, pad = input_47_pad_0, pad_type = input_47_pad_type_0, strides = var_1143, weight = layers_4_fc1_weight_to_fp16, x = input_45_cast_fp16)[name = tensor<string, []>("input_47_cast_fp16")];
            tensor<string, []> input_49_mode_0 = const()[name = tensor<string, []>("input_49_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 3072, 1, 1]> input_49_cast_fp16 = gelu(mode = input_49_mode_0, x = input_47_cast_fp16)[name = tensor<string, []>("input_49_cast_fp16")];
            tensor<int32, [2]> var_1151 = const()[name = tensor<string, []>("op_1151"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1153 = const()[name = tensor<string, []>("op_1153"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_11_pad_type_0 = const()[name = tensor<string, []>("hidden_states_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_11_pad_0 = const()[name = tensor<string, []>("hidden_states_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 3072, 1, 1]> layers_4_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_4_fc2_weight_to_fp16"), val = tensor<fp16, [768, 3072, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(170144448)))];
            tensor<fp16, [768]> layers_4_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_4_fc2_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(174863104)))];
            tensor<fp16, [1, 768, 1, 1]> hidden_states_11_cast_fp16 = conv(bias = layers_4_fc2_bias_to_fp16, dilations = var_1153, groups = var_959, pad = hidden_states_11_pad_0, pad_type = hidden_states_11_pad_type_0, strides = var_1151, weight = layers_4_fc2_weight_to_fp16, x = input_49_cast_fp16)[name = tensor<string, []>("hidden_states_11_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_31_cast_fp16 = add(x = inputs_29_cast_fp16, y = hidden_states_11_cast_fp16)[name = tensor<string, []>("inputs_31_cast_fp16")];
            tensor<int32, []> var_1166 = const()[name = tensor<string, []>("op_1166"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_1173 = const()[name = tensor<string, []>("op_1173"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_1174 = const()[name = tensor<string, []>("op_1174"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_1186 = const()[name = tensor<string, []>("op_1186"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_31_cast_fp16 = reduce_mean(axes = var_1186, keep_dims = var_1174, x = inputs_31_cast_fp16)[name = tensor<string, []>("channels_mean_31_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_31_cast_fp16 = sub(x = inputs_31_cast_fp16, y = channels_mean_31_cast_fp16)[name = tensor<string, []>("zero_mean_31_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_31_cast_fp16 = mul(x = zero_mean_31_cast_fp16, y = zero_mean_31_cast_fp16)[name = tensor<string, []>("zero_mean_sq_31_cast_fp16")];
            tensor<int32, [1]> var_1190 = const()[name = tensor<string, []>("op_1190"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1191_cast_fp16 = reduce_mean(axes = var_1190, keep_dims = var_1174, x = zero_mean_sq_31_cast_fp16)[name = tensor<string, []>("op_1191_cast_fp16")];
            tensor<fp16, []> var_1192_to_fp16 = const()[name = tensor<string, []>("op_1192_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1193_cast_fp16 = add(x = var_1191_cast_fp16, y = var_1192_to_fp16)[name = tensor<string, []>("op_1193_cast_fp16")];
            tensor<fp16, []> denom_31_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_31_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_31_cast_fp16 = rsqrt(epsilon = denom_31_epsilon_0_to_fp16, x = var_1193_cast_fp16)[name = tensor<string, []>("denom_31_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_31_cast_fp16 = mul(x = zero_mean_31_cast_fp16, y = denom_31_cast_fp16)[name = tensor<string, []>("out_31_cast_fp16")];
            tensor<fp16, [768]> obj_71_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_71_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(174864704)))];
            tensor<fp16, [768]> obj_71_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_71_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(174866304)))];
            tensor<fp16, []> obj_71_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_71_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_71_cast_fp16 = batch_norm(beta = obj_71_beta_0_to_fp16, epsilon = obj_71_epsilon_0_to_fp16, gamma = obj_71_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_31_cast_fp16)[name = tensor<string, []>("obj_71_cast_fp16")];
            tensor<int32, [2]> var_1208 = const()[name = tensor<string, []>("op_1208"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1210 = const()[name = tensor<string, []>("op_1210"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_21_pad_type_0 = const()[name = tensor<string, []>("query_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_21_pad_0 = const()[name = tensor<string, []>("query_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_5_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(174867904)))];
            tensor<fp16, [768]> layers_5_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_5_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(176047616)))];
            tensor<fp16, [1, 768, 1, 1]> query_21_cast_fp16 = conv(bias = layers_5_self_attn_q_proj_bias_to_fp16, dilations = var_1210, groups = var_1173, pad = query_21_pad_0, pad_type = query_21_pad_type_0, strides = var_1208, weight = layers_5_self_attn_q_proj_weight_to_fp16, x = obj_71_cast_fp16)[name = tensor<string, []>("query_21_cast_fp16")];
            tensor<int32, [2]> var_1214 = const()[name = tensor<string, []>("op_1214"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1216 = const()[name = tensor<string, []>("op_1216"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_11_pad_type_0 = const()[name = tensor<string, []>("current_key_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_11_pad_0 = const()[name = tensor<string, []>("current_key_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_5_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(176049216)))];
            tensor<fp16, [1, 768, 1, 1]> current_key_11_cast_fp16 = conv(dilations = var_1216, groups = var_1173, pad = current_key_11_pad_0, pad_type = current_key_11_pad_type_0, strides = var_1214, weight = layers_5_self_attn_k_proj_weight_to_fp16, x = obj_71_cast_fp16)[name = tensor<string, []>("current_key_11_cast_fp16")];
            tensor<int32, [2]> var_1221 = const()[name = tensor<string, []>("op_1221"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1223 = const()[name = tensor<string, []>("op_1223"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_11_pad_type_0 = const()[name = tensor<string, []>("current_value_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_11_pad_0 = const()[name = tensor<string, []>("current_value_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_5_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(177228928)))];
            tensor<fp16, [768]> layers_5_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_5_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(178408640)))];
            tensor<fp16, [1, 768, 1, 1]> current_value_11_cast_fp16 = conv(bias = layers_5_self_attn_v_proj_bias_to_fp16, dilations = var_1223, groups = var_1173, pad = current_value_11_pad_0, pad_type = current_value_11_pad_type_0, strides = var_1221, weight = layers_5_self_attn_v_proj_weight_to_fp16, x = obj_71_cast_fp16)[name = tensor<string, []>("current_value_11_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1230_cast_fp16 = mul(x = current_key_11_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_1230_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1232_cast_fp16 = mul(x = var_63_cast_fp16_5, y = var_161_cast_fp16)[name = tensor<string, []>("op_1232_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> key_21_cast_fp16 = add(x = var_1230_cast_fp16, y = var_1232_cast_fp16)[name = tensor<string, []>("key_21_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1234_cast_fp16 = mul(x = current_value_11_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_1234_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1236_cast_fp16 = mul(x = var_78_cast_fp16_5, y = var_161_cast_fp16)[name = tensor<string, []>("op_1236_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> value_21_cast_fp16 = add(x = var_1234_cast_fp16, y = var_1236_cast_fp16)[name = tensor<string, []>("value_21_cast_fp16")];
            tensor<int32, [4]> var_1239 = const()[name = tensor<string, []>("op_1239"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_1240_cast_fp16 = reshape(shape = var_1239, x = query_21_cast_fp16)[name = tensor<string, []>("op_1240_cast_fp16")];
            tensor<fp16, []> var_1241_to_fp16 = const()[name = tensor<string, []>("op_1241_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_1242_cast_fp16 = mul(x = var_1240_cast_fp16, y = var_1241_to_fp16)[name = tensor<string, []>("op_1242_cast_fp16")];
            tensor<int32, [4]> var_1243 = const()[name = tensor<string, []>("op_1243"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_1244_cast_fp16 = reshape(shape = var_1243, x = key_21_cast_fp16)[name = tensor<string, []>("op_1244_cast_fp16")];
            tensor<bool, []> mh_w_31_transpose_x_0 = const()[name = tensor<string, []>("mh_w_31_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_31_transpose_y_0 = const()[name = tensor<string, []>("mh_w_31_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 224]> mh_w_31_cast_fp16 = matmul(transpose_x = mh_w_31_transpose_x_0, transpose_y = mh_w_31_transpose_y_0, x = var_1242_cast_fp16, y = var_1244_cast_fp16)[name = tensor<string, []>("mh_w_31_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> mh_w_33_cast_fp16 = add(x = mh_w_31_cast_fp16, y = var_179_cast_fp16)[name = tensor<string, []>("mh_w_33_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> var_1252_cast_fp16 = softmax(axis = var_1166, x = mh_w_33_cast_fp16)[name = tensor<string, []>("op_1252_cast_fp16")];
            tensor<int32, [4]> var_1253 = const()[name = tensor<string, []>("op_1253"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_1254_cast_fp16 = reshape(shape = var_1253, x = value_21_cast_fp16)[name = tensor<string, []>("op_1254_cast_fp16")];
            tensor<bool, []> attn_21_transpose_x_0 = const()[name = tensor<string, []>("attn_21_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_21_transpose_y_0 = const()[name = tensor<string, []>("attn_21_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_21_cast_fp16 = matmul(transpose_x = attn_21_transpose_x_0, transpose_y = attn_21_transpose_y_0, x = var_1254_cast_fp16, y = var_1252_cast_fp16)[name = tensor<string, []>("attn_21_cast_fp16")];
            tensor<int32, [4]> var_1257 = const()[name = tensor<string, []>("op_1257"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_51_cast_fp16 = reshape(shape = var_1257, x = attn_21_cast_fp16)[name = tensor<string, []>("input_51_cast_fp16")];
            tensor<int32, [2]> var_1261 = const()[name = tensor<string, []>("op_1261"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1263 = const()[name = tensor<string, []>("op_1263"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_77_pad_type_0 = const()[name = tensor<string, []>("obj_77_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_77_pad_0 = const()[name = tensor<string, []>("obj_77_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_5_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(178410240)))];
            tensor<fp16, [768]> layers_5_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_5_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(179589952)))];
            tensor<fp16, [1, 768, 1, 1]> obj_77_cast_fp16 = conv(bias = layers_5_self_attn_o_proj_bias_to_fp16, dilations = var_1263, groups = var_1173, pad = obj_77_pad_0, pad_type = obj_77_pad_type_0, strides = var_1261, weight = layers_5_self_attn_o_proj_weight_to_fp16, x = input_51_cast_fp16)[name = tensor<string, []>("obj_77_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_33_cast_fp16 = add(x = inputs_31_cast_fp16, y = obj_77_cast_fp16)[name = tensor<string, []>("inputs_33_cast_fp16")];
            tensor<int32, [1]> var_1273 = const()[name = tensor<string, []>("op_1273"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_33_cast_fp16 = reduce_mean(axes = var_1273, keep_dims = var_1174, x = inputs_33_cast_fp16)[name = tensor<string, []>("channels_mean_33_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_33_cast_fp16 = sub(x = inputs_33_cast_fp16, y = channels_mean_33_cast_fp16)[name = tensor<string, []>("zero_mean_33_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_33_cast_fp16 = mul(x = zero_mean_33_cast_fp16, y = zero_mean_33_cast_fp16)[name = tensor<string, []>("zero_mean_sq_33_cast_fp16")];
            tensor<int32, [1]> var_1277 = const()[name = tensor<string, []>("op_1277"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1278_cast_fp16 = reduce_mean(axes = var_1277, keep_dims = var_1174, x = zero_mean_sq_33_cast_fp16)[name = tensor<string, []>("op_1278_cast_fp16")];
            tensor<fp16, []> var_1279_to_fp16 = const()[name = tensor<string, []>("op_1279_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1280_cast_fp16 = add(x = var_1278_cast_fp16, y = var_1279_to_fp16)[name = tensor<string, []>("op_1280_cast_fp16")];
            tensor<fp16, []> denom_33_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_33_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_33_cast_fp16 = rsqrt(epsilon = denom_33_epsilon_0_to_fp16, x = var_1280_cast_fp16)[name = tensor<string, []>("denom_33_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_33_cast_fp16 = mul(x = zero_mean_33_cast_fp16, y = denom_33_cast_fp16)[name = tensor<string, []>("out_33_cast_fp16")];
            tensor<fp16, [768]> obj_79_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_79_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(179591552)))];
            tensor<fp16, [768]> obj_79_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_79_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(179593152)))];
            tensor<fp16, []> obj_79_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_79_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_79_cast_fp16 = batch_norm(beta = obj_79_beta_0_to_fp16, epsilon = obj_79_epsilon_0_to_fp16, gamma = obj_79_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_33_cast_fp16)[name = tensor<string, []>("obj_79_cast_fp16")];
            tensor<int32, [2]> var_1295 = const()[name = tensor<string, []>("op_1295"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1297 = const()[name = tensor<string, []>("op_1297"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_23_pad_type_0 = const()[name = tensor<string, []>("query_23_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_23_pad_0 = const()[name = tensor<string, []>("query_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_5_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(179594752)))];
            tensor<fp16, [768]> layers_5_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_5_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(180774464)))];
            tensor<fp16, [1, 768, 1, 1]> query_23_cast_fp16 = conv(bias = layers_5_encoder_attn_q_proj_bias_to_fp16, dilations = var_1297, groups = var_1173, pad = query_23_pad_0, pad_type = query_23_pad_type_0, strides = var_1295, weight = layers_5_encoder_attn_q_proj_weight_to_fp16, x = obj_79_cast_fp16)[name = tensor<string, []>("query_23_cast_fp16")];
            tensor<int32, [2]> var_1301 = const()[name = tensor<string, []>("op_1301"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1303 = const()[name = tensor<string, []>("op_1303"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_23_pad_type_0 = const()[name = tensor<string, []>("key_23_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_23_pad_0 = const()[name = tensor<string, []>("key_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_5_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(180776064)))];
            tensor<fp16, [1, 768, 1, 1500]> key_23_cast_fp16 = conv(dilations = var_1303, groups = var_1173, pad = key_23_pad_0, pad_type = key_23_pad_type_0, strides = var_1301, weight = layers_5_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_23_cast_fp16")];
            tensor<int32, [2]> var_1308 = const()[name = tensor<string, []>("op_1308"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1310 = const()[name = tensor<string, []>("op_1310"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_23_pad_type_0 = const()[name = tensor<string, []>("value_23_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_23_pad_0 = const()[name = tensor<string, []>("value_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_5_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(181955776)))];
            tensor<fp16, [768]> layers_5_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_5_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(183135488)))];
            tensor<fp16, [1, 768, 1, 1500]> value_23_cast_fp16 = conv(bias = layers_5_encoder_attn_v_proj_bias_to_fp16, dilations = var_1310, groups = var_1173, pad = value_23_pad_0, pad_type = value_23_pad_type_0, strides = var_1308, weight = layers_5_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_23_cast_fp16")];
            tensor<int32, [4]> var_1314 = const()[name = tensor<string, []>("op_1314"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_1315_cast_fp16 = reshape(shape = var_1314, x = query_23_cast_fp16)[name = tensor<string, []>("op_1315_cast_fp16")];
            tensor<fp16, []> var_1316_to_fp16 = const()[name = tensor<string, []>("op_1316_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_1317_cast_fp16 = mul(x = var_1315_cast_fp16, y = var_1316_to_fp16)[name = tensor<string, []>("op_1317_cast_fp16")];
            tensor<int32, [4]> var_1318 = const()[name = tensor<string, []>("op_1318"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_1319_cast_fp16 = reshape(shape = var_1318, x = key_23_cast_fp16)[name = tensor<string, []>("op_1319_cast_fp16")];
            tensor<bool, []> mh_w_35_transpose_x_0 = const()[name = tensor<string, []>("mh_w_35_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_35_transpose_y_0 = const()[name = tensor<string, []>("mh_w_35_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 1500]> mh_w_35_cast_fp16 = matmul(transpose_x = mh_w_35_transpose_x_0, transpose_y = mh_w_35_transpose_y_0, x = var_1317_cast_fp16, y = var_1319_cast_fp16)[name = tensor<string, []>("mh_w_35_cast_fp16")];
            tensor<fp16, [1, 12, 1, 1500]> obj_83_cast_fp16 = softmax(axis = var_1166, x = mh_w_35_cast_fp16)[name = tensor<string, []>("obj_83_cast_fp16")];
            tensor<int32, [4]> var_1323 = const()[name = tensor<string, []>("op_1323"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_1324_cast_fp16 = reshape(shape = var_1323, x = value_23_cast_fp16)[name = tensor<string, []>("op_1324_cast_fp16")];
            tensor<bool, []> attn_23_transpose_x_0 = const()[name = tensor<string, []>("attn_23_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_23_transpose_y_0 = const()[name = tensor<string, []>("attn_23_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_23_cast_fp16 = matmul(transpose_x = attn_23_transpose_x_0, transpose_y = attn_23_transpose_y_0, x = var_1324_cast_fp16, y = obj_83_cast_fp16)[name = tensor<string, []>("attn_23_cast_fp16")];
            tensor<int32, [4]> var_1327 = const()[name = tensor<string, []>("op_1327"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_53_cast_fp16 = reshape(shape = var_1327, x = attn_23_cast_fp16)[name = tensor<string, []>("input_53_cast_fp16")];
            tensor<int32, [2]> var_1331 = const()[name = tensor<string, []>("op_1331"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1333 = const()[name = tensor<string, []>("op_1333"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_81_pad_type_0 = const()[name = tensor<string, []>("obj_81_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_81_pad_0 = const()[name = tensor<string, []>("obj_81_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_5_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(183137088)))];
            tensor<fp16, [768]> layers_5_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_5_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(184316800)))];
            tensor<fp16, [1, 768, 1, 1]> obj_81_cast_fp16 = conv(bias = layers_5_encoder_attn_o_proj_bias_to_fp16, dilations = var_1333, groups = var_1173, pad = obj_81_pad_0, pad_type = obj_81_pad_type_0, strides = var_1331, weight = layers_5_encoder_attn_o_proj_weight_to_fp16, x = input_53_cast_fp16)[name = tensor<string, []>("obj_81_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_35_cast_fp16 = add(x = inputs_33_cast_fp16, y = obj_81_cast_fp16)[name = tensor<string, []>("inputs_35_cast_fp16")];
            tensor<int32, [1]> var_1339 = const()[name = tensor<string, []>("op_1339"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_35_cast_fp16 = reduce_mean(axes = var_1339, keep_dims = var_1174, x = inputs_35_cast_fp16)[name = tensor<string, []>("channels_mean_35_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_35_cast_fp16 = sub(x = inputs_35_cast_fp16, y = channels_mean_35_cast_fp16)[name = tensor<string, []>("zero_mean_35_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_35_cast_fp16 = mul(x = zero_mean_35_cast_fp16, y = zero_mean_35_cast_fp16)[name = tensor<string, []>("zero_mean_sq_35_cast_fp16")];
            tensor<int32, [1]> var_1343 = const()[name = tensor<string, []>("op_1343"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1344_cast_fp16 = reduce_mean(axes = var_1343, keep_dims = var_1174, x = zero_mean_sq_35_cast_fp16)[name = tensor<string, []>("op_1344_cast_fp16")];
            tensor<fp16, []> var_1345_to_fp16 = const()[name = tensor<string, []>("op_1345_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1346_cast_fp16 = add(x = var_1344_cast_fp16, y = var_1345_to_fp16)[name = tensor<string, []>("op_1346_cast_fp16")];
            tensor<fp16, []> denom_35_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_35_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_35_cast_fp16 = rsqrt(epsilon = denom_35_epsilon_0_to_fp16, x = var_1346_cast_fp16)[name = tensor<string, []>("denom_35_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_35_cast_fp16 = mul(x = zero_mean_35_cast_fp16, y = denom_35_cast_fp16)[name = tensor<string, []>("out_35_cast_fp16")];
            tensor<fp16, [768]> input_55_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_55_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(184318400)))];
            tensor<fp16, [768]> input_55_beta_0_to_fp16 = const()[name = tensor<string, []>("input_55_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(184320000)))];
            tensor<fp16, []> input_55_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_55_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> input_55_cast_fp16 = batch_norm(beta = input_55_beta_0_to_fp16, epsilon = input_55_epsilon_0_to_fp16, gamma = input_55_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_35_cast_fp16)[name = tensor<string, []>("input_55_cast_fp16")];
            tensor<int32, [2]> var_1357 = const()[name = tensor<string, []>("op_1357"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1359 = const()[name = tensor<string, []>("op_1359"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_57_pad_type_0 = const()[name = tensor<string, []>("input_57_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_57_pad_0 = const()[name = tensor<string, []>("input_57_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [3072, 768, 1, 1]> layers_5_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_fc1_weight_to_fp16"), val = tensor<fp16, [3072, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(184321600)))];
            tensor<fp16, [3072]> layers_5_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_5_fc1_bias_to_fp16"), val = tensor<fp16, [3072]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(189040256)))];
            tensor<fp16, [1, 3072, 1, 1]> input_57_cast_fp16 = conv(bias = layers_5_fc1_bias_to_fp16, dilations = var_1359, groups = var_1173, pad = input_57_pad_0, pad_type = input_57_pad_type_0, strides = var_1357, weight = layers_5_fc1_weight_to_fp16, x = input_55_cast_fp16)[name = tensor<string, []>("input_57_cast_fp16")];
            tensor<string, []> input_59_mode_0 = const()[name = tensor<string, []>("input_59_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 3072, 1, 1]> input_59_cast_fp16 = gelu(mode = input_59_mode_0, x = input_57_cast_fp16)[name = tensor<string, []>("input_59_cast_fp16")];
            tensor<int32, [2]> var_1365 = const()[name = tensor<string, []>("op_1365"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1367 = const()[name = tensor<string, []>("op_1367"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_13_pad_type_0 = const()[name = tensor<string, []>("hidden_states_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_13_pad_0 = const()[name = tensor<string, []>("hidden_states_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 3072, 1, 1]> layers_5_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_5_fc2_weight_to_fp16"), val = tensor<fp16, [768, 3072, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(189046464)))];
            tensor<fp16, [768]> layers_5_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_5_fc2_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(193765120)))];
            tensor<fp16, [1, 768, 1, 1]> hidden_states_13_cast_fp16 = conv(bias = layers_5_fc2_bias_to_fp16, dilations = var_1367, groups = var_1173, pad = hidden_states_13_pad_0, pad_type = hidden_states_13_pad_type_0, strides = var_1365, weight = layers_5_fc2_weight_to_fp16, x = input_59_cast_fp16)[name = tensor<string, []>("hidden_states_13_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_37_cast_fp16 = add(x = inputs_35_cast_fp16, y = hidden_states_13_cast_fp16)[name = tensor<string, []>("inputs_37_cast_fp16")];
            tensor<int32, []> var_1380 = const()[name = tensor<string, []>("op_1380"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_1387 = const()[name = tensor<string, []>("op_1387"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_1388 = const()[name = tensor<string, []>("op_1388"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_1400 = const()[name = tensor<string, []>("op_1400"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_37_cast_fp16 = reduce_mean(axes = var_1400, keep_dims = var_1388, x = inputs_37_cast_fp16)[name = tensor<string, []>("channels_mean_37_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_37_cast_fp16 = sub(x = inputs_37_cast_fp16, y = channels_mean_37_cast_fp16)[name = tensor<string, []>("zero_mean_37_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_37_cast_fp16 = mul(x = zero_mean_37_cast_fp16, y = zero_mean_37_cast_fp16)[name = tensor<string, []>("zero_mean_sq_37_cast_fp16")];
            tensor<int32, [1]> var_1404 = const()[name = tensor<string, []>("op_1404"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1405_cast_fp16 = reduce_mean(axes = var_1404, keep_dims = var_1388, x = zero_mean_sq_37_cast_fp16)[name = tensor<string, []>("op_1405_cast_fp16")];
            tensor<fp16, []> var_1406_to_fp16 = const()[name = tensor<string, []>("op_1406_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1407_cast_fp16 = add(x = var_1405_cast_fp16, y = var_1406_to_fp16)[name = tensor<string, []>("op_1407_cast_fp16")];
            tensor<fp16, []> denom_37_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_37_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_37_cast_fp16 = rsqrt(epsilon = denom_37_epsilon_0_to_fp16, x = var_1407_cast_fp16)[name = tensor<string, []>("denom_37_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_37_cast_fp16 = mul(x = zero_mean_37_cast_fp16, y = denom_37_cast_fp16)[name = tensor<string, []>("out_37_cast_fp16")];
            tensor<fp16, [768]> obj_85_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_85_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(193766720)))];
            tensor<fp16, [768]> obj_85_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_85_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(193768320)))];
            tensor<fp16, []> obj_85_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_85_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_85_cast_fp16 = batch_norm(beta = obj_85_beta_0_to_fp16, epsilon = obj_85_epsilon_0_to_fp16, gamma = obj_85_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_37_cast_fp16)[name = tensor<string, []>("obj_85_cast_fp16")];
            tensor<int32, [2]> var_1422 = const()[name = tensor<string, []>("op_1422"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1424 = const()[name = tensor<string, []>("op_1424"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_25_pad_type_0 = const()[name = tensor<string, []>("query_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_25_pad_0 = const()[name = tensor<string, []>("query_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_6_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_6_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(193769920)))];
            tensor<fp16, [768]> layers_6_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_6_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(194949632)))];
            tensor<fp16, [1, 768, 1, 1]> query_25_cast_fp16 = conv(bias = layers_6_self_attn_q_proj_bias_to_fp16, dilations = var_1424, groups = var_1387, pad = query_25_pad_0, pad_type = query_25_pad_type_0, strides = var_1422, weight = layers_6_self_attn_q_proj_weight_to_fp16, x = obj_85_cast_fp16)[name = tensor<string, []>("query_25_cast_fp16")];
            tensor<int32, [2]> var_1428 = const()[name = tensor<string, []>("op_1428"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1430 = const()[name = tensor<string, []>("op_1430"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_13_pad_type_0 = const()[name = tensor<string, []>("current_key_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_13_pad_0 = const()[name = tensor<string, []>("current_key_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_6_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_6_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(194951232)))];
            tensor<fp16, [1, 768, 1, 1]> current_key_13_cast_fp16 = conv(dilations = var_1430, groups = var_1387, pad = current_key_13_pad_0, pad_type = current_key_13_pad_type_0, strides = var_1428, weight = layers_6_self_attn_k_proj_weight_to_fp16, x = obj_85_cast_fp16)[name = tensor<string, []>("current_key_13_cast_fp16")];
            tensor<int32, [2]> var_1435 = const()[name = tensor<string, []>("op_1435"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1437 = const()[name = tensor<string, []>("op_1437"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_13_pad_type_0 = const()[name = tensor<string, []>("current_value_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_13_pad_0 = const()[name = tensor<string, []>("current_value_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_6_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_6_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(196130944)))];
            tensor<fp16, [768]> layers_6_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_6_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(197310656)))];
            tensor<fp16, [1, 768, 1, 1]> current_value_13_cast_fp16 = conv(bias = layers_6_self_attn_v_proj_bias_to_fp16, dilations = var_1437, groups = var_1387, pad = current_value_13_pad_0, pad_type = current_value_13_pad_type_0, strides = var_1435, weight = layers_6_self_attn_v_proj_weight_to_fp16, x = obj_85_cast_fp16)[name = tensor<string, []>("current_value_13_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1444_cast_fp16 = mul(x = current_key_13_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_1444_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1446_cast_fp16 = mul(x = var_63_cast_fp16_6, y = var_161_cast_fp16)[name = tensor<string, []>("op_1446_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> key_25_cast_fp16 = add(x = var_1444_cast_fp16, y = var_1446_cast_fp16)[name = tensor<string, []>("key_25_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1448_cast_fp16 = mul(x = current_value_13_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_1448_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1450_cast_fp16 = mul(x = var_78_cast_fp16_6, y = var_161_cast_fp16)[name = tensor<string, []>("op_1450_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> value_25_cast_fp16 = add(x = var_1448_cast_fp16, y = var_1450_cast_fp16)[name = tensor<string, []>("value_25_cast_fp16")];
            tensor<int32, [4]> var_1453 = const()[name = tensor<string, []>("op_1453"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_1454_cast_fp16 = reshape(shape = var_1453, x = query_25_cast_fp16)[name = tensor<string, []>("op_1454_cast_fp16")];
            tensor<fp16, []> var_1455_to_fp16 = const()[name = tensor<string, []>("op_1455_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_1456_cast_fp16 = mul(x = var_1454_cast_fp16, y = var_1455_to_fp16)[name = tensor<string, []>("op_1456_cast_fp16")];
            tensor<int32, [4]> var_1457 = const()[name = tensor<string, []>("op_1457"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_1458_cast_fp16 = reshape(shape = var_1457, x = key_25_cast_fp16)[name = tensor<string, []>("op_1458_cast_fp16")];
            tensor<bool, []> mh_w_37_transpose_x_0 = const()[name = tensor<string, []>("mh_w_37_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_37_transpose_y_0 = const()[name = tensor<string, []>("mh_w_37_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 224]> mh_w_37_cast_fp16 = matmul(transpose_x = mh_w_37_transpose_x_0, transpose_y = mh_w_37_transpose_y_0, x = var_1456_cast_fp16, y = var_1458_cast_fp16)[name = tensor<string, []>("mh_w_37_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> mh_w_39_cast_fp16 = add(x = mh_w_37_cast_fp16, y = var_179_cast_fp16)[name = tensor<string, []>("mh_w_39_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> var_1466_cast_fp16 = softmax(axis = var_1380, x = mh_w_39_cast_fp16)[name = tensor<string, []>("op_1466_cast_fp16")];
            tensor<int32, [4]> var_1467 = const()[name = tensor<string, []>("op_1467"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_1468_cast_fp16 = reshape(shape = var_1467, x = value_25_cast_fp16)[name = tensor<string, []>("op_1468_cast_fp16")];
            tensor<bool, []> attn_25_transpose_x_0 = const()[name = tensor<string, []>("attn_25_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_25_transpose_y_0 = const()[name = tensor<string, []>("attn_25_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_25_cast_fp16 = matmul(transpose_x = attn_25_transpose_x_0, transpose_y = attn_25_transpose_y_0, x = var_1468_cast_fp16, y = var_1466_cast_fp16)[name = tensor<string, []>("attn_25_cast_fp16")];
            tensor<int32, [4]> var_1471 = const()[name = tensor<string, []>("op_1471"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_61_cast_fp16 = reshape(shape = var_1471, x = attn_25_cast_fp16)[name = tensor<string, []>("input_61_cast_fp16")];
            tensor<int32, [2]> var_1475 = const()[name = tensor<string, []>("op_1475"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1477 = const()[name = tensor<string, []>("op_1477"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_91_pad_type_0 = const()[name = tensor<string, []>("obj_91_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_91_pad_0 = const()[name = tensor<string, []>("obj_91_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_6_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_6_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(197312256)))];
            tensor<fp16, [768]> layers_6_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_6_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(198491968)))];
            tensor<fp16, [1, 768, 1, 1]> obj_91_cast_fp16 = conv(bias = layers_6_self_attn_o_proj_bias_to_fp16, dilations = var_1477, groups = var_1387, pad = obj_91_pad_0, pad_type = obj_91_pad_type_0, strides = var_1475, weight = layers_6_self_attn_o_proj_weight_to_fp16, x = input_61_cast_fp16)[name = tensor<string, []>("obj_91_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_39_cast_fp16 = add(x = inputs_37_cast_fp16, y = obj_91_cast_fp16)[name = tensor<string, []>("inputs_39_cast_fp16")];
            tensor<int32, [1]> var_1487 = const()[name = tensor<string, []>("op_1487"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_39_cast_fp16 = reduce_mean(axes = var_1487, keep_dims = var_1388, x = inputs_39_cast_fp16)[name = tensor<string, []>("channels_mean_39_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_39_cast_fp16 = sub(x = inputs_39_cast_fp16, y = channels_mean_39_cast_fp16)[name = tensor<string, []>("zero_mean_39_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_39_cast_fp16 = mul(x = zero_mean_39_cast_fp16, y = zero_mean_39_cast_fp16)[name = tensor<string, []>("zero_mean_sq_39_cast_fp16")];
            tensor<int32, [1]> var_1491 = const()[name = tensor<string, []>("op_1491"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1492_cast_fp16 = reduce_mean(axes = var_1491, keep_dims = var_1388, x = zero_mean_sq_39_cast_fp16)[name = tensor<string, []>("op_1492_cast_fp16")];
            tensor<fp16, []> var_1493_to_fp16 = const()[name = tensor<string, []>("op_1493_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1494_cast_fp16 = add(x = var_1492_cast_fp16, y = var_1493_to_fp16)[name = tensor<string, []>("op_1494_cast_fp16")];
            tensor<fp16, []> denom_39_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_39_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_39_cast_fp16 = rsqrt(epsilon = denom_39_epsilon_0_to_fp16, x = var_1494_cast_fp16)[name = tensor<string, []>("denom_39_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_39_cast_fp16 = mul(x = zero_mean_39_cast_fp16, y = denom_39_cast_fp16)[name = tensor<string, []>("out_39_cast_fp16")];
            tensor<fp16, [768]> obj_93_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_93_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(198493568)))];
            tensor<fp16, [768]> obj_93_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_93_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(198495168)))];
            tensor<fp16, []> obj_93_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_93_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_93_cast_fp16 = batch_norm(beta = obj_93_beta_0_to_fp16, epsilon = obj_93_epsilon_0_to_fp16, gamma = obj_93_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_39_cast_fp16)[name = tensor<string, []>("obj_93_cast_fp16")];
            tensor<int32, [2]> var_1509 = const()[name = tensor<string, []>("op_1509"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1511 = const()[name = tensor<string, []>("op_1511"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_27_pad_type_0 = const()[name = tensor<string, []>("query_27_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_27_pad_0 = const()[name = tensor<string, []>("query_27_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_6_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_6_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(198496768)))];
            tensor<fp16, [768]> layers_6_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_6_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(199676480)))];
            tensor<fp16, [1, 768, 1, 1]> query_27_cast_fp16 = conv(bias = layers_6_encoder_attn_q_proj_bias_to_fp16, dilations = var_1511, groups = var_1387, pad = query_27_pad_0, pad_type = query_27_pad_type_0, strides = var_1509, weight = layers_6_encoder_attn_q_proj_weight_to_fp16, x = obj_93_cast_fp16)[name = tensor<string, []>("query_27_cast_fp16")];
            tensor<int32, [2]> var_1515 = const()[name = tensor<string, []>("op_1515"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1517 = const()[name = tensor<string, []>("op_1517"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_27_pad_type_0 = const()[name = tensor<string, []>("key_27_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_27_pad_0 = const()[name = tensor<string, []>("key_27_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_6_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_6_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(199678080)))];
            tensor<fp16, [1, 768, 1, 1500]> key_27_cast_fp16 = conv(dilations = var_1517, groups = var_1387, pad = key_27_pad_0, pad_type = key_27_pad_type_0, strides = var_1515, weight = layers_6_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_27_cast_fp16")];
            tensor<int32, [2]> var_1522 = const()[name = tensor<string, []>("op_1522"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1524 = const()[name = tensor<string, []>("op_1524"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_27_pad_type_0 = const()[name = tensor<string, []>("value_27_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_27_pad_0 = const()[name = tensor<string, []>("value_27_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_6_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_6_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(200857792)))];
            tensor<fp16, [768]> layers_6_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_6_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(202037504)))];
            tensor<fp16, [1, 768, 1, 1500]> value_27_cast_fp16 = conv(bias = layers_6_encoder_attn_v_proj_bias_to_fp16, dilations = var_1524, groups = var_1387, pad = value_27_pad_0, pad_type = value_27_pad_type_0, strides = var_1522, weight = layers_6_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_27_cast_fp16")];
            tensor<int32, [4]> var_1528 = const()[name = tensor<string, []>("op_1528"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_1529_cast_fp16 = reshape(shape = var_1528, x = query_27_cast_fp16)[name = tensor<string, []>("op_1529_cast_fp16")];
            tensor<fp16, []> var_1530_to_fp16 = const()[name = tensor<string, []>("op_1530_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_1531_cast_fp16 = mul(x = var_1529_cast_fp16, y = var_1530_to_fp16)[name = tensor<string, []>("op_1531_cast_fp16")];
            tensor<int32, [4]> var_1532 = const()[name = tensor<string, []>("op_1532"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_1533_cast_fp16 = reshape(shape = var_1532, x = key_27_cast_fp16)[name = tensor<string, []>("op_1533_cast_fp16")];
            tensor<bool, []> mh_w_41_transpose_x_0 = const()[name = tensor<string, []>("mh_w_41_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_41_transpose_y_0 = const()[name = tensor<string, []>("mh_w_41_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 1500]> mh_w_41_cast_fp16 = matmul(transpose_x = mh_w_41_transpose_x_0, transpose_y = mh_w_41_transpose_y_0, x = var_1531_cast_fp16, y = var_1533_cast_fp16)[name = tensor<string, []>("mh_w_41_cast_fp16")];
            tensor<fp16, [1, 12, 1, 1500]> obj_97_cast_fp16 = softmax(axis = var_1380, x = mh_w_41_cast_fp16)[name = tensor<string, []>("obj_97_cast_fp16")];
            tensor<int32, [4]> var_1537 = const()[name = tensor<string, []>("op_1537"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_1538_cast_fp16 = reshape(shape = var_1537, x = value_27_cast_fp16)[name = tensor<string, []>("op_1538_cast_fp16")];
            tensor<bool, []> attn_27_transpose_x_0 = const()[name = tensor<string, []>("attn_27_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_27_transpose_y_0 = const()[name = tensor<string, []>("attn_27_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_27_cast_fp16 = matmul(transpose_x = attn_27_transpose_x_0, transpose_y = attn_27_transpose_y_0, x = var_1538_cast_fp16, y = obj_97_cast_fp16)[name = tensor<string, []>("attn_27_cast_fp16")];
            tensor<int32, [4]> var_1541 = const()[name = tensor<string, []>("op_1541"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_63_cast_fp16 = reshape(shape = var_1541, x = attn_27_cast_fp16)[name = tensor<string, []>("input_63_cast_fp16")];
            tensor<int32, [2]> var_1545 = const()[name = tensor<string, []>("op_1545"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1547 = const()[name = tensor<string, []>("op_1547"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_95_pad_type_0 = const()[name = tensor<string, []>("obj_95_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_95_pad_0 = const()[name = tensor<string, []>("obj_95_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_6_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_6_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(202039104)))];
            tensor<fp16, [768]> layers_6_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_6_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(203218816)))];
            tensor<fp16, [1, 768, 1, 1]> obj_95_cast_fp16 = conv(bias = layers_6_encoder_attn_o_proj_bias_to_fp16, dilations = var_1547, groups = var_1387, pad = obj_95_pad_0, pad_type = obj_95_pad_type_0, strides = var_1545, weight = layers_6_encoder_attn_o_proj_weight_to_fp16, x = input_63_cast_fp16)[name = tensor<string, []>("obj_95_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_41_cast_fp16 = add(x = inputs_39_cast_fp16, y = obj_95_cast_fp16)[name = tensor<string, []>("inputs_41_cast_fp16")];
            tensor<int32, [1]> var_1556 = const()[name = tensor<string, []>("op_1556"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_41_cast_fp16 = reduce_mean(axes = var_1556, keep_dims = var_1388, x = inputs_41_cast_fp16)[name = tensor<string, []>("channels_mean_41_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_41_cast_fp16 = sub(x = inputs_41_cast_fp16, y = channels_mean_41_cast_fp16)[name = tensor<string, []>("zero_mean_41_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_41_cast_fp16 = mul(x = zero_mean_41_cast_fp16, y = zero_mean_41_cast_fp16)[name = tensor<string, []>("zero_mean_sq_41_cast_fp16")];
            tensor<int32, [1]> var_1560 = const()[name = tensor<string, []>("op_1560"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1561_cast_fp16 = reduce_mean(axes = var_1560, keep_dims = var_1388, x = zero_mean_sq_41_cast_fp16)[name = tensor<string, []>("op_1561_cast_fp16")];
            tensor<fp16, []> var_1562_to_fp16 = const()[name = tensor<string, []>("op_1562_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1563_cast_fp16 = add(x = var_1561_cast_fp16, y = var_1562_to_fp16)[name = tensor<string, []>("op_1563_cast_fp16")];
            tensor<fp16, []> denom_41_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_41_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_41_cast_fp16 = rsqrt(epsilon = denom_41_epsilon_0_to_fp16, x = var_1563_cast_fp16)[name = tensor<string, []>("denom_41_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_41_cast_fp16 = mul(x = zero_mean_41_cast_fp16, y = denom_41_cast_fp16)[name = tensor<string, []>("out_41_cast_fp16")];
            tensor<fp16, [768]> input_65_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_65_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(203220416)))];
            tensor<fp16, [768]> input_65_beta_0_to_fp16 = const()[name = tensor<string, []>("input_65_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(203222016)))];
            tensor<fp16, []> input_65_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_65_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> input_65_cast_fp16 = batch_norm(beta = input_65_beta_0_to_fp16, epsilon = input_65_epsilon_0_to_fp16, gamma = input_65_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_41_cast_fp16)[name = tensor<string, []>("input_65_cast_fp16")];
            tensor<int32, [2]> var_1574 = const()[name = tensor<string, []>("op_1574"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1576 = const()[name = tensor<string, []>("op_1576"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_67_pad_type_0 = const()[name = tensor<string, []>("input_67_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_67_pad_0 = const()[name = tensor<string, []>("input_67_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [3072, 768, 1, 1]> layers_6_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_6_fc1_weight_to_fp16"), val = tensor<fp16, [3072, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(203223616)))];
            tensor<fp16, [3072]> layers_6_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_6_fc1_bias_to_fp16"), val = tensor<fp16, [3072]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(207942272)))];
            tensor<fp16, [1, 3072, 1, 1]> input_67_cast_fp16 = conv(bias = layers_6_fc1_bias_to_fp16, dilations = var_1576, groups = var_1387, pad = input_67_pad_0, pad_type = input_67_pad_type_0, strides = var_1574, weight = layers_6_fc1_weight_to_fp16, x = input_65_cast_fp16)[name = tensor<string, []>("input_67_cast_fp16")];
            tensor<string, []> input_69_mode_0 = const()[name = tensor<string, []>("input_69_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 3072, 1, 1]> input_69_cast_fp16 = gelu(mode = input_69_mode_0, x = input_67_cast_fp16)[name = tensor<string, []>("input_69_cast_fp16")];
            tensor<int32, [2]> var_1582 = const()[name = tensor<string, []>("op_1582"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1584 = const()[name = tensor<string, []>("op_1584"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_15_pad_type_0 = const()[name = tensor<string, []>("hidden_states_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_15_pad_0 = const()[name = tensor<string, []>("hidden_states_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 3072, 1, 1]> layers_6_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_6_fc2_weight_to_fp16"), val = tensor<fp16, [768, 3072, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(207948480)))];
            tensor<fp16, [768]> layers_6_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_6_fc2_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(212667136)))];
            tensor<fp16, [1, 768, 1, 1]> hidden_states_15_cast_fp16 = conv(bias = layers_6_fc2_bias_to_fp16, dilations = var_1584, groups = var_1387, pad = hidden_states_15_pad_0, pad_type = hidden_states_15_pad_type_0, strides = var_1582, weight = layers_6_fc2_weight_to_fp16, x = input_69_cast_fp16)[name = tensor<string, []>("hidden_states_15_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_43_cast_fp16 = add(x = inputs_41_cast_fp16, y = hidden_states_15_cast_fp16)[name = tensor<string, []>("inputs_43_cast_fp16")];
            tensor<int32, []> var_1598 = const()[name = tensor<string, []>("op_1598"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_1605 = const()[name = tensor<string, []>("op_1605"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_1606 = const()[name = tensor<string, []>("op_1606"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_1618 = const()[name = tensor<string, []>("op_1618"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_43_cast_fp16 = reduce_mean(axes = var_1618, keep_dims = var_1606, x = inputs_43_cast_fp16)[name = tensor<string, []>("channels_mean_43_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_43_cast_fp16 = sub(x = inputs_43_cast_fp16, y = channels_mean_43_cast_fp16)[name = tensor<string, []>("zero_mean_43_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_43_cast_fp16 = mul(x = zero_mean_43_cast_fp16, y = zero_mean_43_cast_fp16)[name = tensor<string, []>("zero_mean_sq_43_cast_fp16")];
            tensor<int32, [1]> var_1622 = const()[name = tensor<string, []>("op_1622"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1623_cast_fp16 = reduce_mean(axes = var_1622, keep_dims = var_1606, x = zero_mean_sq_43_cast_fp16)[name = tensor<string, []>("op_1623_cast_fp16")];
            tensor<fp16, []> var_1624_to_fp16 = const()[name = tensor<string, []>("op_1624_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1625_cast_fp16 = add(x = var_1623_cast_fp16, y = var_1624_to_fp16)[name = tensor<string, []>("op_1625_cast_fp16")];
            tensor<fp16, []> denom_43_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_43_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_43_cast_fp16 = rsqrt(epsilon = denom_43_epsilon_0_to_fp16, x = var_1625_cast_fp16)[name = tensor<string, []>("denom_43_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_43_cast_fp16 = mul(x = zero_mean_43_cast_fp16, y = denom_43_cast_fp16)[name = tensor<string, []>("out_43_cast_fp16")];
            tensor<fp16, [768]> obj_99_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_99_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(212668736)))];
            tensor<fp16, [768]> obj_99_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_99_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(212670336)))];
            tensor<fp16, []> obj_99_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_99_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_99_cast_fp16 = batch_norm(beta = obj_99_beta_0_to_fp16, epsilon = obj_99_epsilon_0_to_fp16, gamma = obj_99_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_43_cast_fp16)[name = tensor<string, []>("obj_99_cast_fp16")];
            tensor<int32, [2]> var_1640 = const()[name = tensor<string, []>("op_1640"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1642 = const()[name = tensor<string, []>("op_1642"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_29_pad_type_0 = const()[name = tensor<string, []>("query_29_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_29_pad_0 = const()[name = tensor<string, []>("query_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_7_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_7_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(212671936)))];
            tensor<fp16, [768]> layers_7_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_7_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(213851648)))];
            tensor<fp16, [1, 768, 1, 1]> query_29_cast_fp16 = conv(bias = layers_7_self_attn_q_proj_bias_to_fp16, dilations = var_1642, groups = var_1605, pad = query_29_pad_0, pad_type = query_29_pad_type_0, strides = var_1640, weight = layers_7_self_attn_q_proj_weight_to_fp16, x = obj_99_cast_fp16)[name = tensor<string, []>("query_29_cast_fp16")];
            tensor<int32, [2]> var_1646 = const()[name = tensor<string, []>("op_1646"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1648 = const()[name = tensor<string, []>("op_1648"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_15_pad_type_0 = const()[name = tensor<string, []>("current_key_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_15_pad_0 = const()[name = tensor<string, []>("current_key_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_7_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_7_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(213853248)))];
            tensor<fp16, [1, 768, 1, 1]> current_key_15_cast_fp16 = conv(dilations = var_1648, groups = var_1605, pad = current_key_15_pad_0, pad_type = current_key_15_pad_type_0, strides = var_1646, weight = layers_7_self_attn_k_proj_weight_to_fp16, x = obj_99_cast_fp16)[name = tensor<string, []>("current_key_15_cast_fp16")];
            tensor<int32, [2]> var_1653 = const()[name = tensor<string, []>("op_1653"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1655 = const()[name = tensor<string, []>("op_1655"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_15_pad_type_0 = const()[name = tensor<string, []>("current_value_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_15_pad_0 = const()[name = tensor<string, []>("current_value_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_7_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_7_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(215032960)))];
            tensor<fp16, [768]> layers_7_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_7_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(216212672)))];
            tensor<fp16, [1, 768, 1, 1]> current_value_15_cast_fp16 = conv(bias = layers_7_self_attn_v_proj_bias_to_fp16, dilations = var_1655, groups = var_1605, pad = current_value_15_pad_0, pad_type = current_value_15_pad_type_0, strides = var_1653, weight = layers_7_self_attn_v_proj_weight_to_fp16, x = obj_99_cast_fp16)[name = tensor<string, []>("current_value_15_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1662_cast_fp16 = mul(x = current_key_15_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_1662_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1664_cast_fp16 = mul(x = var_63_cast_fp16_7, y = var_161_cast_fp16)[name = tensor<string, []>("op_1664_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> key_29_cast_fp16 = add(x = var_1662_cast_fp16, y = var_1664_cast_fp16)[name = tensor<string, []>("key_29_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1666_cast_fp16 = mul(x = current_value_15_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_1666_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1668_cast_fp16 = mul(x = var_78_cast_fp16_7, y = var_161_cast_fp16)[name = tensor<string, []>("op_1668_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> value_29_cast_fp16 = add(x = var_1666_cast_fp16, y = var_1668_cast_fp16)[name = tensor<string, []>("value_29_cast_fp16")];
            tensor<int32, [4]> var_1671 = const()[name = tensor<string, []>("op_1671"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_1672_cast_fp16 = reshape(shape = var_1671, x = query_29_cast_fp16)[name = tensor<string, []>("op_1672_cast_fp16")];
            tensor<fp16, []> var_1673_to_fp16 = const()[name = tensor<string, []>("op_1673_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_1674_cast_fp16 = mul(x = var_1672_cast_fp16, y = var_1673_to_fp16)[name = tensor<string, []>("op_1674_cast_fp16")];
            tensor<int32, [4]> var_1675 = const()[name = tensor<string, []>("op_1675"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_1676_cast_fp16 = reshape(shape = var_1675, x = key_29_cast_fp16)[name = tensor<string, []>("op_1676_cast_fp16")];
            tensor<bool, []> mh_w_43_transpose_x_0 = const()[name = tensor<string, []>("mh_w_43_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_43_transpose_y_0 = const()[name = tensor<string, []>("mh_w_43_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 224]> mh_w_43_cast_fp16 = matmul(transpose_x = mh_w_43_transpose_x_0, transpose_y = mh_w_43_transpose_y_0, x = var_1674_cast_fp16, y = var_1676_cast_fp16)[name = tensor<string, []>("mh_w_43_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> mh_w_45_cast_fp16 = add(x = mh_w_43_cast_fp16, y = var_179_cast_fp16)[name = tensor<string, []>("mh_w_45_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> var_1684_cast_fp16 = softmax(axis = var_1598, x = mh_w_45_cast_fp16)[name = tensor<string, []>("op_1684_cast_fp16")];
            tensor<int32, [4]> var_1685 = const()[name = tensor<string, []>("op_1685"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_1686_cast_fp16 = reshape(shape = var_1685, x = value_29_cast_fp16)[name = tensor<string, []>("op_1686_cast_fp16")];
            tensor<bool, []> attn_29_transpose_x_0 = const()[name = tensor<string, []>("attn_29_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_29_transpose_y_0 = const()[name = tensor<string, []>("attn_29_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_29_cast_fp16 = matmul(transpose_x = attn_29_transpose_x_0, transpose_y = attn_29_transpose_y_0, x = var_1686_cast_fp16, y = var_1684_cast_fp16)[name = tensor<string, []>("attn_29_cast_fp16")];
            tensor<int32, [4]> var_1689 = const()[name = tensor<string, []>("op_1689"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_71_cast_fp16 = reshape(shape = var_1689, x = attn_29_cast_fp16)[name = tensor<string, []>("input_71_cast_fp16")];
            tensor<int32, [2]> var_1693 = const()[name = tensor<string, []>("op_1693"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1695 = const()[name = tensor<string, []>("op_1695"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_105_pad_type_0 = const()[name = tensor<string, []>("obj_105_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_105_pad_0 = const()[name = tensor<string, []>("obj_105_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_7_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_7_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(216214272)))];
            tensor<fp16, [768]> layers_7_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_7_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(217393984)))];
            tensor<fp16, [1, 768, 1, 1]> obj_105_cast_fp16 = conv(bias = layers_7_self_attn_o_proj_bias_to_fp16, dilations = var_1695, groups = var_1605, pad = obj_105_pad_0, pad_type = obj_105_pad_type_0, strides = var_1693, weight = layers_7_self_attn_o_proj_weight_to_fp16, x = input_71_cast_fp16)[name = tensor<string, []>("obj_105_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_45_cast_fp16 = add(x = inputs_43_cast_fp16, y = obj_105_cast_fp16)[name = tensor<string, []>("inputs_45_cast_fp16")];
            tensor<int32, [1]> var_1705 = const()[name = tensor<string, []>("op_1705"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_45_cast_fp16 = reduce_mean(axes = var_1705, keep_dims = var_1606, x = inputs_45_cast_fp16)[name = tensor<string, []>("channels_mean_45_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_45_cast_fp16 = sub(x = inputs_45_cast_fp16, y = channels_mean_45_cast_fp16)[name = tensor<string, []>("zero_mean_45_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_45_cast_fp16 = mul(x = zero_mean_45_cast_fp16, y = zero_mean_45_cast_fp16)[name = tensor<string, []>("zero_mean_sq_45_cast_fp16")];
            tensor<int32, [1]> var_1709 = const()[name = tensor<string, []>("op_1709"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1710_cast_fp16 = reduce_mean(axes = var_1709, keep_dims = var_1606, x = zero_mean_sq_45_cast_fp16)[name = tensor<string, []>("op_1710_cast_fp16")];
            tensor<fp16, []> var_1711_to_fp16 = const()[name = tensor<string, []>("op_1711_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1712_cast_fp16 = add(x = var_1710_cast_fp16, y = var_1711_to_fp16)[name = tensor<string, []>("op_1712_cast_fp16")];
            tensor<fp16, []> denom_45_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_45_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_45_cast_fp16 = rsqrt(epsilon = denom_45_epsilon_0_to_fp16, x = var_1712_cast_fp16)[name = tensor<string, []>("denom_45_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_45_cast_fp16 = mul(x = zero_mean_45_cast_fp16, y = denom_45_cast_fp16)[name = tensor<string, []>("out_45_cast_fp16")];
            tensor<fp16, [768]> obj_107_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_107_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(217395584)))];
            tensor<fp16, [768]> obj_107_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_107_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(217397184)))];
            tensor<fp16, []> obj_107_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_107_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_107_cast_fp16 = batch_norm(beta = obj_107_beta_0_to_fp16, epsilon = obj_107_epsilon_0_to_fp16, gamma = obj_107_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_45_cast_fp16)[name = tensor<string, []>("obj_107_cast_fp16")];
            tensor<int32, [2]> var_1727 = const()[name = tensor<string, []>("op_1727"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1729 = const()[name = tensor<string, []>("op_1729"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_31_pad_type_0 = const()[name = tensor<string, []>("query_31_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_31_pad_0 = const()[name = tensor<string, []>("query_31_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_7_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_7_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(217398784)))];
            tensor<fp16, [768]> layers_7_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_7_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(218578496)))];
            tensor<fp16, [1, 768, 1, 1]> query_31_cast_fp16 = conv(bias = layers_7_encoder_attn_q_proj_bias_to_fp16, dilations = var_1729, groups = var_1605, pad = query_31_pad_0, pad_type = query_31_pad_type_0, strides = var_1727, weight = layers_7_encoder_attn_q_proj_weight_to_fp16, x = obj_107_cast_fp16)[name = tensor<string, []>("query_31_cast_fp16")];
            tensor<int32, [2]> var_1733 = const()[name = tensor<string, []>("op_1733"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1735 = const()[name = tensor<string, []>("op_1735"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_31_pad_type_0 = const()[name = tensor<string, []>("key_31_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_31_pad_0 = const()[name = tensor<string, []>("key_31_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_7_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_7_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(218580096)))];
            tensor<fp16, [1, 768, 1, 1500]> key_31_cast_fp16 = conv(dilations = var_1735, groups = var_1605, pad = key_31_pad_0, pad_type = key_31_pad_type_0, strides = var_1733, weight = layers_7_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_31_cast_fp16")];
            tensor<int32, [2]> var_1740 = const()[name = tensor<string, []>("op_1740"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1742 = const()[name = tensor<string, []>("op_1742"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_31_pad_type_0 = const()[name = tensor<string, []>("value_31_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_31_pad_0 = const()[name = tensor<string, []>("value_31_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_7_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_7_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(219759808)))];
            tensor<fp16, [768]> layers_7_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_7_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(220939520)))];
            tensor<fp16, [1, 768, 1, 1500]> value_31_cast_fp16 = conv(bias = layers_7_encoder_attn_v_proj_bias_to_fp16, dilations = var_1742, groups = var_1605, pad = value_31_pad_0, pad_type = value_31_pad_type_0, strides = var_1740, weight = layers_7_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_31_cast_fp16")];
            tensor<int32, [4]> var_1746 = const()[name = tensor<string, []>("op_1746"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_1747_cast_fp16 = reshape(shape = var_1746, x = query_31_cast_fp16)[name = tensor<string, []>("op_1747_cast_fp16")];
            tensor<fp16, []> var_1748_to_fp16 = const()[name = tensor<string, []>("op_1748_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_1749_cast_fp16 = mul(x = var_1747_cast_fp16, y = var_1748_to_fp16)[name = tensor<string, []>("op_1749_cast_fp16")];
            tensor<int32, [4]> var_1750 = const()[name = tensor<string, []>("op_1750"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_1751_cast_fp16 = reshape(shape = var_1750, x = key_31_cast_fp16)[name = tensor<string, []>("op_1751_cast_fp16")];
            tensor<bool, []> mh_w_47_transpose_x_0 = const()[name = tensor<string, []>("mh_w_47_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_47_transpose_y_0 = const()[name = tensor<string, []>("mh_w_47_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 1500]> mh_w_47_cast_fp16 = matmul(transpose_x = mh_w_47_transpose_x_0, transpose_y = mh_w_47_transpose_y_0, x = var_1749_cast_fp16, y = var_1751_cast_fp16)[name = tensor<string, []>("mh_w_47_cast_fp16")];
            tensor<fp16, [1, 12, 1, 1500]> obj_111_cast_fp16 = softmax(axis = var_1598, x = mh_w_47_cast_fp16)[name = tensor<string, []>("obj_111_cast_fp16")];
            tensor<int32, [4]> var_1755 = const()[name = tensor<string, []>("op_1755"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_1756_cast_fp16 = reshape(shape = var_1755, x = value_31_cast_fp16)[name = tensor<string, []>("op_1756_cast_fp16")];
            tensor<bool, []> attn_31_transpose_x_0 = const()[name = tensor<string, []>("attn_31_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_31_transpose_y_0 = const()[name = tensor<string, []>("attn_31_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_31_cast_fp16 = matmul(transpose_x = attn_31_transpose_x_0, transpose_y = attn_31_transpose_y_0, x = var_1756_cast_fp16, y = obj_111_cast_fp16)[name = tensor<string, []>("attn_31_cast_fp16")];
            tensor<int32, [4]> var_1759 = const()[name = tensor<string, []>("op_1759"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_73_cast_fp16 = reshape(shape = var_1759, x = attn_31_cast_fp16)[name = tensor<string, []>("input_73_cast_fp16")];
            tensor<int32, [2]> var_1763 = const()[name = tensor<string, []>("op_1763"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1765 = const()[name = tensor<string, []>("op_1765"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_109_pad_type_0 = const()[name = tensor<string, []>("obj_109_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_109_pad_0 = const()[name = tensor<string, []>("obj_109_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_7_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_7_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(220941120)))];
            tensor<fp16, [768]> layers_7_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_7_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(222120832)))];
            tensor<fp16, [1, 768, 1, 1]> obj_109_cast_fp16 = conv(bias = layers_7_encoder_attn_o_proj_bias_to_fp16, dilations = var_1765, groups = var_1605, pad = obj_109_pad_0, pad_type = obj_109_pad_type_0, strides = var_1763, weight = layers_7_encoder_attn_o_proj_weight_to_fp16, x = input_73_cast_fp16)[name = tensor<string, []>("obj_109_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_47_cast_fp16 = add(x = inputs_45_cast_fp16, y = obj_109_cast_fp16)[name = tensor<string, []>("inputs_47_cast_fp16")];
            tensor<int32, [1]> var_1774 = const()[name = tensor<string, []>("op_1774"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_47_cast_fp16 = reduce_mean(axes = var_1774, keep_dims = var_1606, x = inputs_47_cast_fp16)[name = tensor<string, []>("channels_mean_47_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_47_cast_fp16 = sub(x = inputs_47_cast_fp16, y = channels_mean_47_cast_fp16)[name = tensor<string, []>("zero_mean_47_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_47_cast_fp16 = mul(x = zero_mean_47_cast_fp16, y = zero_mean_47_cast_fp16)[name = tensor<string, []>("zero_mean_sq_47_cast_fp16")];
            tensor<int32, [1]> var_1778 = const()[name = tensor<string, []>("op_1778"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1779_cast_fp16 = reduce_mean(axes = var_1778, keep_dims = var_1606, x = zero_mean_sq_47_cast_fp16)[name = tensor<string, []>("op_1779_cast_fp16")];
            tensor<fp16, []> var_1780_to_fp16 = const()[name = tensor<string, []>("op_1780_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1781_cast_fp16 = add(x = var_1779_cast_fp16, y = var_1780_to_fp16)[name = tensor<string, []>("op_1781_cast_fp16")];
            tensor<fp16, []> denom_47_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_47_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_47_cast_fp16 = rsqrt(epsilon = denom_47_epsilon_0_to_fp16, x = var_1781_cast_fp16)[name = tensor<string, []>("denom_47_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_47_cast_fp16 = mul(x = zero_mean_47_cast_fp16, y = denom_47_cast_fp16)[name = tensor<string, []>("out_47_cast_fp16")];
            tensor<fp16, [768]> input_75_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_75_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(222122432)))];
            tensor<fp16, [768]> input_75_beta_0_to_fp16 = const()[name = tensor<string, []>("input_75_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(222124032)))];
            tensor<fp16, []> input_75_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_75_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> input_75_cast_fp16 = batch_norm(beta = input_75_beta_0_to_fp16, epsilon = input_75_epsilon_0_to_fp16, gamma = input_75_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_47_cast_fp16)[name = tensor<string, []>("input_75_cast_fp16")];
            tensor<int32, [2]> var_1792 = const()[name = tensor<string, []>("op_1792"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1794 = const()[name = tensor<string, []>("op_1794"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_77_pad_type_0 = const()[name = tensor<string, []>("input_77_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_77_pad_0 = const()[name = tensor<string, []>("input_77_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [3072, 768, 1, 1]> layers_7_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_7_fc1_weight_to_fp16"), val = tensor<fp16, [3072, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(222125632)))];
            tensor<fp16, [3072]> layers_7_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_7_fc1_bias_to_fp16"), val = tensor<fp16, [3072]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(226844288)))];
            tensor<fp16, [1, 3072, 1, 1]> input_77_cast_fp16 = conv(bias = layers_7_fc1_bias_to_fp16, dilations = var_1794, groups = var_1605, pad = input_77_pad_0, pad_type = input_77_pad_type_0, strides = var_1792, weight = layers_7_fc1_weight_to_fp16, x = input_75_cast_fp16)[name = tensor<string, []>("input_77_cast_fp16")];
            tensor<string, []> input_79_mode_0 = const()[name = tensor<string, []>("input_79_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 3072, 1, 1]> input_79_cast_fp16 = gelu(mode = input_79_mode_0, x = input_77_cast_fp16)[name = tensor<string, []>("input_79_cast_fp16")];
            tensor<int32, [2]> var_1800 = const()[name = tensor<string, []>("op_1800"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1802 = const()[name = tensor<string, []>("op_1802"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_17_pad_type_0 = const()[name = tensor<string, []>("hidden_states_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_17_pad_0 = const()[name = tensor<string, []>("hidden_states_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 3072, 1, 1]> layers_7_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_7_fc2_weight_to_fp16"), val = tensor<fp16, [768, 3072, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(226850496)))];
            tensor<fp16, [768]> layers_7_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_7_fc2_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(231569152)))];
            tensor<fp16, [1, 768, 1, 1]> hidden_states_17_cast_fp16 = conv(bias = layers_7_fc2_bias_to_fp16, dilations = var_1802, groups = var_1605, pad = hidden_states_17_pad_0, pad_type = hidden_states_17_pad_type_0, strides = var_1800, weight = layers_7_fc2_weight_to_fp16, x = input_79_cast_fp16)[name = tensor<string, []>("hidden_states_17_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_49_cast_fp16 = add(x = inputs_47_cast_fp16, y = hidden_states_17_cast_fp16)[name = tensor<string, []>("inputs_49_cast_fp16")];
            tensor<int32, []> var_1816 = const()[name = tensor<string, []>("op_1816"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_1823 = const()[name = tensor<string, []>("op_1823"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_1824 = const()[name = tensor<string, []>("op_1824"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_1836 = const()[name = tensor<string, []>("op_1836"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_49_cast_fp16 = reduce_mean(axes = var_1836, keep_dims = var_1824, x = inputs_49_cast_fp16)[name = tensor<string, []>("channels_mean_49_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_49_cast_fp16 = sub(x = inputs_49_cast_fp16, y = channels_mean_49_cast_fp16)[name = tensor<string, []>("zero_mean_49_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_49_cast_fp16 = mul(x = zero_mean_49_cast_fp16, y = zero_mean_49_cast_fp16)[name = tensor<string, []>("zero_mean_sq_49_cast_fp16")];
            tensor<int32, [1]> var_1840 = const()[name = tensor<string, []>("op_1840"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1841_cast_fp16 = reduce_mean(axes = var_1840, keep_dims = var_1824, x = zero_mean_sq_49_cast_fp16)[name = tensor<string, []>("op_1841_cast_fp16")];
            tensor<fp16, []> var_1842_to_fp16 = const()[name = tensor<string, []>("op_1842_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1843_cast_fp16 = add(x = var_1841_cast_fp16, y = var_1842_to_fp16)[name = tensor<string, []>("op_1843_cast_fp16")];
            tensor<fp16, []> denom_49_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_49_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_49_cast_fp16 = rsqrt(epsilon = denom_49_epsilon_0_to_fp16, x = var_1843_cast_fp16)[name = tensor<string, []>("denom_49_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_49_cast_fp16 = mul(x = zero_mean_49_cast_fp16, y = denom_49_cast_fp16)[name = tensor<string, []>("out_49_cast_fp16")];
            tensor<fp16, [768]> obj_113_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_113_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(231570752)))];
            tensor<fp16, [768]> obj_113_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_113_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(231572352)))];
            tensor<fp16, []> obj_113_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_113_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_113_cast_fp16 = batch_norm(beta = obj_113_beta_0_to_fp16, epsilon = obj_113_epsilon_0_to_fp16, gamma = obj_113_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_49_cast_fp16)[name = tensor<string, []>("obj_113_cast_fp16")];
            tensor<int32, [2]> var_1858 = const()[name = tensor<string, []>("op_1858"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1860 = const()[name = tensor<string, []>("op_1860"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_33_pad_type_0 = const()[name = tensor<string, []>("query_33_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_33_pad_0 = const()[name = tensor<string, []>("query_33_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_8_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_8_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(231573952)))];
            tensor<fp16, [768]> layers_8_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_8_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(232753664)))];
            tensor<fp16, [1, 768, 1, 1]> query_33_cast_fp16 = conv(bias = layers_8_self_attn_q_proj_bias_to_fp16, dilations = var_1860, groups = var_1823, pad = query_33_pad_0, pad_type = query_33_pad_type_0, strides = var_1858, weight = layers_8_self_attn_q_proj_weight_to_fp16, x = obj_113_cast_fp16)[name = tensor<string, []>("query_33_cast_fp16")];
            tensor<int32, [2]> var_1864 = const()[name = tensor<string, []>("op_1864"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1866 = const()[name = tensor<string, []>("op_1866"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_17_pad_type_0 = const()[name = tensor<string, []>("current_key_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_17_pad_0 = const()[name = tensor<string, []>("current_key_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_8_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_8_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(232755264)))];
            tensor<fp16, [1, 768, 1, 1]> current_key_17_cast_fp16 = conv(dilations = var_1866, groups = var_1823, pad = current_key_17_pad_0, pad_type = current_key_17_pad_type_0, strides = var_1864, weight = layers_8_self_attn_k_proj_weight_to_fp16, x = obj_113_cast_fp16)[name = tensor<string, []>("current_key_17_cast_fp16")];
            tensor<int32, [2]> var_1871 = const()[name = tensor<string, []>("op_1871"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1873 = const()[name = tensor<string, []>("op_1873"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_17_pad_type_0 = const()[name = tensor<string, []>("current_value_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_17_pad_0 = const()[name = tensor<string, []>("current_value_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_8_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_8_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(233934976)))];
            tensor<fp16, [768]> layers_8_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_8_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(235114688)))];
            tensor<fp16, [1, 768, 1, 1]> current_value_17_cast_fp16 = conv(bias = layers_8_self_attn_v_proj_bias_to_fp16, dilations = var_1873, groups = var_1823, pad = current_value_17_pad_0, pad_type = current_value_17_pad_type_0, strides = var_1871, weight = layers_8_self_attn_v_proj_weight_to_fp16, x = obj_113_cast_fp16)[name = tensor<string, []>("current_value_17_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1880_cast_fp16 = mul(x = current_key_17_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_1880_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1882_cast_fp16 = mul(x = var_63_cast_fp16_8, y = var_161_cast_fp16)[name = tensor<string, []>("op_1882_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> key_33_cast_fp16 = add(x = var_1880_cast_fp16, y = var_1882_cast_fp16)[name = tensor<string, []>("key_33_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1884_cast_fp16 = mul(x = current_value_17_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_1884_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_1886_cast_fp16 = mul(x = var_78_cast_fp16_8, y = var_161_cast_fp16)[name = tensor<string, []>("op_1886_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> value_33_cast_fp16 = add(x = var_1884_cast_fp16, y = var_1886_cast_fp16)[name = tensor<string, []>("value_33_cast_fp16")];
            tensor<int32, [4]> var_1889 = const()[name = tensor<string, []>("op_1889"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_1890_cast_fp16 = reshape(shape = var_1889, x = query_33_cast_fp16)[name = tensor<string, []>("op_1890_cast_fp16")];
            tensor<fp16, []> var_1891_to_fp16 = const()[name = tensor<string, []>("op_1891_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_1892_cast_fp16 = mul(x = var_1890_cast_fp16, y = var_1891_to_fp16)[name = tensor<string, []>("op_1892_cast_fp16")];
            tensor<int32, [4]> var_1893 = const()[name = tensor<string, []>("op_1893"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_1894_cast_fp16 = reshape(shape = var_1893, x = key_33_cast_fp16)[name = tensor<string, []>("op_1894_cast_fp16")];
            tensor<bool, []> mh_w_49_transpose_x_0 = const()[name = tensor<string, []>("mh_w_49_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_49_transpose_y_0 = const()[name = tensor<string, []>("mh_w_49_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 224]> mh_w_49_cast_fp16 = matmul(transpose_x = mh_w_49_transpose_x_0, transpose_y = mh_w_49_transpose_y_0, x = var_1892_cast_fp16, y = var_1894_cast_fp16)[name = tensor<string, []>("mh_w_49_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> mh_w_51_cast_fp16 = add(x = mh_w_49_cast_fp16, y = var_179_cast_fp16)[name = tensor<string, []>("mh_w_51_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> var_1902_cast_fp16 = softmax(axis = var_1816, x = mh_w_51_cast_fp16)[name = tensor<string, []>("op_1902_cast_fp16")];
            tensor<int32, [4]> var_1903 = const()[name = tensor<string, []>("op_1903"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_1904_cast_fp16 = reshape(shape = var_1903, x = value_33_cast_fp16)[name = tensor<string, []>("op_1904_cast_fp16")];
            tensor<bool, []> attn_33_transpose_x_0 = const()[name = tensor<string, []>("attn_33_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_33_transpose_y_0 = const()[name = tensor<string, []>("attn_33_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_33_cast_fp16 = matmul(transpose_x = attn_33_transpose_x_0, transpose_y = attn_33_transpose_y_0, x = var_1904_cast_fp16, y = var_1902_cast_fp16)[name = tensor<string, []>("attn_33_cast_fp16")];
            tensor<int32, [4]> var_1907 = const()[name = tensor<string, []>("op_1907"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_81_cast_fp16 = reshape(shape = var_1907, x = attn_33_cast_fp16)[name = tensor<string, []>("input_81_cast_fp16")];
            tensor<int32, [2]> var_1911 = const()[name = tensor<string, []>("op_1911"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1913 = const()[name = tensor<string, []>("op_1913"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_119_pad_type_0 = const()[name = tensor<string, []>("obj_119_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_119_pad_0 = const()[name = tensor<string, []>("obj_119_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_8_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_8_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(235116288)))];
            tensor<fp16, [768]> layers_8_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_8_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(236296000)))];
            tensor<fp16, [1, 768, 1, 1]> obj_119_cast_fp16 = conv(bias = layers_8_self_attn_o_proj_bias_to_fp16, dilations = var_1913, groups = var_1823, pad = obj_119_pad_0, pad_type = obj_119_pad_type_0, strides = var_1911, weight = layers_8_self_attn_o_proj_weight_to_fp16, x = input_81_cast_fp16)[name = tensor<string, []>("obj_119_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_51_cast_fp16 = add(x = inputs_49_cast_fp16, y = obj_119_cast_fp16)[name = tensor<string, []>("inputs_51_cast_fp16")];
            tensor<int32, [1]> var_1923 = const()[name = tensor<string, []>("op_1923"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_51_cast_fp16 = reduce_mean(axes = var_1923, keep_dims = var_1824, x = inputs_51_cast_fp16)[name = tensor<string, []>("channels_mean_51_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_51_cast_fp16 = sub(x = inputs_51_cast_fp16, y = channels_mean_51_cast_fp16)[name = tensor<string, []>("zero_mean_51_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_51_cast_fp16 = mul(x = zero_mean_51_cast_fp16, y = zero_mean_51_cast_fp16)[name = tensor<string, []>("zero_mean_sq_51_cast_fp16")];
            tensor<int32, [1]> var_1927 = const()[name = tensor<string, []>("op_1927"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1928_cast_fp16 = reduce_mean(axes = var_1927, keep_dims = var_1824, x = zero_mean_sq_51_cast_fp16)[name = tensor<string, []>("op_1928_cast_fp16")];
            tensor<fp16, []> var_1929_to_fp16 = const()[name = tensor<string, []>("op_1929_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1930_cast_fp16 = add(x = var_1928_cast_fp16, y = var_1929_to_fp16)[name = tensor<string, []>("op_1930_cast_fp16")];
            tensor<fp16, []> denom_51_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_51_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_51_cast_fp16 = rsqrt(epsilon = denom_51_epsilon_0_to_fp16, x = var_1930_cast_fp16)[name = tensor<string, []>("denom_51_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_51_cast_fp16 = mul(x = zero_mean_51_cast_fp16, y = denom_51_cast_fp16)[name = tensor<string, []>("out_51_cast_fp16")];
            tensor<fp16, [768]> obj_121_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_121_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(236297600)))];
            tensor<fp16, [768]> obj_121_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_121_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(236299200)))];
            tensor<fp16, []> obj_121_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_121_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_121_cast_fp16 = batch_norm(beta = obj_121_beta_0_to_fp16, epsilon = obj_121_epsilon_0_to_fp16, gamma = obj_121_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_51_cast_fp16)[name = tensor<string, []>("obj_121_cast_fp16")];
            tensor<int32, [2]> var_1945 = const()[name = tensor<string, []>("op_1945"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1947 = const()[name = tensor<string, []>("op_1947"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_35_pad_type_0 = const()[name = tensor<string, []>("query_35_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_35_pad_0 = const()[name = tensor<string, []>("query_35_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_8_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_8_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(236300800)))];
            tensor<fp16, [768]> layers_8_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_8_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(237480512)))];
            tensor<fp16, [1, 768, 1, 1]> query_35_cast_fp16 = conv(bias = layers_8_encoder_attn_q_proj_bias_to_fp16, dilations = var_1947, groups = var_1823, pad = query_35_pad_0, pad_type = query_35_pad_type_0, strides = var_1945, weight = layers_8_encoder_attn_q_proj_weight_to_fp16, x = obj_121_cast_fp16)[name = tensor<string, []>("query_35_cast_fp16")];
            tensor<int32, [2]> var_1951 = const()[name = tensor<string, []>("op_1951"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1953 = const()[name = tensor<string, []>("op_1953"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_35_pad_type_0 = const()[name = tensor<string, []>("key_35_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_35_pad_0 = const()[name = tensor<string, []>("key_35_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_8_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_8_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(237482112)))];
            tensor<fp16, [1, 768, 1, 1500]> key_35_cast_fp16 = conv(dilations = var_1953, groups = var_1823, pad = key_35_pad_0, pad_type = key_35_pad_type_0, strides = var_1951, weight = layers_8_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_35_cast_fp16")];
            tensor<int32, [2]> var_1958 = const()[name = tensor<string, []>("op_1958"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1960 = const()[name = tensor<string, []>("op_1960"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_35_pad_type_0 = const()[name = tensor<string, []>("value_35_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_35_pad_0 = const()[name = tensor<string, []>("value_35_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_8_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_8_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(238661824)))];
            tensor<fp16, [768]> layers_8_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_8_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(239841536)))];
            tensor<fp16, [1, 768, 1, 1500]> value_35_cast_fp16 = conv(bias = layers_8_encoder_attn_v_proj_bias_to_fp16, dilations = var_1960, groups = var_1823, pad = value_35_pad_0, pad_type = value_35_pad_type_0, strides = var_1958, weight = layers_8_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_35_cast_fp16")];
            tensor<int32, [4]> var_1964 = const()[name = tensor<string, []>("op_1964"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_1965_cast_fp16 = reshape(shape = var_1964, x = query_35_cast_fp16)[name = tensor<string, []>("op_1965_cast_fp16")];
            tensor<fp16, []> var_1966_to_fp16 = const()[name = tensor<string, []>("op_1966_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_1967_cast_fp16 = mul(x = var_1965_cast_fp16, y = var_1966_to_fp16)[name = tensor<string, []>("op_1967_cast_fp16")];
            tensor<int32, [4]> var_1968 = const()[name = tensor<string, []>("op_1968"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_1969_cast_fp16 = reshape(shape = var_1968, x = key_35_cast_fp16)[name = tensor<string, []>("op_1969_cast_fp16")];
            tensor<bool, []> mh_w_53_transpose_x_0 = const()[name = tensor<string, []>("mh_w_53_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_53_transpose_y_0 = const()[name = tensor<string, []>("mh_w_53_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 1500]> mh_w_53_cast_fp16 = matmul(transpose_x = mh_w_53_transpose_x_0, transpose_y = mh_w_53_transpose_y_0, x = var_1967_cast_fp16, y = var_1969_cast_fp16)[name = tensor<string, []>("mh_w_53_cast_fp16")];
            tensor<fp16, [1, 12, 1, 1500]> obj_125_cast_fp16 = softmax(axis = var_1816, x = mh_w_53_cast_fp16)[name = tensor<string, []>("obj_125_cast_fp16")];
            tensor<int32, [4]> var_1973 = const()[name = tensor<string, []>("op_1973"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_1974_cast_fp16 = reshape(shape = var_1973, x = value_35_cast_fp16)[name = tensor<string, []>("op_1974_cast_fp16")];
            tensor<bool, []> attn_35_transpose_x_0 = const()[name = tensor<string, []>("attn_35_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_35_transpose_y_0 = const()[name = tensor<string, []>("attn_35_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_35_cast_fp16 = matmul(transpose_x = attn_35_transpose_x_0, transpose_y = attn_35_transpose_y_0, x = var_1974_cast_fp16, y = obj_125_cast_fp16)[name = tensor<string, []>("attn_35_cast_fp16")];
            tensor<int32, [4]> var_1977 = const()[name = tensor<string, []>("op_1977"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_83_cast_fp16 = reshape(shape = var_1977, x = attn_35_cast_fp16)[name = tensor<string, []>("input_83_cast_fp16")];
            tensor<int32, [2]> var_1981 = const()[name = tensor<string, []>("op_1981"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1983 = const()[name = tensor<string, []>("op_1983"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_123_pad_type_0 = const()[name = tensor<string, []>("obj_123_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_123_pad_0 = const()[name = tensor<string, []>("obj_123_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_8_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_8_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(239843136)))];
            tensor<fp16, [768]> layers_8_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_8_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(241022848)))];
            tensor<fp16, [1, 768, 1, 1]> obj_123_cast_fp16 = conv(bias = layers_8_encoder_attn_o_proj_bias_to_fp16, dilations = var_1983, groups = var_1823, pad = obj_123_pad_0, pad_type = obj_123_pad_type_0, strides = var_1981, weight = layers_8_encoder_attn_o_proj_weight_to_fp16, x = input_83_cast_fp16)[name = tensor<string, []>("obj_123_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_53_cast_fp16 = add(x = inputs_51_cast_fp16, y = obj_123_cast_fp16)[name = tensor<string, []>("inputs_53_cast_fp16")];
            tensor<int32, [1]> var_1992 = const()[name = tensor<string, []>("op_1992"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_53_cast_fp16 = reduce_mean(axes = var_1992, keep_dims = var_1824, x = inputs_53_cast_fp16)[name = tensor<string, []>("channels_mean_53_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_53_cast_fp16 = sub(x = inputs_53_cast_fp16, y = channels_mean_53_cast_fp16)[name = tensor<string, []>("zero_mean_53_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_53_cast_fp16 = mul(x = zero_mean_53_cast_fp16, y = zero_mean_53_cast_fp16)[name = tensor<string, []>("zero_mean_sq_53_cast_fp16")];
            tensor<int32, [1]> var_1996 = const()[name = tensor<string, []>("op_1996"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_1997_cast_fp16 = reduce_mean(axes = var_1996, keep_dims = var_1824, x = zero_mean_sq_53_cast_fp16)[name = tensor<string, []>("op_1997_cast_fp16")];
            tensor<fp16, []> var_1998_to_fp16 = const()[name = tensor<string, []>("op_1998_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_1999_cast_fp16 = add(x = var_1997_cast_fp16, y = var_1998_to_fp16)[name = tensor<string, []>("op_1999_cast_fp16")];
            tensor<fp16, []> denom_53_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_53_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_53_cast_fp16 = rsqrt(epsilon = denom_53_epsilon_0_to_fp16, x = var_1999_cast_fp16)[name = tensor<string, []>("denom_53_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_53_cast_fp16 = mul(x = zero_mean_53_cast_fp16, y = denom_53_cast_fp16)[name = tensor<string, []>("out_53_cast_fp16")];
            tensor<fp16, [768]> input_85_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_85_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(241024448)))];
            tensor<fp16, [768]> input_85_beta_0_to_fp16 = const()[name = tensor<string, []>("input_85_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(241026048)))];
            tensor<fp16, []> input_85_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_85_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> input_85_cast_fp16 = batch_norm(beta = input_85_beta_0_to_fp16, epsilon = input_85_epsilon_0_to_fp16, gamma = input_85_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_53_cast_fp16)[name = tensor<string, []>("input_85_cast_fp16")];
            tensor<int32, [2]> var_2010 = const()[name = tensor<string, []>("op_2010"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2012 = const()[name = tensor<string, []>("op_2012"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_87_pad_type_0 = const()[name = tensor<string, []>("input_87_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_87_pad_0 = const()[name = tensor<string, []>("input_87_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [3072, 768, 1, 1]> layers_8_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_8_fc1_weight_to_fp16"), val = tensor<fp16, [3072, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(241027648)))];
            tensor<fp16, [3072]> layers_8_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_8_fc1_bias_to_fp16"), val = tensor<fp16, [3072]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(245746304)))];
            tensor<fp16, [1, 3072, 1, 1]> input_87_cast_fp16 = conv(bias = layers_8_fc1_bias_to_fp16, dilations = var_2012, groups = var_1823, pad = input_87_pad_0, pad_type = input_87_pad_type_0, strides = var_2010, weight = layers_8_fc1_weight_to_fp16, x = input_85_cast_fp16)[name = tensor<string, []>("input_87_cast_fp16")];
            tensor<string, []> input_89_mode_0 = const()[name = tensor<string, []>("input_89_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 3072, 1, 1]> input_89_cast_fp16 = gelu(mode = input_89_mode_0, x = input_87_cast_fp16)[name = tensor<string, []>("input_89_cast_fp16")];
            tensor<int32, [2]> var_2018 = const()[name = tensor<string, []>("op_2018"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2020 = const()[name = tensor<string, []>("op_2020"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_19_pad_type_0 = const()[name = tensor<string, []>("hidden_states_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_19_pad_0 = const()[name = tensor<string, []>("hidden_states_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 3072, 1, 1]> layers_8_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_8_fc2_weight_to_fp16"), val = tensor<fp16, [768, 3072, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(245752512)))];
            tensor<fp16, [768]> layers_8_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_8_fc2_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(250471168)))];
            tensor<fp16, [1, 768, 1, 1]> hidden_states_19_cast_fp16 = conv(bias = layers_8_fc2_bias_to_fp16, dilations = var_2020, groups = var_1823, pad = hidden_states_19_pad_0, pad_type = hidden_states_19_pad_type_0, strides = var_2018, weight = layers_8_fc2_weight_to_fp16, x = input_89_cast_fp16)[name = tensor<string, []>("hidden_states_19_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_55_cast_fp16 = add(x = inputs_53_cast_fp16, y = hidden_states_19_cast_fp16)[name = tensor<string, []>("inputs_55_cast_fp16")];
            tensor<int32, []> var_2034 = const()[name = tensor<string, []>("op_2034"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_2041 = const()[name = tensor<string, []>("op_2041"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_2042 = const()[name = tensor<string, []>("op_2042"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_2054 = const()[name = tensor<string, []>("op_2054"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_55_cast_fp16 = reduce_mean(axes = var_2054, keep_dims = var_2042, x = inputs_55_cast_fp16)[name = tensor<string, []>("channels_mean_55_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_55_cast_fp16 = sub(x = inputs_55_cast_fp16, y = channels_mean_55_cast_fp16)[name = tensor<string, []>("zero_mean_55_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_55_cast_fp16 = mul(x = zero_mean_55_cast_fp16, y = zero_mean_55_cast_fp16)[name = tensor<string, []>("zero_mean_sq_55_cast_fp16")];
            tensor<int32, [1]> var_2058 = const()[name = tensor<string, []>("op_2058"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_2059_cast_fp16 = reduce_mean(axes = var_2058, keep_dims = var_2042, x = zero_mean_sq_55_cast_fp16)[name = tensor<string, []>("op_2059_cast_fp16")];
            tensor<fp16, []> var_2060_to_fp16 = const()[name = tensor<string, []>("op_2060_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_2061_cast_fp16 = add(x = var_2059_cast_fp16, y = var_2060_to_fp16)[name = tensor<string, []>("op_2061_cast_fp16")];
            tensor<fp16, []> denom_55_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_55_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_55_cast_fp16 = rsqrt(epsilon = denom_55_epsilon_0_to_fp16, x = var_2061_cast_fp16)[name = tensor<string, []>("denom_55_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_55_cast_fp16 = mul(x = zero_mean_55_cast_fp16, y = denom_55_cast_fp16)[name = tensor<string, []>("out_55_cast_fp16")];
            tensor<fp16, [768]> obj_127_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_127_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(250472768)))];
            tensor<fp16, [768]> obj_127_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_127_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(250474368)))];
            tensor<fp16, []> obj_127_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_127_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_127_cast_fp16 = batch_norm(beta = obj_127_beta_0_to_fp16, epsilon = obj_127_epsilon_0_to_fp16, gamma = obj_127_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_55_cast_fp16)[name = tensor<string, []>("obj_127_cast_fp16")];
            tensor<int32, [2]> var_2076 = const()[name = tensor<string, []>("op_2076"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2078 = const()[name = tensor<string, []>("op_2078"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_37_pad_type_0 = const()[name = tensor<string, []>("query_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_37_pad_0 = const()[name = tensor<string, []>("query_37_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_9_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_9_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(250475968)))];
            tensor<fp16, [768]> layers_9_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_9_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(251655680)))];
            tensor<fp16, [1, 768, 1, 1]> query_37_cast_fp16 = conv(bias = layers_9_self_attn_q_proj_bias_to_fp16, dilations = var_2078, groups = var_2041, pad = query_37_pad_0, pad_type = query_37_pad_type_0, strides = var_2076, weight = layers_9_self_attn_q_proj_weight_to_fp16, x = obj_127_cast_fp16)[name = tensor<string, []>("query_37_cast_fp16")];
            tensor<int32, [2]> var_2082 = const()[name = tensor<string, []>("op_2082"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2084 = const()[name = tensor<string, []>("op_2084"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_19_pad_type_0 = const()[name = tensor<string, []>("current_key_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_19_pad_0 = const()[name = tensor<string, []>("current_key_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_9_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_9_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(251657280)))];
            tensor<fp16, [1, 768, 1, 1]> current_key_19_cast_fp16 = conv(dilations = var_2084, groups = var_2041, pad = current_key_19_pad_0, pad_type = current_key_19_pad_type_0, strides = var_2082, weight = layers_9_self_attn_k_proj_weight_to_fp16, x = obj_127_cast_fp16)[name = tensor<string, []>("current_key_19_cast_fp16")];
            tensor<int32, [2]> var_2089 = const()[name = tensor<string, []>("op_2089"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2091 = const()[name = tensor<string, []>("op_2091"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_19_pad_type_0 = const()[name = tensor<string, []>("current_value_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_19_pad_0 = const()[name = tensor<string, []>("current_value_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_9_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_9_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(252836992)))];
            tensor<fp16, [768]> layers_9_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_9_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(254016704)))];
            tensor<fp16, [1, 768, 1, 1]> current_value_19_cast_fp16 = conv(bias = layers_9_self_attn_v_proj_bias_to_fp16, dilations = var_2091, groups = var_2041, pad = current_value_19_pad_0, pad_type = current_value_19_pad_type_0, strides = var_2089, weight = layers_9_self_attn_v_proj_weight_to_fp16, x = obj_127_cast_fp16)[name = tensor<string, []>("current_value_19_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_2098_cast_fp16 = mul(x = current_key_19_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_2098_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_2100_cast_fp16 = mul(x = var_63_cast_fp16_9, y = var_161_cast_fp16)[name = tensor<string, []>("op_2100_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> key_37_cast_fp16 = add(x = var_2098_cast_fp16, y = var_2100_cast_fp16)[name = tensor<string, []>("key_37_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_2102_cast_fp16 = mul(x = current_value_19_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_2102_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_2104_cast_fp16 = mul(x = var_78_cast_fp16_9, y = var_161_cast_fp16)[name = tensor<string, []>("op_2104_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> value_37_cast_fp16 = add(x = var_2102_cast_fp16, y = var_2104_cast_fp16)[name = tensor<string, []>("value_37_cast_fp16")];
            tensor<int32, [4]> var_2107 = const()[name = tensor<string, []>("op_2107"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_2108_cast_fp16 = reshape(shape = var_2107, x = query_37_cast_fp16)[name = tensor<string, []>("op_2108_cast_fp16")];
            tensor<fp16, []> var_2109_to_fp16 = const()[name = tensor<string, []>("op_2109_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_2110_cast_fp16 = mul(x = var_2108_cast_fp16, y = var_2109_to_fp16)[name = tensor<string, []>("op_2110_cast_fp16")];
            tensor<int32, [4]> var_2111 = const()[name = tensor<string, []>("op_2111"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_2112_cast_fp16 = reshape(shape = var_2111, x = key_37_cast_fp16)[name = tensor<string, []>("op_2112_cast_fp16")];
            tensor<bool, []> mh_w_55_transpose_x_0 = const()[name = tensor<string, []>("mh_w_55_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_55_transpose_y_0 = const()[name = tensor<string, []>("mh_w_55_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 224]> mh_w_55_cast_fp16 = matmul(transpose_x = mh_w_55_transpose_x_0, transpose_y = mh_w_55_transpose_y_0, x = var_2110_cast_fp16, y = var_2112_cast_fp16)[name = tensor<string, []>("mh_w_55_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> mh_w_57_cast_fp16 = add(x = mh_w_55_cast_fp16, y = var_179_cast_fp16)[name = tensor<string, []>("mh_w_57_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> var_2120_cast_fp16 = softmax(axis = var_2034, x = mh_w_57_cast_fp16)[name = tensor<string, []>("op_2120_cast_fp16")];
            tensor<int32, [4]> var_2121 = const()[name = tensor<string, []>("op_2121"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_2122_cast_fp16 = reshape(shape = var_2121, x = value_37_cast_fp16)[name = tensor<string, []>("op_2122_cast_fp16")];
            tensor<bool, []> attn_37_transpose_x_0 = const()[name = tensor<string, []>("attn_37_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_37_transpose_y_0 = const()[name = tensor<string, []>("attn_37_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_37_cast_fp16 = matmul(transpose_x = attn_37_transpose_x_0, transpose_y = attn_37_transpose_y_0, x = var_2122_cast_fp16, y = var_2120_cast_fp16)[name = tensor<string, []>("attn_37_cast_fp16")];
            tensor<int32, [4]> var_2125 = const()[name = tensor<string, []>("op_2125"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_91_cast_fp16 = reshape(shape = var_2125, x = attn_37_cast_fp16)[name = tensor<string, []>("input_91_cast_fp16")];
            tensor<int32, [2]> var_2129 = const()[name = tensor<string, []>("op_2129"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2131 = const()[name = tensor<string, []>("op_2131"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_133_pad_type_0 = const()[name = tensor<string, []>("obj_133_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_133_pad_0 = const()[name = tensor<string, []>("obj_133_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_9_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_9_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(254018304)))];
            tensor<fp16, [768]> layers_9_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_9_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(255198016)))];
            tensor<fp16, [1, 768, 1, 1]> obj_133_cast_fp16 = conv(bias = layers_9_self_attn_o_proj_bias_to_fp16, dilations = var_2131, groups = var_2041, pad = obj_133_pad_0, pad_type = obj_133_pad_type_0, strides = var_2129, weight = layers_9_self_attn_o_proj_weight_to_fp16, x = input_91_cast_fp16)[name = tensor<string, []>("obj_133_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_57_cast_fp16 = add(x = inputs_55_cast_fp16, y = obj_133_cast_fp16)[name = tensor<string, []>("inputs_57_cast_fp16")];
            tensor<int32, [1]> var_2141 = const()[name = tensor<string, []>("op_2141"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_57_cast_fp16 = reduce_mean(axes = var_2141, keep_dims = var_2042, x = inputs_57_cast_fp16)[name = tensor<string, []>("channels_mean_57_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_57_cast_fp16 = sub(x = inputs_57_cast_fp16, y = channels_mean_57_cast_fp16)[name = tensor<string, []>("zero_mean_57_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_57_cast_fp16 = mul(x = zero_mean_57_cast_fp16, y = zero_mean_57_cast_fp16)[name = tensor<string, []>("zero_mean_sq_57_cast_fp16")];
            tensor<int32, [1]> var_2145 = const()[name = tensor<string, []>("op_2145"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_2146_cast_fp16 = reduce_mean(axes = var_2145, keep_dims = var_2042, x = zero_mean_sq_57_cast_fp16)[name = tensor<string, []>("op_2146_cast_fp16")];
            tensor<fp16, []> var_2147_to_fp16 = const()[name = tensor<string, []>("op_2147_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_2148_cast_fp16 = add(x = var_2146_cast_fp16, y = var_2147_to_fp16)[name = tensor<string, []>("op_2148_cast_fp16")];
            tensor<fp16, []> denom_57_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_57_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_57_cast_fp16 = rsqrt(epsilon = denom_57_epsilon_0_to_fp16, x = var_2148_cast_fp16)[name = tensor<string, []>("denom_57_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_57_cast_fp16 = mul(x = zero_mean_57_cast_fp16, y = denom_57_cast_fp16)[name = tensor<string, []>("out_57_cast_fp16")];
            tensor<fp16, [768]> obj_135_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_135_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(255199616)))];
            tensor<fp16, [768]> obj_135_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_135_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(255201216)))];
            tensor<fp16, []> obj_135_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_135_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_135_cast_fp16 = batch_norm(beta = obj_135_beta_0_to_fp16, epsilon = obj_135_epsilon_0_to_fp16, gamma = obj_135_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_57_cast_fp16)[name = tensor<string, []>("obj_135_cast_fp16")];
            tensor<int32, [2]> var_2163 = const()[name = tensor<string, []>("op_2163"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2165 = const()[name = tensor<string, []>("op_2165"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_39_pad_type_0 = const()[name = tensor<string, []>("query_39_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_39_pad_0 = const()[name = tensor<string, []>("query_39_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_9_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_9_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(255202816)))];
            tensor<fp16, [768]> layers_9_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_9_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(256382528)))];
            tensor<fp16, [1, 768, 1, 1]> query_39_cast_fp16 = conv(bias = layers_9_encoder_attn_q_proj_bias_to_fp16, dilations = var_2165, groups = var_2041, pad = query_39_pad_0, pad_type = query_39_pad_type_0, strides = var_2163, weight = layers_9_encoder_attn_q_proj_weight_to_fp16, x = obj_135_cast_fp16)[name = tensor<string, []>("query_39_cast_fp16")];
            tensor<int32, [2]> var_2169 = const()[name = tensor<string, []>("op_2169"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2171 = const()[name = tensor<string, []>("op_2171"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_39_pad_type_0 = const()[name = tensor<string, []>("key_39_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_39_pad_0 = const()[name = tensor<string, []>("key_39_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_9_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_9_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(256384128)))];
            tensor<fp16, [1, 768, 1, 1500]> key_39_cast_fp16 = conv(dilations = var_2171, groups = var_2041, pad = key_39_pad_0, pad_type = key_39_pad_type_0, strides = var_2169, weight = layers_9_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_39_cast_fp16")];
            tensor<int32, [2]> var_2176 = const()[name = tensor<string, []>("op_2176"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2178 = const()[name = tensor<string, []>("op_2178"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_39_pad_type_0 = const()[name = tensor<string, []>("value_39_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_39_pad_0 = const()[name = tensor<string, []>("value_39_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_9_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_9_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(257563840)))];
            tensor<fp16, [768]> layers_9_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_9_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(258743552)))];
            tensor<fp16, [1, 768, 1, 1500]> value_39_cast_fp16 = conv(bias = layers_9_encoder_attn_v_proj_bias_to_fp16, dilations = var_2178, groups = var_2041, pad = value_39_pad_0, pad_type = value_39_pad_type_0, strides = var_2176, weight = layers_9_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_39_cast_fp16")];
            tensor<int32, [4]> var_2182 = const()[name = tensor<string, []>("op_2182"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_2183_cast_fp16 = reshape(shape = var_2182, x = query_39_cast_fp16)[name = tensor<string, []>("op_2183_cast_fp16")];
            tensor<fp16, []> var_2184_to_fp16 = const()[name = tensor<string, []>("op_2184_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_2185_cast_fp16 = mul(x = var_2183_cast_fp16, y = var_2184_to_fp16)[name = tensor<string, []>("op_2185_cast_fp16")];
            tensor<int32, [4]> var_2186 = const()[name = tensor<string, []>("op_2186"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_2187_cast_fp16 = reshape(shape = var_2186, x = key_39_cast_fp16)[name = tensor<string, []>("op_2187_cast_fp16")];
            tensor<bool, []> mh_w_59_transpose_x_0 = const()[name = tensor<string, []>("mh_w_59_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_59_transpose_y_0 = const()[name = tensor<string, []>("mh_w_59_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 1500]> mh_w_59_cast_fp16 = matmul(transpose_x = mh_w_59_transpose_x_0, transpose_y = mh_w_59_transpose_y_0, x = var_2185_cast_fp16, y = var_2187_cast_fp16)[name = tensor<string, []>("mh_w_59_cast_fp16")];
            tensor<fp16, [1, 12, 1, 1500]> obj_139_cast_fp16 = softmax(axis = var_2034, x = mh_w_59_cast_fp16)[name = tensor<string, []>("obj_139_cast_fp16")];
            tensor<int32, [4]> var_2191 = const()[name = tensor<string, []>("op_2191"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_2192_cast_fp16 = reshape(shape = var_2191, x = value_39_cast_fp16)[name = tensor<string, []>("op_2192_cast_fp16")];
            tensor<bool, []> attn_39_transpose_x_0 = const()[name = tensor<string, []>("attn_39_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_39_transpose_y_0 = const()[name = tensor<string, []>("attn_39_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_39_cast_fp16 = matmul(transpose_x = attn_39_transpose_x_0, transpose_y = attn_39_transpose_y_0, x = var_2192_cast_fp16, y = obj_139_cast_fp16)[name = tensor<string, []>("attn_39_cast_fp16")];
            tensor<int32, [4]> var_2195 = const()[name = tensor<string, []>("op_2195"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_93_cast_fp16 = reshape(shape = var_2195, x = attn_39_cast_fp16)[name = tensor<string, []>("input_93_cast_fp16")];
            tensor<int32, [2]> var_2199 = const()[name = tensor<string, []>("op_2199"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2201 = const()[name = tensor<string, []>("op_2201"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_137_pad_type_0 = const()[name = tensor<string, []>("obj_137_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_137_pad_0 = const()[name = tensor<string, []>("obj_137_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_9_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_9_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(258745152)))];
            tensor<fp16, [768]> layers_9_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_9_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(259924864)))];
            tensor<fp16, [1, 768, 1, 1]> obj_137_cast_fp16 = conv(bias = layers_9_encoder_attn_o_proj_bias_to_fp16, dilations = var_2201, groups = var_2041, pad = obj_137_pad_0, pad_type = obj_137_pad_type_0, strides = var_2199, weight = layers_9_encoder_attn_o_proj_weight_to_fp16, x = input_93_cast_fp16)[name = tensor<string, []>("obj_137_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_59_cast_fp16 = add(x = inputs_57_cast_fp16, y = obj_137_cast_fp16)[name = tensor<string, []>("inputs_59_cast_fp16")];
            tensor<int32, [1]> var_2210 = const()[name = tensor<string, []>("op_2210"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_59_cast_fp16 = reduce_mean(axes = var_2210, keep_dims = var_2042, x = inputs_59_cast_fp16)[name = tensor<string, []>("channels_mean_59_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_59_cast_fp16 = sub(x = inputs_59_cast_fp16, y = channels_mean_59_cast_fp16)[name = tensor<string, []>("zero_mean_59_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_59_cast_fp16 = mul(x = zero_mean_59_cast_fp16, y = zero_mean_59_cast_fp16)[name = tensor<string, []>("zero_mean_sq_59_cast_fp16")];
            tensor<int32, [1]> var_2214 = const()[name = tensor<string, []>("op_2214"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_2215_cast_fp16 = reduce_mean(axes = var_2214, keep_dims = var_2042, x = zero_mean_sq_59_cast_fp16)[name = tensor<string, []>("op_2215_cast_fp16")];
            tensor<fp16, []> var_2216_to_fp16 = const()[name = tensor<string, []>("op_2216_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_2217_cast_fp16 = add(x = var_2215_cast_fp16, y = var_2216_to_fp16)[name = tensor<string, []>("op_2217_cast_fp16")];
            tensor<fp16, []> denom_59_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_59_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_59_cast_fp16 = rsqrt(epsilon = denom_59_epsilon_0_to_fp16, x = var_2217_cast_fp16)[name = tensor<string, []>("denom_59_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_59_cast_fp16 = mul(x = zero_mean_59_cast_fp16, y = denom_59_cast_fp16)[name = tensor<string, []>("out_59_cast_fp16")];
            tensor<fp16, [768]> input_95_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_95_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(259926464)))];
            tensor<fp16, [768]> input_95_beta_0_to_fp16 = const()[name = tensor<string, []>("input_95_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(259928064)))];
            tensor<fp16, []> input_95_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_95_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> input_95_cast_fp16 = batch_norm(beta = input_95_beta_0_to_fp16, epsilon = input_95_epsilon_0_to_fp16, gamma = input_95_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_59_cast_fp16)[name = tensor<string, []>("input_95_cast_fp16")];
            tensor<int32, [2]> var_2228 = const()[name = tensor<string, []>("op_2228"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2230 = const()[name = tensor<string, []>("op_2230"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_97_pad_type_0 = const()[name = tensor<string, []>("input_97_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_97_pad_0 = const()[name = tensor<string, []>("input_97_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [3072, 768, 1, 1]> layers_9_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_9_fc1_weight_to_fp16"), val = tensor<fp16, [3072, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(259929664)))];
            tensor<fp16, [3072]> layers_9_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_9_fc1_bias_to_fp16"), val = tensor<fp16, [3072]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(264648320)))];
            tensor<fp16, [1, 3072, 1, 1]> input_97_cast_fp16 = conv(bias = layers_9_fc1_bias_to_fp16, dilations = var_2230, groups = var_2041, pad = input_97_pad_0, pad_type = input_97_pad_type_0, strides = var_2228, weight = layers_9_fc1_weight_to_fp16, x = input_95_cast_fp16)[name = tensor<string, []>("input_97_cast_fp16")];
            tensor<string, []> input_99_mode_0 = const()[name = tensor<string, []>("input_99_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 3072, 1, 1]> input_99_cast_fp16 = gelu(mode = input_99_mode_0, x = input_97_cast_fp16)[name = tensor<string, []>("input_99_cast_fp16")];
            tensor<int32, [2]> var_2236 = const()[name = tensor<string, []>("op_2236"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2238 = const()[name = tensor<string, []>("op_2238"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_21_pad_type_0 = const()[name = tensor<string, []>("hidden_states_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_21_pad_0 = const()[name = tensor<string, []>("hidden_states_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 3072, 1, 1]> layers_9_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_9_fc2_weight_to_fp16"), val = tensor<fp16, [768, 3072, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(264654528)))];
            tensor<fp16, [768]> layers_9_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_9_fc2_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(269373184)))];
            tensor<fp16, [1, 768, 1, 1]> hidden_states_21_cast_fp16 = conv(bias = layers_9_fc2_bias_to_fp16, dilations = var_2238, groups = var_2041, pad = hidden_states_21_pad_0, pad_type = hidden_states_21_pad_type_0, strides = var_2236, weight = layers_9_fc2_weight_to_fp16, x = input_99_cast_fp16)[name = tensor<string, []>("hidden_states_21_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_61_cast_fp16 = add(x = inputs_59_cast_fp16, y = hidden_states_21_cast_fp16)[name = tensor<string, []>("inputs_61_cast_fp16")];
            tensor<int32, []> var_2252 = const()[name = tensor<string, []>("op_2252"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_2259 = const()[name = tensor<string, []>("op_2259"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_2260 = const()[name = tensor<string, []>("op_2260"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_2272 = const()[name = tensor<string, []>("op_2272"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_61_cast_fp16 = reduce_mean(axes = var_2272, keep_dims = var_2260, x = inputs_61_cast_fp16)[name = tensor<string, []>("channels_mean_61_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_61_cast_fp16 = sub(x = inputs_61_cast_fp16, y = channels_mean_61_cast_fp16)[name = tensor<string, []>("zero_mean_61_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_61_cast_fp16 = mul(x = zero_mean_61_cast_fp16, y = zero_mean_61_cast_fp16)[name = tensor<string, []>("zero_mean_sq_61_cast_fp16")];
            tensor<int32, [1]> var_2276 = const()[name = tensor<string, []>("op_2276"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_2277_cast_fp16 = reduce_mean(axes = var_2276, keep_dims = var_2260, x = zero_mean_sq_61_cast_fp16)[name = tensor<string, []>("op_2277_cast_fp16")];
            tensor<fp16, []> var_2278_to_fp16 = const()[name = tensor<string, []>("op_2278_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_2279_cast_fp16 = add(x = var_2277_cast_fp16, y = var_2278_to_fp16)[name = tensor<string, []>("op_2279_cast_fp16")];
            tensor<fp16, []> denom_61_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_61_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_61_cast_fp16 = rsqrt(epsilon = denom_61_epsilon_0_to_fp16, x = var_2279_cast_fp16)[name = tensor<string, []>("denom_61_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_61_cast_fp16 = mul(x = zero_mean_61_cast_fp16, y = denom_61_cast_fp16)[name = tensor<string, []>("out_61_cast_fp16")];
            tensor<fp16, [768]> obj_141_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_141_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(269374784)))];
            tensor<fp16, [768]> obj_141_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_141_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(269376384)))];
            tensor<fp16, []> obj_141_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_141_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_141_cast_fp16 = batch_norm(beta = obj_141_beta_0_to_fp16, epsilon = obj_141_epsilon_0_to_fp16, gamma = obj_141_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_61_cast_fp16)[name = tensor<string, []>("obj_141_cast_fp16")];
            tensor<int32, [2]> var_2294 = const()[name = tensor<string, []>("op_2294"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2296 = const()[name = tensor<string, []>("op_2296"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_41_pad_type_0 = const()[name = tensor<string, []>("query_41_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_41_pad_0 = const()[name = tensor<string, []>("query_41_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_10_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_10_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(269377984)))];
            tensor<fp16, [768]> layers_10_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_10_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(270557696)))];
            tensor<fp16, [1, 768, 1, 1]> query_41_cast_fp16 = conv(bias = layers_10_self_attn_q_proj_bias_to_fp16, dilations = var_2296, groups = var_2259, pad = query_41_pad_0, pad_type = query_41_pad_type_0, strides = var_2294, weight = layers_10_self_attn_q_proj_weight_to_fp16, x = obj_141_cast_fp16)[name = tensor<string, []>("query_41_cast_fp16")];
            tensor<int32, [2]> var_2300 = const()[name = tensor<string, []>("op_2300"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2302 = const()[name = tensor<string, []>("op_2302"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_21_pad_type_0 = const()[name = tensor<string, []>("current_key_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_21_pad_0 = const()[name = tensor<string, []>("current_key_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_10_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_10_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(270559296)))];
            tensor<fp16, [1, 768, 1, 1]> current_key_21_cast_fp16 = conv(dilations = var_2302, groups = var_2259, pad = current_key_21_pad_0, pad_type = current_key_21_pad_type_0, strides = var_2300, weight = layers_10_self_attn_k_proj_weight_to_fp16, x = obj_141_cast_fp16)[name = tensor<string, []>("current_key_21_cast_fp16")];
            tensor<int32, [2]> var_2307 = const()[name = tensor<string, []>("op_2307"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2309 = const()[name = tensor<string, []>("op_2309"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_21_pad_type_0 = const()[name = tensor<string, []>("current_value_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_21_pad_0 = const()[name = tensor<string, []>("current_value_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_10_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_10_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(271739008)))];
            tensor<fp16, [768]> layers_10_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_10_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(272918720)))];
            tensor<fp16, [1, 768, 1, 1]> current_value_21_cast_fp16 = conv(bias = layers_10_self_attn_v_proj_bias_to_fp16, dilations = var_2309, groups = var_2259, pad = current_value_21_pad_0, pad_type = current_value_21_pad_type_0, strides = var_2307, weight = layers_10_self_attn_v_proj_weight_to_fp16, x = obj_141_cast_fp16)[name = tensor<string, []>("current_value_21_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_2316_cast_fp16 = mul(x = current_key_21_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_2316_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_2318_cast_fp16 = mul(x = var_63_cast_fp16_10, y = var_161_cast_fp16)[name = tensor<string, []>("op_2318_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> key_41_cast_fp16 = add(x = var_2316_cast_fp16, y = var_2318_cast_fp16)[name = tensor<string, []>("key_41_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_2320_cast_fp16 = mul(x = current_value_21_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_2320_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_2322_cast_fp16 = mul(x = var_78_cast_fp16_10, y = var_161_cast_fp16)[name = tensor<string, []>("op_2322_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> value_41_cast_fp16 = add(x = var_2320_cast_fp16, y = var_2322_cast_fp16)[name = tensor<string, []>("value_41_cast_fp16")];
            tensor<int32, [4]> var_2325 = const()[name = tensor<string, []>("op_2325"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_2326_cast_fp16 = reshape(shape = var_2325, x = query_41_cast_fp16)[name = tensor<string, []>("op_2326_cast_fp16")];
            tensor<fp16, []> var_2327_to_fp16 = const()[name = tensor<string, []>("op_2327_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_2328_cast_fp16 = mul(x = var_2326_cast_fp16, y = var_2327_to_fp16)[name = tensor<string, []>("op_2328_cast_fp16")];
            tensor<int32, [4]> var_2329 = const()[name = tensor<string, []>("op_2329"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_2330_cast_fp16 = reshape(shape = var_2329, x = key_41_cast_fp16)[name = tensor<string, []>("op_2330_cast_fp16")];
            tensor<bool, []> mh_w_61_transpose_x_0 = const()[name = tensor<string, []>("mh_w_61_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_61_transpose_y_0 = const()[name = tensor<string, []>("mh_w_61_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 224]> mh_w_61_cast_fp16 = matmul(transpose_x = mh_w_61_transpose_x_0, transpose_y = mh_w_61_transpose_y_0, x = var_2328_cast_fp16, y = var_2330_cast_fp16)[name = tensor<string, []>("mh_w_61_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> mh_w_63_cast_fp16 = add(x = mh_w_61_cast_fp16, y = var_179_cast_fp16)[name = tensor<string, []>("mh_w_63_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> var_2338_cast_fp16 = softmax(axis = var_2252, x = mh_w_63_cast_fp16)[name = tensor<string, []>("op_2338_cast_fp16")];
            tensor<int32, [4]> var_2339 = const()[name = tensor<string, []>("op_2339"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_2340_cast_fp16 = reshape(shape = var_2339, x = value_41_cast_fp16)[name = tensor<string, []>("op_2340_cast_fp16")];
            tensor<bool, []> attn_41_transpose_x_0 = const()[name = tensor<string, []>("attn_41_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_41_transpose_y_0 = const()[name = tensor<string, []>("attn_41_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_41_cast_fp16 = matmul(transpose_x = attn_41_transpose_x_0, transpose_y = attn_41_transpose_y_0, x = var_2340_cast_fp16, y = var_2338_cast_fp16)[name = tensor<string, []>("attn_41_cast_fp16")];
            tensor<int32, [4]> var_2343 = const()[name = tensor<string, []>("op_2343"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_101_cast_fp16 = reshape(shape = var_2343, x = attn_41_cast_fp16)[name = tensor<string, []>("input_101_cast_fp16")];
            tensor<int32, [2]> var_2347 = const()[name = tensor<string, []>("op_2347"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2349 = const()[name = tensor<string, []>("op_2349"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_147_pad_type_0 = const()[name = tensor<string, []>("obj_147_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_147_pad_0 = const()[name = tensor<string, []>("obj_147_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_10_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_10_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(272920320)))];
            tensor<fp16, [768]> layers_10_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_10_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(274100032)))];
            tensor<fp16, [1, 768, 1, 1]> obj_147_cast_fp16 = conv(bias = layers_10_self_attn_o_proj_bias_to_fp16, dilations = var_2349, groups = var_2259, pad = obj_147_pad_0, pad_type = obj_147_pad_type_0, strides = var_2347, weight = layers_10_self_attn_o_proj_weight_to_fp16, x = input_101_cast_fp16)[name = tensor<string, []>("obj_147_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_63_cast_fp16 = add(x = inputs_61_cast_fp16, y = obj_147_cast_fp16)[name = tensor<string, []>("inputs_63_cast_fp16")];
            tensor<int32, [1]> var_2359 = const()[name = tensor<string, []>("op_2359"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_63_cast_fp16 = reduce_mean(axes = var_2359, keep_dims = var_2260, x = inputs_63_cast_fp16)[name = tensor<string, []>("channels_mean_63_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_63_cast_fp16 = sub(x = inputs_63_cast_fp16, y = channels_mean_63_cast_fp16)[name = tensor<string, []>("zero_mean_63_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_63_cast_fp16 = mul(x = zero_mean_63_cast_fp16, y = zero_mean_63_cast_fp16)[name = tensor<string, []>("zero_mean_sq_63_cast_fp16")];
            tensor<int32, [1]> var_2363 = const()[name = tensor<string, []>("op_2363"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_2364_cast_fp16 = reduce_mean(axes = var_2363, keep_dims = var_2260, x = zero_mean_sq_63_cast_fp16)[name = tensor<string, []>("op_2364_cast_fp16")];
            tensor<fp16, []> var_2365_to_fp16 = const()[name = tensor<string, []>("op_2365_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_2366_cast_fp16 = add(x = var_2364_cast_fp16, y = var_2365_to_fp16)[name = tensor<string, []>("op_2366_cast_fp16")];
            tensor<fp16, []> denom_63_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_63_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_63_cast_fp16 = rsqrt(epsilon = denom_63_epsilon_0_to_fp16, x = var_2366_cast_fp16)[name = tensor<string, []>("denom_63_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_63_cast_fp16 = mul(x = zero_mean_63_cast_fp16, y = denom_63_cast_fp16)[name = tensor<string, []>("out_63_cast_fp16")];
            tensor<fp16, [768]> obj_149_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_149_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(274101632)))];
            tensor<fp16, [768]> obj_149_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_149_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(274103232)))];
            tensor<fp16, []> obj_149_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_149_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_149_cast_fp16 = batch_norm(beta = obj_149_beta_0_to_fp16, epsilon = obj_149_epsilon_0_to_fp16, gamma = obj_149_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_63_cast_fp16)[name = tensor<string, []>("obj_149_cast_fp16")];
            tensor<int32, [2]> var_2381 = const()[name = tensor<string, []>("op_2381"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2383 = const()[name = tensor<string, []>("op_2383"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_43_pad_type_0 = const()[name = tensor<string, []>("query_43_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_43_pad_0 = const()[name = tensor<string, []>("query_43_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_10_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_10_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(274104832)))];
            tensor<fp16, [768]> layers_10_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_10_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(275284544)))];
            tensor<fp16, [1, 768, 1, 1]> query_43_cast_fp16 = conv(bias = layers_10_encoder_attn_q_proj_bias_to_fp16, dilations = var_2383, groups = var_2259, pad = query_43_pad_0, pad_type = query_43_pad_type_0, strides = var_2381, weight = layers_10_encoder_attn_q_proj_weight_to_fp16, x = obj_149_cast_fp16)[name = tensor<string, []>("query_43_cast_fp16")];
            tensor<int32, [2]> var_2387 = const()[name = tensor<string, []>("op_2387"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2389 = const()[name = tensor<string, []>("op_2389"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_43_pad_type_0 = const()[name = tensor<string, []>("key_43_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_43_pad_0 = const()[name = tensor<string, []>("key_43_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_10_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_10_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(275286144)))];
            tensor<fp16, [1, 768, 1, 1500]> key_43_cast_fp16 = conv(dilations = var_2389, groups = var_2259, pad = key_43_pad_0, pad_type = key_43_pad_type_0, strides = var_2387, weight = layers_10_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_43_cast_fp16")];
            tensor<int32, [2]> var_2394 = const()[name = tensor<string, []>("op_2394"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2396 = const()[name = tensor<string, []>("op_2396"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_43_pad_type_0 = const()[name = tensor<string, []>("value_43_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_43_pad_0 = const()[name = tensor<string, []>("value_43_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_10_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_10_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(276465856)))];
            tensor<fp16, [768]> layers_10_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_10_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(277645568)))];
            tensor<fp16, [1, 768, 1, 1500]> value_43_cast_fp16 = conv(bias = layers_10_encoder_attn_v_proj_bias_to_fp16, dilations = var_2396, groups = var_2259, pad = value_43_pad_0, pad_type = value_43_pad_type_0, strides = var_2394, weight = layers_10_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_43_cast_fp16")];
            tensor<int32, [4]> var_2400 = const()[name = tensor<string, []>("op_2400"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_2401_cast_fp16 = reshape(shape = var_2400, x = query_43_cast_fp16)[name = tensor<string, []>("op_2401_cast_fp16")];
            tensor<fp16, []> var_2402_to_fp16 = const()[name = tensor<string, []>("op_2402_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_2403_cast_fp16 = mul(x = var_2401_cast_fp16, y = var_2402_to_fp16)[name = tensor<string, []>("op_2403_cast_fp16")];
            tensor<int32, [4]> var_2404 = const()[name = tensor<string, []>("op_2404"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_2405_cast_fp16 = reshape(shape = var_2404, x = key_43_cast_fp16)[name = tensor<string, []>("op_2405_cast_fp16")];
            tensor<bool, []> mh_w_65_transpose_x_0 = const()[name = tensor<string, []>("mh_w_65_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_65_transpose_y_0 = const()[name = tensor<string, []>("mh_w_65_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 1500]> mh_w_65_cast_fp16 = matmul(transpose_x = mh_w_65_transpose_x_0, transpose_y = mh_w_65_transpose_y_0, x = var_2403_cast_fp16, y = var_2405_cast_fp16)[name = tensor<string, []>("mh_w_65_cast_fp16")];
            tensor<fp16, [1, 12, 1, 1500]> obj_153_cast_fp16 = softmax(axis = var_2252, x = mh_w_65_cast_fp16)[name = tensor<string, []>("obj_153_cast_fp16")];
            tensor<int32, [4]> var_2409 = const()[name = tensor<string, []>("op_2409"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_2410_cast_fp16 = reshape(shape = var_2409, x = value_43_cast_fp16)[name = tensor<string, []>("op_2410_cast_fp16")];
            tensor<bool, []> attn_43_transpose_x_0 = const()[name = tensor<string, []>("attn_43_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_43_transpose_y_0 = const()[name = tensor<string, []>("attn_43_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_43_cast_fp16 = matmul(transpose_x = attn_43_transpose_x_0, transpose_y = attn_43_transpose_y_0, x = var_2410_cast_fp16, y = obj_153_cast_fp16)[name = tensor<string, []>("attn_43_cast_fp16")];
            tensor<int32, [4]> var_2413 = const()[name = tensor<string, []>("op_2413"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_103_cast_fp16 = reshape(shape = var_2413, x = attn_43_cast_fp16)[name = tensor<string, []>("input_103_cast_fp16")];
            tensor<int32, [2]> var_2417 = const()[name = tensor<string, []>("op_2417"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2419 = const()[name = tensor<string, []>("op_2419"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_151_pad_type_0 = const()[name = tensor<string, []>("obj_151_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_151_pad_0 = const()[name = tensor<string, []>("obj_151_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_10_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_10_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(277647168)))];
            tensor<fp16, [768]> layers_10_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_10_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(278826880)))];
            tensor<fp16, [1, 768, 1, 1]> obj_151_cast_fp16 = conv(bias = layers_10_encoder_attn_o_proj_bias_to_fp16, dilations = var_2419, groups = var_2259, pad = obj_151_pad_0, pad_type = obj_151_pad_type_0, strides = var_2417, weight = layers_10_encoder_attn_o_proj_weight_to_fp16, x = input_103_cast_fp16)[name = tensor<string, []>("obj_151_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_65_cast_fp16 = add(x = inputs_63_cast_fp16, y = obj_151_cast_fp16)[name = tensor<string, []>("inputs_65_cast_fp16")];
            tensor<int32, [1]> var_2428 = const()[name = tensor<string, []>("op_2428"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_65_cast_fp16 = reduce_mean(axes = var_2428, keep_dims = var_2260, x = inputs_65_cast_fp16)[name = tensor<string, []>("channels_mean_65_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_65_cast_fp16 = sub(x = inputs_65_cast_fp16, y = channels_mean_65_cast_fp16)[name = tensor<string, []>("zero_mean_65_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_65_cast_fp16 = mul(x = zero_mean_65_cast_fp16, y = zero_mean_65_cast_fp16)[name = tensor<string, []>("zero_mean_sq_65_cast_fp16")];
            tensor<int32, [1]> var_2432 = const()[name = tensor<string, []>("op_2432"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_2433_cast_fp16 = reduce_mean(axes = var_2432, keep_dims = var_2260, x = zero_mean_sq_65_cast_fp16)[name = tensor<string, []>("op_2433_cast_fp16")];
            tensor<fp16, []> var_2434_to_fp16 = const()[name = tensor<string, []>("op_2434_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_2435_cast_fp16 = add(x = var_2433_cast_fp16, y = var_2434_to_fp16)[name = tensor<string, []>("op_2435_cast_fp16")];
            tensor<fp16, []> denom_65_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_65_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_65_cast_fp16 = rsqrt(epsilon = denom_65_epsilon_0_to_fp16, x = var_2435_cast_fp16)[name = tensor<string, []>("denom_65_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_65_cast_fp16 = mul(x = zero_mean_65_cast_fp16, y = denom_65_cast_fp16)[name = tensor<string, []>("out_65_cast_fp16")];
            tensor<fp16, [768]> input_105_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_105_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(278828480)))];
            tensor<fp16, [768]> input_105_beta_0_to_fp16 = const()[name = tensor<string, []>("input_105_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(278830080)))];
            tensor<fp16, []> input_105_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_105_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> input_105_cast_fp16 = batch_norm(beta = input_105_beta_0_to_fp16, epsilon = input_105_epsilon_0_to_fp16, gamma = input_105_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_65_cast_fp16)[name = tensor<string, []>("input_105_cast_fp16")];
            tensor<int32, [2]> var_2446 = const()[name = tensor<string, []>("op_2446"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2448 = const()[name = tensor<string, []>("op_2448"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_107_pad_type_0 = const()[name = tensor<string, []>("input_107_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_107_pad_0 = const()[name = tensor<string, []>("input_107_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [3072, 768, 1, 1]> layers_10_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_10_fc1_weight_to_fp16"), val = tensor<fp16, [3072, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(278831680)))];
            tensor<fp16, [3072]> layers_10_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_10_fc1_bias_to_fp16"), val = tensor<fp16, [3072]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(283550336)))];
            tensor<fp16, [1, 3072, 1, 1]> input_107_cast_fp16 = conv(bias = layers_10_fc1_bias_to_fp16, dilations = var_2448, groups = var_2259, pad = input_107_pad_0, pad_type = input_107_pad_type_0, strides = var_2446, weight = layers_10_fc1_weight_to_fp16, x = input_105_cast_fp16)[name = tensor<string, []>("input_107_cast_fp16")];
            tensor<string, []> input_109_mode_0 = const()[name = tensor<string, []>("input_109_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 3072, 1, 1]> input_109_cast_fp16 = gelu(mode = input_109_mode_0, x = input_107_cast_fp16)[name = tensor<string, []>("input_109_cast_fp16")];
            tensor<int32, [2]> var_2454 = const()[name = tensor<string, []>("op_2454"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2456 = const()[name = tensor<string, []>("op_2456"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_23_pad_type_0 = const()[name = tensor<string, []>("hidden_states_23_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_23_pad_0 = const()[name = tensor<string, []>("hidden_states_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 3072, 1, 1]> layers_10_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_10_fc2_weight_to_fp16"), val = tensor<fp16, [768, 3072, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(283556544)))];
            tensor<fp16, [768]> layers_10_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_10_fc2_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(288275200)))];
            tensor<fp16, [1, 768, 1, 1]> hidden_states_23_cast_fp16 = conv(bias = layers_10_fc2_bias_to_fp16, dilations = var_2456, groups = var_2259, pad = hidden_states_23_pad_0, pad_type = hidden_states_23_pad_type_0, strides = var_2454, weight = layers_10_fc2_weight_to_fp16, x = input_109_cast_fp16)[name = tensor<string, []>("hidden_states_23_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_67_cast_fp16 = add(x = inputs_65_cast_fp16, y = hidden_states_23_cast_fp16)[name = tensor<string, []>("inputs_67_cast_fp16")];
            tensor<int32, []> var_2470 = const()[name = tensor<string, []>("op_2470"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_2477 = const()[name = tensor<string, []>("op_2477"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_2478 = const()[name = tensor<string, []>("op_2478"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_2490 = const()[name = tensor<string, []>("op_2490"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_67_cast_fp16 = reduce_mean(axes = var_2490, keep_dims = var_2478, x = inputs_67_cast_fp16)[name = tensor<string, []>("channels_mean_67_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_67_cast_fp16 = sub(x = inputs_67_cast_fp16, y = channels_mean_67_cast_fp16)[name = tensor<string, []>("zero_mean_67_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_67_cast_fp16 = mul(x = zero_mean_67_cast_fp16, y = zero_mean_67_cast_fp16)[name = tensor<string, []>("zero_mean_sq_67_cast_fp16")];
            tensor<int32, [1]> var_2494 = const()[name = tensor<string, []>("op_2494"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_2495_cast_fp16 = reduce_mean(axes = var_2494, keep_dims = var_2478, x = zero_mean_sq_67_cast_fp16)[name = tensor<string, []>("op_2495_cast_fp16")];
            tensor<fp16, []> var_2496_to_fp16 = const()[name = tensor<string, []>("op_2496_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_2497_cast_fp16 = add(x = var_2495_cast_fp16, y = var_2496_to_fp16)[name = tensor<string, []>("op_2497_cast_fp16")];
            tensor<fp16, []> denom_67_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_67_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_67_cast_fp16 = rsqrt(epsilon = denom_67_epsilon_0_to_fp16, x = var_2497_cast_fp16)[name = tensor<string, []>("denom_67_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_67_cast_fp16 = mul(x = zero_mean_67_cast_fp16, y = denom_67_cast_fp16)[name = tensor<string, []>("out_67_cast_fp16")];
            tensor<fp16, [768]> obj_155_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_155_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(288276800)))];
            tensor<fp16, [768]> obj_155_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_155_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(288278400)))];
            tensor<fp16, []> obj_155_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_155_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_155_cast_fp16 = batch_norm(beta = obj_155_beta_0_to_fp16, epsilon = obj_155_epsilon_0_to_fp16, gamma = obj_155_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_67_cast_fp16)[name = tensor<string, []>("obj_155_cast_fp16")];
            tensor<int32, [2]> var_2512 = const()[name = tensor<string, []>("op_2512"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2514 = const()[name = tensor<string, []>("op_2514"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_45_pad_type_0 = const()[name = tensor<string, []>("query_45_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_45_pad_0 = const()[name = tensor<string, []>("query_45_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_11_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_11_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(288280000)))];
            tensor<fp16, [768]> layers_11_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_11_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(289459712)))];
            tensor<fp16, [1, 768, 1, 1]> query_45_cast_fp16 = conv(bias = layers_11_self_attn_q_proj_bias_to_fp16, dilations = var_2514, groups = var_2477, pad = query_45_pad_0, pad_type = query_45_pad_type_0, strides = var_2512, weight = layers_11_self_attn_q_proj_weight_to_fp16, x = obj_155_cast_fp16)[name = tensor<string, []>("query_45_cast_fp16")];
            tensor<int32, [2]> var_2518 = const()[name = tensor<string, []>("op_2518"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2520 = const()[name = tensor<string, []>("op_2520"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_key_pad_type_0 = const()[name = tensor<string, []>("current_key_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_key_pad_0 = const()[name = tensor<string, []>("current_key_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_11_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_11_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(289461312)))];
            tensor<fp16, [1, 768, 1, 1]> current_key_cast_fp16 = conv(dilations = var_2520, groups = var_2477, pad = current_key_pad_0, pad_type = current_key_pad_type_0, strides = var_2518, weight = layers_11_self_attn_k_proj_weight_to_fp16, x = obj_155_cast_fp16)[name = tensor<string, []>("current_key_cast_fp16")];
            tensor<int32, [2]> var_2525 = const()[name = tensor<string, []>("op_2525"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2527 = const()[name = tensor<string, []>("op_2527"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> current_value_pad_type_0 = const()[name = tensor<string, []>("current_value_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> current_value_pad_0 = const()[name = tensor<string, []>("current_value_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_11_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_11_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(290641024)))];
            tensor<fp16, [768]> layers_11_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_11_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(291820736)))];
            tensor<fp16, [1, 768, 1, 1]> current_value_cast_fp16 = conv(bias = layers_11_self_attn_v_proj_bias_to_fp16, dilations = var_2527, groups = var_2477, pad = current_value_pad_0, pad_type = current_value_pad_type_0, strides = var_2525, weight = layers_11_self_attn_v_proj_weight_to_fp16, x = obj_155_cast_fp16)[name = tensor<string, []>("current_value_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_2534_cast_fp16 = mul(x = current_key_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_2534_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_2536_cast_fp16 = mul(x = var_63_cast_fp16_11, y = var_161_cast_fp16)[name = tensor<string, []>("op_2536_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> key_45_cast_fp16 = add(x = var_2534_cast_fp16, y = var_2536_cast_fp16)[name = tensor<string, []>("key_45_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_2538_cast_fp16 = mul(x = current_value_cast_fp16, y = var_158_cast_fp16)[name = tensor<string, []>("op_2538_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> var_2540_cast_fp16 = mul(x = var_78_cast_fp16_11, y = var_161_cast_fp16)[name = tensor<string, []>("op_2540_cast_fp16")];
            tensor<fp16, [1, 768, 1, 224]> value_45_cast_fp16 = add(x = var_2538_cast_fp16, y = var_2540_cast_fp16)[name = tensor<string, []>("value_45_cast_fp16")];
            tensor<int32, [4]> var_2543 = const()[name = tensor<string, []>("op_2543"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_2544_cast_fp16 = reshape(shape = var_2543, x = query_45_cast_fp16)[name = tensor<string, []>("op_2544_cast_fp16")];
            tensor<fp16, []> var_2545_to_fp16 = const()[name = tensor<string, []>("op_2545_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_2546_cast_fp16 = mul(x = var_2544_cast_fp16, y = var_2545_to_fp16)[name = tensor<string, []>("op_2546_cast_fp16")];
            tensor<int32, [4]> var_2547 = const()[name = tensor<string, []>("op_2547"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_2548_cast_fp16 = reshape(shape = var_2547, x = key_45_cast_fp16)[name = tensor<string, []>("op_2548_cast_fp16")];
            tensor<bool, []> mh_w_67_transpose_x_0 = const()[name = tensor<string, []>("mh_w_67_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_67_transpose_y_0 = const()[name = tensor<string, []>("mh_w_67_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 224]> mh_w_67_cast_fp16 = matmul(transpose_x = mh_w_67_transpose_x_0, transpose_y = mh_w_67_transpose_y_0, x = var_2546_cast_fp16, y = var_2548_cast_fp16)[name = tensor<string, []>("mh_w_67_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> mh_w_69_cast_fp16 = add(x = mh_w_67_cast_fp16, y = var_179_cast_fp16)[name = tensor<string, []>("mh_w_69_cast_fp16")];
            tensor<fp16, [1, 12, 1, 224]> var_2556_cast_fp16 = softmax(axis = var_2470, x = mh_w_69_cast_fp16)[name = tensor<string, []>("op_2556_cast_fp16")];
            tensor<int32, [4]> var_2557 = const()[name = tensor<string, []>("op_2557"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 224]> var_2558_cast_fp16 = reshape(shape = var_2557, x = value_45_cast_fp16)[name = tensor<string, []>("op_2558_cast_fp16")];
            tensor<bool, []> attn_45_transpose_x_0 = const()[name = tensor<string, []>("attn_45_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_45_transpose_y_0 = const()[name = tensor<string, []>("attn_45_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_45_cast_fp16 = matmul(transpose_x = attn_45_transpose_x_0, transpose_y = attn_45_transpose_y_0, x = var_2558_cast_fp16, y = var_2556_cast_fp16)[name = tensor<string, []>("attn_45_cast_fp16")];
            tensor<int32, [4]> var_2561 = const()[name = tensor<string, []>("op_2561"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_111_cast_fp16 = reshape(shape = var_2561, x = attn_45_cast_fp16)[name = tensor<string, []>("input_111_cast_fp16")];
            tensor<int32, [2]> var_2565 = const()[name = tensor<string, []>("op_2565"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2567 = const()[name = tensor<string, []>("op_2567"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_161_pad_type_0 = const()[name = tensor<string, []>("obj_161_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_161_pad_0 = const()[name = tensor<string, []>("obj_161_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_11_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_11_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(291822336)))];
            tensor<fp16, [768]> layers_11_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_11_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(293002048)))];
            tensor<fp16, [1, 768, 1, 1]> obj_161_cast_fp16 = conv(bias = layers_11_self_attn_o_proj_bias_to_fp16, dilations = var_2567, groups = var_2477, pad = obj_161_pad_0, pad_type = obj_161_pad_type_0, strides = var_2565, weight = layers_11_self_attn_o_proj_weight_to_fp16, x = input_111_cast_fp16)[name = tensor<string, []>("obj_161_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_69_cast_fp16 = add(x = inputs_67_cast_fp16, y = obj_161_cast_fp16)[name = tensor<string, []>("inputs_69_cast_fp16")];
            tensor<int32, [1]> var_2577 = const()[name = tensor<string, []>("op_2577"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_69_cast_fp16 = reduce_mean(axes = var_2577, keep_dims = var_2478, x = inputs_69_cast_fp16)[name = tensor<string, []>("channels_mean_69_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_69_cast_fp16 = sub(x = inputs_69_cast_fp16, y = channels_mean_69_cast_fp16)[name = tensor<string, []>("zero_mean_69_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_69_cast_fp16 = mul(x = zero_mean_69_cast_fp16, y = zero_mean_69_cast_fp16)[name = tensor<string, []>("zero_mean_sq_69_cast_fp16")];
            tensor<int32, [1]> var_2581 = const()[name = tensor<string, []>("op_2581"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_2582_cast_fp16 = reduce_mean(axes = var_2581, keep_dims = var_2478, x = zero_mean_sq_69_cast_fp16)[name = tensor<string, []>("op_2582_cast_fp16")];
            tensor<fp16, []> var_2583_to_fp16 = const()[name = tensor<string, []>("op_2583_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_2584_cast_fp16 = add(x = var_2582_cast_fp16, y = var_2583_to_fp16)[name = tensor<string, []>("op_2584_cast_fp16")];
            tensor<fp16, []> denom_69_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_69_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_69_cast_fp16 = rsqrt(epsilon = denom_69_epsilon_0_to_fp16, x = var_2584_cast_fp16)[name = tensor<string, []>("denom_69_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_69_cast_fp16 = mul(x = zero_mean_69_cast_fp16, y = denom_69_cast_fp16)[name = tensor<string, []>("out_69_cast_fp16")];
            tensor<fp16, [768]> obj_163_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_163_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(293003648)))];
            tensor<fp16, [768]> obj_163_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_163_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(293005248)))];
            tensor<fp16, []> obj_163_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_163_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> obj_163_cast_fp16 = batch_norm(beta = obj_163_beta_0_to_fp16, epsilon = obj_163_epsilon_0_to_fp16, gamma = obj_163_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_69_cast_fp16)[name = tensor<string, []>("obj_163_cast_fp16")];
            tensor<int32, [2]> var_2599 = const()[name = tensor<string, []>("op_2599"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2601 = const()[name = tensor<string, []>("op_2601"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_pad_type_0 = const()[name = tensor<string, []>("query_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_pad_0 = const()[name = tensor<string, []>("query_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_11_encoder_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_11_encoder_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(293006848)))];
            tensor<fp16, [768]> layers_11_encoder_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_11_encoder_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(294186560)))];
            tensor<fp16, [1, 768, 1, 1]> query_cast_fp16 = conv(bias = layers_11_encoder_attn_q_proj_bias_to_fp16, dilations = var_2601, groups = var_2477, pad = query_pad_0, pad_type = query_pad_type_0, strides = var_2599, weight = layers_11_encoder_attn_q_proj_weight_to_fp16, x = obj_163_cast_fp16)[name = tensor<string, []>("query_cast_fp16")];
            tensor<int32, [2]> var_2605 = const()[name = tensor<string, []>("op_2605"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2607 = const()[name = tensor<string, []>("op_2607"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_pad_type_0 = const()[name = tensor<string, []>("key_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_pad_0 = const()[name = tensor<string, []>("key_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_11_encoder_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_11_encoder_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(294188160)))];
            tensor<fp16, [1, 768, 1, 1500]> key_cast_fp16 = conv(dilations = var_2607, groups = var_2477, pad = key_pad_0, pad_type = key_pad_type_0, strides = var_2605, weight = layers_11_encoder_attn_k_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("key_cast_fp16")];
            tensor<int32, [2]> var_2612 = const()[name = tensor<string, []>("op_2612"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2614 = const()[name = tensor<string, []>("op_2614"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_pad_type_0 = const()[name = tensor<string, []>("value_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_pad_0 = const()[name = tensor<string, []>("value_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_11_encoder_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_11_encoder_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(295367872)))];
            tensor<fp16, [768]> layers_11_encoder_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_11_encoder_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(296547584)))];
            tensor<fp16, [1, 768, 1, 1500]> value_cast_fp16 = conv(bias = layers_11_encoder_attn_v_proj_bias_to_fp16, dilations = var_2614, groups = var_2477, pad = value_pad_0, pad_type = value_pad_type_0, strides = var_2612, weight = layers_11_encoder_attn_v_proj_weight_to_fp16, x = encoder_output_embeds)[name = tensor<string, []>("value_cast_fp16")];
            tensor<int32, [4]> var_2618 = const()[name = tensor<string, []>("op_2618"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1]> var_2619_cast_fp16 = reshape(shape = var_2618, x = query_cast_fp16)[name = tensor<string, []>("op_2619_cast_fp16")];
            tensor<fp16, []> var_2620_to_fp16 = const()[name = tensor<string, []>("op_2620_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 12, 64, 1]> var_2621_cast_fp16 = mul(x = var_2619_cast_fp16, y = var_2620_to_fp16)[name = tensor<string, []>("op_2621_cast_fp16")];
            tensor<int32, [4]> var_2622 = const()[name = tensor<string, []>("op_2622"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_2623_cast_fp16 = reshape(shape = var_2622, x = key_cast_fp16)[name = tensor<string, []>("op_2623_cast_fp16")];
            tensor<bool, []> mh_w_transpose_x_0 = const()[name = tensor<string, []>("mh_w_transpose_x_0"), val = tensor<bool, []>(true)];
            tensor<bool, []> mh_w_transpose_y_0 = const()[name = tensor<string, []>("mh_w_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 1, 1500]> mh_w_cast_fp16 = matmul(transpose_x = mh_w_transpose_x_0, transpose_y = mh_w_transpose_y_0, x = var_2621_cast_fp16, y = var_2623_cast_fp16)[name = tensor<string, []>("mh_w_cast_fp16")];
            tensor<fp16, [1, 12, 1, 1500]> obj_167_cast_fp16 = softmax(axis = var_2470, x = mh_w_cast_fp16)[name = tensor<string, []>("obj_167_cast_fp16")];
            tensor<int32, [4]> var_2627 = const()[name = tensor<string, []>("op_2627"), val = tensor<int32, [4]>([1, 12, 64, -1])];
            tensor<fp16, [1, 12, 64, 1500]> var_2628_cast_fp16 = reshape(shape = var_2627, x = value_cast_fp16)[name = tensor<string, []>("op_2628_cast_fp16")];
            tensor<bool, []> attn_transpose_x_0 = const()[name = tensor<string, []>("attn_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attn_transpose_y_0 = const()[name = tensor<string, []>("attn_transpose_y_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 12, 64, 1]> attn_cast_fp16 = matmul(transpose_x = attn_transpose_x_0, transpose_y = attn_transpose_y_0, x = var_2628_cast_fp16, y = obj_167_cast_fp16)[name = tensor<string, []>("attn_cast_fp16")];
            tensor<int32, [4]> var_2631 = const()[name = tensor<string, []>("op_2631"), val = tensor<int32, [4]>([1, 768, 1, -1])];
            tensor<fp16, [1, 768, 1, 1]> input_113_cast_fp16 = reshape(shape = var_2631, x = attn_cast_fp16)[name = tensor<string, []>("input_113_cast_fp16")];
            tensor<int32, [2]> var_2635 = const()[name = tensor<string, []>("op_2635"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2637 = const()[name = tensor<string, []>("op_2637"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_165_pad_type_0 = const()[name = tensor<string, []>("obj_165_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_165_pad_0 = const()[name = tensor<string, []>("obj_165_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 768, 1, 1]> layers_11_encoder_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_11_encoder_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [768, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(296549184)))];
            tensor<fp16, [768]> layers_11_encoder_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_11_encoder_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(297728896)))];
            tensor<fp16, [1, 768, 1, 1]> obj_165_cast_fp16 = conv(bias = layers_11_encoder_attn_o_proj_bias_to_fp16, dilations = var_2637, groups = var_2477, pad = obj_165_pad_0, pad_type = obj_165_pad_type_0, strides = var_2635, weight = layers_11_encoder_attn_o_proj_weight_to_fp16, x = input_113_cast_fp16)[name = tensor<string, []>("obj_165_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_71_cast_fp16 = add(x = inputs_69_cast_fp16, y = obj_165_cast_fp16)[name = tensor<string, []>("inputs_71_cast_fp16")];
            tensor<int32, [1]> var_2646 = const()[name = tensor<string, []>("op_2646"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_71_cast_fp16 = reduce_mean(axes = var_2646, keep_dims = var_2478, x = inputs_71_cast_fp16)[name = tensor<string, []>("channels_mean_71_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_71_cast_fp16 = sub(x = inputs_71_cast_fp16, y = channels_mean_71_cast_fp16)[name = tensor<string, []>("zero_mean_71_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_71_cast_fp16 = mul(x = zero_mean_71_cast_fp16, y = zero_mean_71_cast_fp16)[name = tensor<string, []>("zero_mean_sq_71_cast_fp16")];
            tensor<int32, [1]> var_2650 = const()[name = tensor<string, []>("op_2650"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_2651_cast_fp16 = reduce_mean(axes = var_2650, keep_dims = var_2478, x = zero_mean_sq_71_cast_fp16)[name = tensor<string, []>("op_2651_cast_fp16")];
            tensor<fp16, []> var_2652_to_fp16 = const()[name = tensor<string, []>("op_2652_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_2653_cast_fp16 = add(x = var_2651_cast_fp16, y = var_2652_to_fp16)[name = tensor<string, []>("op_2653_cast_fp16")];
            tensor<fp16, []> denom_71_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_71_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_71_cast_fp16 = rsqrt(epsilon = denom_71_epsilon_0_to_fp16, x = var_2653_cast_fp16)[name = tensor<string, []>("denom_71_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_71_cast_fp16 = mul(x = zero_mean_71_cast_fp16, y = denom_71_cast_fp16)[name = tensor<string, []>("out_71_cast_fp16")];
            tensor<fp16, [768]> input_115_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_115_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(297730496)))];
            tensor<fp16, [768]> input_115_beta_0_to_fp16 = const()[name = tensor<string, []>("input_115_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(297732096)))];
            tensor<fp16, []> input_115_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_115_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> input_115_cast_fp16 = batch_norm(beta = input_115_beta_0_to_fp16, epsilon = input_115_epsilon_0_to_fp16, gamma = input_115_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_71_cast_fp16)[name = tensor<string, []>("input_115_cast_fp16")];
            tensor<int32, [2]> var_2664 = const()[name = tensor<string, []>("op_2664"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2666 = const()[name = tensor<string, []>("op_2666"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_117_pad_type_0 = const()[name = tensor<string, []>("input_117_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_117_pad_0 = const()[name = tensor<string, []>("input_117_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [3072, 768, 1, 1]> layers_11_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_11_fc1_weight_to_fp16"), val = tensor<fp16, [3072, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(297733696)))];
            tensor<fp16, [3072]> layers_11_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_11_fc1_bias_to_fp16"), val = tensor<fp16, [3072]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(302452352)))];
            tensor<fp16, [1, 3072, 1, 1]> input_117_cast_fp16 = conv(bias = layers_11_fc1_bias_to_fp16, dilations = var_2666, groups = var_2477, pad = input_117_pad_0, pad_type = input_117_pad_type_0, strides = var_2664, weight = layers_11_fc1_weight_to_fp16, x = input_115_cast_fp16)[name = tensor<string, []>("input_117_cast_fp16")];
            tensor<string, []> input_mode_0 = const()[name = tensor<string, []>("input_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 3072, 1, 1]> input_cast_fp16 = gelu(mode = input_mode_0, x = input_117_cast_fp16)[name = tensor<string, []>("input_cast_fp16")];
            tensor<int32, [2]> var_2672 = const()[name = tensor<string, []>("op_2672"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2674 = const()[name = tensor<string, []>("op_2674"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_25_pad_type_0 = const()[name = tensor<string, []>("hidden_states_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_25_pad_0 = const()[name = tensor<string, []>("hidden_states_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 3072, 1, 1]> layers_11_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_11_fc2_weight_to_fp16"), val = tensor<fp16, [768, 3072, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(302458560)))];
            tensor<fp16, [768]> layers_11_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_11_fc2_bias_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(307177216)))];
            tensor<fp16, [1, 768, 1, 1]> hidden_states_25_cast_fp16 = conv(bias = layers_11_fc2_bias_to_fp16, dilations = var_2674, groups = var_2477, pad = hidden_states_25_pad_0, pad_type = hidden_states_25_pad_type_0, strides = var_2672, weight = layers_11_fc2_weight_to_fp16, x = input_cast_fp16)[name = tensor<string, []>("hidden_states_25_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> inputs_cast_fp16 = add(x = inputs_71_cast_fp16, y = hidden_states_25_cast_fp16)[name = tensor<string, []>("inputs_cast_fp16")];
            tensor<bool, []> var_2685 = const()[name = tensor<string, []>("op_2685"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_2689 = const()[name = tensor<string, []>("op_2689"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> channels_mean_cast_fp16 = reduce_mean(axes = var_2689, keep_dims = var_2685, x = inputs_cast_fp16)[name = tensor<string, []>("channels_mean_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_cast_fp16 = sub(x = inputs_cast_fp16, y = channels_mean_cast_fp16)[name = tensor<string, []>("zero_mean_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> zero_mean_sq_cast_fp16 = mul(x = zero_mean_cast_fp16, y = zero_mean_cast_fp16)[name = tensor<string, []>("zero_mean_sq_cast_fp16")];
            tensor<int32, [1]> var_2693 = const()[name = tensor<string, []>("op_2693"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1]> var_2694_cast_fp16 = reduce_mean(axes = var_2693, keep_dims = var_2685, x = zero_mean_sq_cast_fp16)[name = tensor<string, []>("op_2694_cast_fp16")];
            tensor<fp16, []> var_2695_to_fp16 = const()[name = tensor<string, []>("op_2695_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1]> var_2696_cast_fp16 = add(x = var_2694_cast_fp16, y = var_2695_to_fp16)[name = tensor<string, []>("op_2696_cast_fp16")];
            tensor<fp16, []> denom_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1]> denom_cast_fp16 = rsqrt(epsilon = denom_epsilon_0_to_fp16, x = var_2696_cast_fp16)[name = tensor<string, []>("denom_cast_fp16")];
            tensor<fp16, [1, 768, 1, 1]> out_cast_fp16 = mul(x = zero_mean_cast_fp16, y = denom_cast_fp16)[name = tensor<string, []>("out_cast_fp16")];
            tensor<fp16, [768]> hidden_states_gamma_0_to_fp16 = const()[name = tensor<string, []>("hidden_states_gamma_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(307178816)))];
            tensor<fp16, [768]> hidden_states_beta_0_to_fp16 = const()[name = tensor<string, []>("hidden_states_beta_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(307180416)))];
            tensor<fp16, []> hidden_states_epsilon_0_to_fp16 = const()[name = tensor<string, []>("hidden_states_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 768, 1, 1]> hidden_states_cast_fp16 = batch_norm(beta = hidden_states_beta_0_to_fp16, epsilon = hidden_states_epsilon_0_to_fp16, gamma = hidden_states_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_cast_fp16)[name = tensor<string, []>("hidden_states_cast_fp16")];
            tensor<int32, [1]> var_2706_axes_0 = const()[name = tensor<string, []>("op_2706_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [1, 768, 1]> var_2706_cast_fp16 = squeeze(axes = var_2706_axes_0, x = hidden_states_cast_fp16)[name = tensor<string, []>("op_2706_cast_fp16")];
            tensor<int32, [3]> var_2709_perm_0 = const()[name = tensor<string, []>("op_2709_perm_0"), val = tensor<int32, [3]>([0, 2, 1])];
            tensor<fp16, [51864]> linear_0_bias_0_to_fp16 = const()[name = tensor<string, []>("linear_0_bias_0_to_fp16"), val = tensor<fp16, [51864]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(307182016)))];
            tensor<fp16, [1, 1, 768]> transpose_0 = transpose(perm = var_2709_perm_0, x = var_2706_cast_fp16)[name = tensor<string, []>("transpose_0")];
            tensor<fp16, [1, 1, 51864]> logits = linear(bias = linear_0_bias_0_to_fp16, weight = embed_tokens_weight_to_fp16, x = transpose_0)[name = tensor<string, []>("linear_0_cast_fp16")];
            tensor<int32, []> var_2713 = const()[name = tensor<string, []>("op_2713"), val = tensor<int32, []>(1)];
            tensor<bool, []> obj_171_interleave_0 = const()[name = tensor<string, []>("obj_171_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 9216, 1, 1]> key_cache_updates = concat(axis = var_2713, interleave = obj_171_interleave_0, values = (current_key_1_cast_fp16, current_key_3_cast_fp16, current_key_5_cast_fp16, current_key_7_cast_fp16, current_key_9_cast_fp16, current_key_11_cast_fp16, current_key_13_cast_fp16, current_key_15_cast_fp16, current_key_17_cast_fp16, current_key_19_cast_fp16, current_key_21_cast_fp16, current_key_cast_fp16))[name = tensor<string, []>("obj_171_cast_fp16")];
            tensor<int32, []> var_2716 = const()[name = tensor<string, []>("op_2716"), val = tensor<int32, []>(1)];
            tensor<bool, []> obj_173_interleave_0 = const()[name = tensor<string, []>("obj_173_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 9216, 1, 1]> value_cache_updates = concat(axis = var_2716, interleave = obj_173_interleave_0, values = (current_value_1_cast_fp16, current_value_3_cast_fp16, current_value_5_cast_fp16, current_value_7_cast_fp16, current_value_9_cast_fp16, current_value_11_cast_fp16, current_value_13_cast_fp16, current_value_15_cast_fp16, current_value_17_cast_fp16, current_value_19_cast_fp16, current_value_21_cast_fp16, current_value_cast_fp16))[name = tensor<string, []>("obj_173_cast_fp16")];
            tensor<int32, [4]> var_2727_begin_0 = const()[name = tensor<string, []>("op_2727_begin_0"), val = tensor<int32, [4]>([0, 6, 0, 0])];
            tensor<int32, [4]> var_2727_end_0 = const()[name = tensor<string, []>("op_2727_end_0"), val = tensor<int32, [4]>([1, 7, 1, 1500])];
            tensor<bool, [4]> var_2727_end_mask_0 = const()[name = tensor<string, []>("op_2727_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_2727_cast_fp16 = slice_by_index(begin = var_2727_begin_0, end = var_2727_end_0, end_mask = var_2727_end_mask_0, x = obj_97_cast_fp16)[name = tensor<string, []>("op_2727_cast_fp16")];
            tensor<int32, [4]> var_2730_begin_0 = const()[name = tensor<string, []>("op_2730_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2730_end_0 = const()[name = tensor<string, []>("op_2730_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2730_end_mask_0 = const()[name = tensor<string, []>("op_2730_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_2730_squeeze_mask_0 = const()[name = tensor<string, []>("op_2730_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_2730_cast_fp16 = slice_by_index(begin = var_2730_begin_0, end = var_2730_end_0, end_mask = var_2730_end_mask_0, squeeze_mask = var_2730_squeeze_mask_0, x = var_2727_cast_fp16)[name = tensor<string, []>("op_2730_cast_fp16")];
            tensor<int32, [4]> var_2745_begin_0 = const()[name = tensor<string, []>("op_2745_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2745_end_0 = const()[name = tensor<string, []>("op_2745_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2745_end_mask_0 = const()[name = tensor<string, []>("op_2745_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_2745_cast_fp16 = slice_by_index(begin = var_2745_begin_0, end = var_2745_end_0, end_mask = var_2745_end_mask_0, x = obj_111_cast_fp16)[name = tensor<string, []>("op_2745_cast_fp16")];
            tensor<int32, [4]> var_2748_begin_0 = const()[name = tensor<string, []>("op_2748_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2748_end_0 = const()[name = tensor<string, []>("op_2748_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2748_end_mask_0 = const()[name = tensor<string, []>("op_2748_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_2748_squeeze_mask_0 = const()[name = tensor<string, []>("op_2748_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_2748_cast_fp16 = slice_by_index(begin = var_2748_begin_0, end = var_2748_end_0, end_mask = var_2748_end_mask_0, squeeze_mask = var_2748_squeeze_mask_0, x = var_2745_cast_fp16)[name = tensor<string, []>("op_2748_cast_fp16")];
            tensor<int32, [4]> var_2763_begin_0 = const()[name = tensor<string, []>("op_2763_begin_0"), val = tensor<int32, [4]>([0, 3, 0, 0])];
            tensor<int32, [4]> var_2763_end_0 = const()[name = tensor<string, []>("op_2763_end_0"), val = tensor<int32, [4]>([1, 4, 1, 1500])];
            tensor<bool, [4]> var_2763_end_mask_0 = const()[name = tensor<string, []>("op_2763_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_2763_cast_fp16 = slice_by_index(begin = var_2763_begin_0, end = var_2763_end_0, end_mask = var_2763_end_mask_0, x = obj_111_cast_fp16)[name = tensor<string, []>("op_2763_cast_fp16")];
            tensor<int32, [4]> var_2766_begin_0 = const()[name = tensor<string, []>("op_2766_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2766_end_0 = const()[name = tensor<string, []>("op_2766_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2766_end_mask_0 = const()[name = tensor<string, []>("op_2766_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_2766_squeeze_mask_0 = const()[name = tensor<string, []>("op_2766_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_2766_cast_fp16 = slice_by_index(begin = var_2766_begin_0, end = var_2766_end_0, end_mask = var_2766_end_mask_0, squeeze_mask = var_2766_squeeze_mask_0, x = var_2763_cast_fp16)[name = tensor<string, []>("op_2766_cast_fp16")];
            tensor<int32, [4]> var_2781_begin_0 = const()[name = tensor<string, []>("op_2781_begin_0"), val = tensor<int32, [4]>([0, 8, 0, 0])];
            tensor<int32, [4]> var_2781_end_0 = const()[name = tensor<string, []>("op_2781_end_0"), val = tensor<int32, [4]>([1, 9, 1, 1500])];
            tensor<bool, [4]> var_2781_end_mask_0 = const()[name = tensor<string, []>("op_2781_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_2781_cast_fp16 = slice_by_index(begin = var_2781_begin_0, end = var_2781_end_0, end_mask = var_2781_end_mask_0, x = obj_111_cast_fp16)[name = tensor<string, []>("op_2781_cast_fp16")];
            tensor<int32, [4]> var_2784_begin_0 = const()[name = tensor<string, []>("op_2784_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2784_end_0 = const()[name = tensor<string, []>("op_2784_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2784_end_mask_0 = const()[name = tensor<string, []>("op_2784_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_2784_squeeze_mask_0 = const()[name = tensor<string, []>("op_2784_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_2784_cast_fp16 = slice_by_index(begin = var_2784_begin_0, end = var_2784_end_0, end_mask = var_2784_end_mask_0, squeeze_mask = var_2784_squeeze_mask_0, x = var_2781_cast_fp16)[name = tensor<string, []>("op_2784_cast_fp16")];
            tensor<int32, [4]> var_2799_begin_0 = const()[name = tensor<string, []>("op_2799_begin_0"), val = tensor<int32, [4]>([0, 2, 0, 0])];
            tensor<int32, [4]> var_2799_end_0 = const()[name = tensor<string, []>("op_2799_end_0"), val = tensor<int32, [4]>([1, 3, 1, 1500])];
            tensor<bool, [4]> var_2799_end_mask_0 = const()[name = tensor<string, []>("op_2799_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_2799_cast_fp16 = slice_by_index(begin = var_2799_begin_0, end = var_2799_end_0, end_mask = var_2799_end_mask_0, x = obj_125_cast_fp16)[name = tensor<string, []>("op_2799_cast_fp16")];
            tensor<int32, [4]> var_2802_begin_0 = const()[name = tensor<string, []>("op_2802_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2802_end_0 = const()[name = tensor<string, []>("op_2802_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2802_end_mask_0 = const()[name = tensor<string, []>("op_2802_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_2802_squeeze_mask_0 = const()[name = tensor<string, []>("op_2802_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_2802_cast_fp16 = slice_by_index(begin = var_2802_begin_0, end = var_2802_end_0, end_mask = var_2802_end_mask_0, squeeze_mask = var_2802_squeeze_mask_0, x = var_2799_cast_fp16)[name = tensor<string, []>("op_2802_cast_fp16")];
            tensor<int32, [4]> var_2817_begin_0 = const()[name = tensor<string, []>("op_2817_begin_0"), val = tensor<int32, [4]>([0, 5, 0, 0])];
            tensor<int32, [4]> var_2817_end_0 = const()[name = tensor<string, []>("op_2817_end_0"), val = tensor<int32, [4]>([1, 6, 1, 1500])];
            tensor<bool, [4]> var_2817_end_mask_0 = const()[name = tensor<string, []>("op_2817_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_2817_cast_fp16 = slice_by_index(begin = var_2817_begin_0, end = var_2817_end_0, end_mask = var_2817_end_mask_0, x = obj_125_cast_fp16)[name = tensor<string, []>("op_2817_cast_fp16")];
            tensor<int32, [4]> var_2820_begin_0 = const()[name = tensor<string, []>("op_2820_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2820_end_0 = const()[name = tensor<string, []>("op_2820_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2820_end_mask_0 = const()[name = tensor<string, []>("op_2820_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_2820_squeeze_mask_0 = const()[name = tensor<string, []>("op_2820_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_2820_cast_fp16 = slice_by_index(begin = var_2820_begin_0, end = var_2820_end_0, end_mask = var_2820_end_mask_0, squeeze_mask = var_2820_squeeze_mask_0, x = var_2817_cast_fp16)[name = tensor<string, []>("op_2820_cast_fp16")];
            tensor<int32, [4]> var_2835_begin_0 = const()[name = tensor<string, []>("op_2835_begin_0"), val = tensor<int32, [4]>([0, 7, 0, 0])];
            tensor<int32, [4]> var_2835_end_0 = const()[name = tensor<string, []>("op_2835_end_0"), val = tensor<int32, [4]>([1, 8, 1, 1500])];
            tensor<bool, [4]> var_2835_end_mask_0 = const()[name = tensor<string, []>("op_2835_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_2835_cast_fp16 = slice_by_index(begin = var_2835_begin_0, end = var_2835_end_0, end_mask = var_2835_end_mask_0, x = obj_125_cast_fp16)[name = tensor<string, []>("op_2835_cast_fp16")];
            tensor<int32, [4]> var_2838_begin_0 = const()[name = tensor<string, []>("op_2838_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2838_end_0 = const()[name = tensor<string, []>("op_2838_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2838_end_mask_0 = const()[name = tensor<string, []>("op_2838_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_2838_squeeze_mask_0 = const()[name = tensor<string, []>("op_2838_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_2838_cast_fp16 = slice_by_index(begin = var_2838_begin_0, end = var_2838_end_0, end_mask = var_2838_end_mask_0, squeeze_mask = var_2838_squeeze_mask_0, x = var_2835_cast_fp16)[name = tensor<string, []>("op_2838_cast_fp16")];
            tensor<int32, [4]> var_2853_begin_0 = const()[name = tensor<string, []>("op_2853_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2853_end_0 = const()[name = tensor<string, []>("op_2853_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2853_end_mask_0 = const()[name = tensor<string, []>("op_2853_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_2853_cast_fp16 = slice_by_index(begin = var_2853_begin_0, end = var_2853_end_0, end_mask = var_2853_end_mask_0, x = obj_139_cast_fp16)[name = tensor<string, []>("op_2853_cast_fp16")];
            tensor<int32, [4]> var_2856_begin_0 = const()[name = tensor<string, []>("op_2856_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2856_end_0 = const()[name = tensor<string, []>("op_2856_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2856_end_mask_0 = const()[name = tensor<string, []>("op_2856_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_2856_squeeze_mask_0 = const()[name = tensor<string, []>("op_2856_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_2856_cast_fp16 = slice_by_index(begin = var_2856_begin_0, end = var_2856_end_0, end_mask = var_2856_end_mask_0, squeeze_mask = var_2856_squeeze_mask_0, x = var_2853_cast_fp16)[name = tensor<string, []>("op_2856_cast_fp16")];
            tensor<int32, [4]> var_2871_begin_0 = const()[name = tensor<string, []>("op_2871_begin_0"), val = tensor<int32, [4]>([0, 4, 0, 0])];
            tensor<int32, [4]> var_2871_end_0 = const()[name = tensor<string, []>("op_2871_end_0"), val = tensor<int32, [4]>([1, 5, 1, 1500])];
            tensor<bool, [4]> var_2871_end_mask_0 = const()[name = tensor<string, []>("op_2871_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_2871_cast_fp16 = slice_by_index(begin = var_2871_begin_0, end = var_2871_end_0, end_mask = var_2871_end_mask_0, x = obj_139_cast_fp16)[name = tensor<string, []>("op_2871_cast_fp16")];
            tensor<int32, [4]> var_2874_begin_0 = const()[name = tensor<string, []>("op_2874_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2874_end_0 = const()[name = tensor<string, []>("op_2874_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2874_end_mask_0 = const()[name = tensor<string, []>("op_2874_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_2874_squeeze_mask_0 = const()[name = tensor<string, []>("op_2874_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_2874_cast_fp16 = slice_by_index(begin = var_2874_begin_0, end = var_2874_end_0, end_mask = var_2874_end_mask_0, squeeze_mask = var_2874_squeeze_mask_0, x = var_2871_cast_fp16)[name = tensor<string, []>("op_2874_cast_fp16")];
            tensor<int32, [4]> var_2889_begin_0 = const()[name = tensor<string, []>("op_2889_begin_0"), val = tensor<int32, [4]>([0, 8, 0, 0])];
            tensor<int32, [4]> var_2889_end_0 = const()[name = tensor<string, []>("op_2889_end_0"), val = tensor<int32, [4]>([1, 9, 1, 1500])];
            tensor<bool, [4]> var_2889_end_mask_0 = const()[name = tensor<string, []>("op_2889_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_2889_cast_fp16 = slice_by_index(begin = var_2889_begin_0, end = var_2889_end_0, end_mask = var_2889_end_mask_0, x = obj_139_cast_fp16)[name = tensor<string, []>("op_2889_cast_fp16")];
            tensor<int32, [4]> var_2892_begin_0 = const()[name = tensor<string, []>("op_2892_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2892_end_0 = const()[name = tensor<string, []>("op_2892_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2892_end_mask_0 = const()[name = tensor<string, []>("op_2892_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_2892_squeeze_mask_0 = const()[name = tensor<string, []>("op_2892_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_2892_cast_fp16 = slice_by_index(begin = var_2892_begin_0, end = var_2892_end_0, end_mask = var_2892_end_mask_0, squeeze_mask = var_2892_squeeze_mask_0, x = var_2889_cast_fp16)[name = tensor<string, []>("op_2892_cast_fp16")];
            tensor<int32, [4]> var_2907_begin_0 = const()[name = tensor<string, []>("op_2907_begin_0"), val = tensor<int32, [4]>([0, 10, 0, 0])];
            tensor<int32, [4]> var_2907_end_0 = const()[name = tensor<string, []>("op_2907_end_0"), val = tensor<int32, [4]>([1, 11, 1, 1500])];
            tensor<bool, [4]> var_2907_end_mask_0 = const()[name = tensor<string, []>("op_2907_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_2907_cast_fp16 = slice_by_index(begin = var_2907_begin_0, end = var_2907_end_0, end_mask = var_2907_end_mask_0, x = obj_139_cast_fp16)[name = tensor<string, []>("op_2907_cast_fp16")];
            tensor<int32, [4]> var_2910_begin_0 = const()[name = tensor<string, []>("op_2910_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2910_end_0 = const()[name = tensor<string, []>("op_2910_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2910_end_mask_0 = const()[name = tensor<string, []>("op_2910_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_2910_squeeze_mask_0 = const()[name = tensor<string, []>("op_2910_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_2910_cast_fp16 = slice_by_index(begin = var_2910_begin_0, end = var_2910_end_0, end_mask = var_2910_end_mask_0, squeeze_mask = var_2910_squeeze_mask_0, x = var_2907_cast_fp16)[name = tensor<string, []>("op_2910_cast_fp16")];
            tensor<int32, [4]> var_2925_begin_0 = const()[name = tensor<string, []>("op_2925_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2925_end_0 = const()[name = tensor<string, []>("op_2925_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2925_end_mask_0 = const()[name = tensor<string, []>("op_2925_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_2925_cast_fp16 = slice_by_index(begin = var_2925_begin_0, end = var_2925_end_0, end_mask = var_2925_end_mask_0, x = obj_153_cast_fp16)[name = tensor<string, []>("op_2925_cast_fp16")];
            tensor<int32, [4]> var_2928_begin_0 = const()[name = tensor<string, []>("op_2928_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2928_end_0 = const()[name = tensor<string, []>("op_2928_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2928_end_mask_0 = const()[name = tensor<string, []>("op_2928_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_2928_squeeze_mask_0 = const()[name = tensor<string, []>("op_2928_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_2928_cast_fp16 = slice_by_index(begin = var_2928_begin_0, end = var_2928_end_0, end_mask = var_2928_end_mask_0, squeeze_mask = var_2928_squeeze_mask_0, x = var_2925_cast_fp16)[name = tensor<string, []>("op_2928_cast_fp16")];
            tensor<int32, [4]> var_2943_begin_0 = const()[name = tensor<string, []>("op_2943_begin_0"), val = tensor<int32, [4]>([0, 1, 0, 0])];
            tensor<int32, [4]> var_2943_end_0 = const()[name = tensor<string, []>("op_2943_end_0"), val = tensor<int32, [4]>([1, 2, 1, 1500])];
            tensor<bool, [4]> var_2943_end_mask_0 = const()[name = tensor<string, []>("op_2943_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_2943_cast_fp16 = slice_by_index(begin = var_2943_begin_0, end = var_2943_end_0, end_mask = var_2943_end_mask_0, x = obj_153_cast_fp16)[name = tensor<string, []>("op_2943_cast_fp16")];
            tensor<int32, [4]> var_2946_begin_0 = const()[name = tensor<string, []>("op_2946_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2946_end_0 = const()[name = tensor<string, []>("op_2946_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2946_end_mask_0 = const()[name = tensor<string, []>("op_2946_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_2946_squeeze_mask_0 = const()[name = tensor<string, []>("op_2946_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_2946_cast_fp16 = slice_by_index(begin = var_2946_begin_0, end = var_2946_end_0, end_mask = var_2946_end_mask_0, squeeze_mask = var_2946_squeeze_mask_0, x = var_2943_cast_fp16)[name = tensor<string, []>("op_2946_cast_fp16")];
            tensor<int32, [4]> var_2961_begin_0 = const()[name = tensor<string, []>("op_2961_begin_0"), val = tensor<int32, [4]>([0, 2, 0, 0])];
            tensor<int32, [4]> var_2961_end_0 = const()[name = tensor<string, []>("op_2961_end_0"), val = tensor<int32, [4]>([1, 3, 1, 1500])];
            tensor<bool, [4]> var_2961_end_mask_0 = const()[name = tensor<string, []>("op_2961_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_2961_cast_fp16 = slice_by_index(begin = var_2961_begin_0, end = var_2961_end_0, end_mask = var_2961_end_mask_0, x = obj_153_cast_fp16)[name = tensor<string, []>("op_2961_cast_fp16")];
            tensor<int32, [4]> var_2964_begin_0 = const()[name = tensor<string, []>("op_2964_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2964_end_0 = const()[name = tensor<string, []>("op_2964_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2964_end_mask_0 = const()[name = tensor<string, []>("op_2964_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_2964_squeeze_mask_0 = const()[name = tensor<string, []>("op_2964_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_2964_cast_fp16 = slice_by_index(begin = var_2964_begin_0, end = var_2964_end_0, end_mask = var_2964_end_mask_0, squeeze_mask = var_2964_squeeze_mask_0, x = var_2961_cast_fp16)[name = tensor<string, []>("op_2964_cast_fp16")];
            tensor<int32, [4]> var_2979_begin_0 = const()[name = tensor<string, []>("op_2979_begin_0"), val = tensor<int32, [4]>([0, 3, 0, 0])];
            tensor<int32, [4]> var_2979_end_0 = const()[name = tensor<string, []>("op_2979_end_0"), val = tensor<int32, [4]>([1, 4, 1, 1500])];
            tensor<bool, [4]> var_2979_end_mask_0 = const()[name = tensor<string, []>("op_2979_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_2979_cast_fp16 = slice_by_index(begin = var_2979_begin_0, end = var_2979_end_0, end_mask = var_2979_end_mask_0, x = obj_153_cast_fp16)[name = tensor<string, []>("op_2979_cast_fp16")];
            tensor<int32, [4]> var_2982_begin_0 = const()[name = tensor<string, []>("op_2982_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2982_end_0 = const()[name = tensor<string, []>("op_2982_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_2982_end_mask_0 = const()[name = tensor<string, []>("op_2982_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_2982_squeeze_mask_0 = const()[name = tensor<string, []>("op_2982_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_2982_cast_fp16 = slice_by_index(begin = var_2982_begin_0, end = var_2982_end_0, end_mask = var_2982_end_mask_0, squeeze_mask = var_2982_squeeze_mask_0, x = var_2979_cast_fp16)[name = tensor<string, []>("op_2982_cast_fp16")];
            tensor<int32, [4]> var_2997_begin_0 = const()[name = tensor<string, []>("op_2997_begin_0"), val = tensor<int32, [4]>([0, 6, 0, 0])];
            tensor<int32, [4]> var_2997_end_0 = const()[name = tensor<string, []>("op_2997_end_0"), val = tensor<int32, [4]>([1, 7, 1, 1500])];
            tensor<bool, [4]> var_2997_end_mask_0 = const()[name = tensor<string, []>("op_2997_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_2997_cast_fp16 = slice_by_index(begin = var_2997_begin_0, end = var_2997_end_0, end_mask = var_2997_end_mask_0, x = obj_153_cast_fp16)[name = tensor<string, []>("op_2997_cast_fp16")];
            tensor<int32, [4]> var_3000_begin_0 = const()[name = tensor<string, []>("op_3000_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3000_end_0 = const()[name = tensor<string, []>("op_3000_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_3000_end_mask_0 = const()[name = tensor<string, []>("op_3000_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_3000_squeeze_mask_0 = const()[name = tensor<string, []>("op_3000_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_3000_cast_fp16 = slice_by_index(begin = var_3000_begin_0, end = var_3000_end_0, end_mask = var_3000_end_mask_0, squeeze_mask = var_3000_squeeze_mask_0, x = var_2997_cast_fp16)[name = tensor<string, []>("op_3000_cast_fp16")];
            tensor<int32, [4]> var_3015_begin_0 = const()[name = tensor<string, []>("op_3015_begin_0"), val = tensor<int32, [4]>([0, 11, 0, 0])];
            tensor<int32, [4]> var_3015_end_0 = const()[name = tensor<string, []>("op_3015_end_0"), val = tensor<int32, [4]>([1, 12, 1, 1500])];
            tensor<bool, [4]> var_3015_end_mask_0 = const()[name = tensor<string, []>("op_3015_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_3015_cast_fp16 = slice_by_index(begin = var_3015_begin_0, end = var_3015_end_0, end_mask = var_3015_end_mask_0, x = obj_153_cast_fp16)[name = tensor<string, []>("op_3015_cast_fp16")];
            tensor<int32, [4]> var_3018_begin_0 = const()[name = tensor<string, []>("op_3018_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3018_end_0 = const()[name = tensor<string, []>("op_3018_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_3018_end_mask_0 = const()[name = tensor<string, []>("op_3018_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_3018_squeeze_mask_0 = const()[name = tensor<string, []>("op_3018_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_3018_cast_fp16 = slice_by_index(begin = var_3018_begin_0, end = var_3018_end_0, end_mask = var_3018_end_mask_0, squeeze_mask = var_3018_squeeze_mask_0, x = var_3015_cast_fp16)[name = tensor<string, []>("op_3018_cast_fp16")];
            tensor<int32, [4]> var_3033_begin_0 = const()[name = tensor<string, []>("op_3033_begin_0"), val = tensor<int32, [4]>([0, 2, 0, 0])];
            tensor<int32, [4]> var_3033_end_0 = const()[name = tensor<string, []>("op_3033_end_0"), val = tensor<int32, [4]>([1, 3, 1, 1500])];
            tensor<bool, [4]> var_3033_end_mask_0 = const()[name = tensor<string, []>("op_3033_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_3033_cast_fp16 = slice_by_index(begin = var_3033_begin_0, end = var_3033_end_0, end_mask = var_3033_end_mask_0, x = obj_167_cast_fp16)[name = tensor<string, []>("op_3033_cast_fp16")];
            tensor<int32, [4]> var_3036_begin_0 = const()[name = tensor<string, []>("op_3036_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3036_end_0 = const()[name = tensor<string, []>("op_3036_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_3036_end_mask_0 = const()[name = tensor<string, []>("op_3036_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_3036_squeeze_mask_0 = const()[name = tensor<string, []>("op_3036_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_3036_cast_fp16 = slice_by_index(begin = var_3036_begin_0, end = var_3036_end_0, end_mask = var_3036_end_mask_0, squeeze_mask = var_3036_squeeze_mask_0, x = var_3033_cast_fp16)[name = tensor<string, []>("op_3036_cast_fp16")];
            tensor<int32, [4]> var_3051_begin_0 = const()[name = tensor<string, []>("op_3051_begin_0"), val = tensor<int32, [4]>([0, 4, 0, 0])];
            tensor<int32, [4]> var_3051_end_0 = const()[name = tensor<string, []>("op_3051_end_0"), val = tensor<int32, [4]>([1, 5, 1, 1500])];
            tensor<bool, [4]> var_3051_end_mask_0 = const()[name = tensor<string, []>("op_3051_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 1, 1, 1500]> var_3051_cast_fp16 = slice_by_index(begin = var_3051_begin_0, end = var_3051_end_0, end_mask = var_3051_end_mask_0, x = obj_167_cast_fp16)[name = tensor<string, []>("op_3051_cast_fp16")];
            tensor<int32, [4]> var_3054_begin_0 = const()[name = tensor<string, []>("op_3054_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3054_end_0 = const()[name = tensor<string, []>("op_3054_end_0"), val = tensor<int32, [4]>([1, 1, 1, 1500])];
            tensor<bool, [4]> var_3054_end_mask_0 = const()[name = tensor<string, []>("op_3054_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<bool, [4]> var_3054_squeeze_mask_0 = const()[name = tensor<string, []>("op_3054_squeeze_mask_0"), val = tensor<bool, [4]>([false, false, true, false])];
            tensor<fp16, [1, 1, 1500]> var_3054_cast_fp16 = slice_by_index(begin = var_3054_begin_0, end = var_3054_end_0, end_mask = var_3054_end_mask_0, squeeze_mask = var_3054_squeeze_mask_0, x = var_3051_cast_fp16)[name = tensor<string, []>("op_3054_cast_fp16")];
            tensor<int32, []> var_3061 = const()[name = tensor<string, []>("op_3061"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_3062_interleave_0 = const()[name = tensor<string, []>("op_3062_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 19, 1500]> var_3062_cast_fp16 = concat(axis = var_3061, interleave = var_3062_interleave_0, values = (var_2730_cast_fp16, var_2748_cast_fp16, var_2766_cast_fp16, var_2784_cast_fp16, var_2802_cast_fp16, var_2820_cast_fp16, var_2838_cast_fp16, var_2856_cast_fp16, var_2874_cast_fp16, var_2892_cast_fp16, var_2910_cast_fp16, var_2928_cast_fp16, var_2946_cast_fp16, var_2964_cast_fp16, var_2982_cast_fp16, var_3000_cast_fp16, var_3018_cast_fp16, var_3036_cast_fp16, var_3054_cast_fp16))[name = tensor<string, []>("op_3062_cast_fp16")];
            tensor<int32, [1]> var_3064 = const()[name = tensor<string, []>("op_3064"), val = tensor<int32, [1]>([1])];
            tensor<bool, []> var_3065 = const()[name = tensor<string, []>("op_3065"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1500]> alignment_heads_weights = reduce_mean(axes = var_3064, keep_dims = var_3065, x = var_3062_cast_fp16)[name = tensor<string, []>("obj_cast_fp16")];
        } -> (logits, key_cache_updates, value_cache_updates, alignment_heads_weights);
}