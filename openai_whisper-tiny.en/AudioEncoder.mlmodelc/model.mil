program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "5.33.5"}, {"coremlc-version", "1877.40.3"}, {"coremltools-component-torch", "2.2.1"}, {"coremltools-source-dialect", "TorchScript"}, {"coremltools-version", "7.1"}})]
{
    func main<ios16>(tensor<fp16, [1, 80, 1, 3000]> melspectrogram_features) {
            tensor<int32, [2]> var_34 = const()[name = tensor<string, []>("op_34"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_40 = const()[name = tensor<string, []>("op_40"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_45 = const()[name = tensor<string, []>("op_45"), val = tensor<int32, []>(1)];
            tensor<string, []> var_50_pad_type_0 = const()[name = tensor<string, []>("op_50_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_50_pad_0 = const()[name = tensor<string, []>("op_50_pad_0"), val = tensor<int32, [4]>([0, 0, 1, 1])];
            tensor<fp16, [384, 80, 1, 3]> var_25_to_fp16 = const()[name = tensor<string, []>("op_25_to_fp16"), val = tensor<fp16, [384, 80, 1, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [384]> var_31_to_fp16 = const()[name = tensor<string, []>("op_31_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(184448)))];
            tensor<fp16, [1, 384, 1, 3000]> var_50_cast_fp16 = conv(bias = var_31_to_fp16, dilations = var_40, groups = var_45, pad = var_50_pad_0, pad_type = var_50_pad_type_0, strides = var_34, weight = var_25_to_fp16, x = melspectrogram_features)[name = tensor<string, []>("op_50_cast_fp16")];
            tensor<string, []> hidden_states_1_mode_0 = const()[name = tensor<string, []>("hidden_states_1_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 384, 1, 3000]> hidden_states_1_cast_fp16 = gelu(mode = hidden_states_1_mode_0, x = var_50_cast_fp16)[name = tensor<string, []>("hidden_states_1_cast_fp16")];
            tensor<int32, [2]> var_74 = const()[name = tensor<string, []>("op_74"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_80 = const()[name = tensor<string, []>("op_80"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_85 = const()[name = tensor<string, []>("op_85"), val = tensor<int32, []>(1)];
            tensor<string, []> var_90_pad_type_0 = const()[name = tensor<string, []>("op_90_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_90_pad_0 = const()[name = tensor<string, []>("op_90_pad_0"), val = tensor<int32, [4]>([0, 0, 1, 1])];
            tensor<fp16, [384, 384, 1, 3]> var_65_to_fp16 = const()[name = tensor<string, []>("op_65_to_fp16"), val = tensor<fp16, [384, 384, 1, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(185280)))];
            tensor<fp16, [384]> var_71_to_fp16 = const()[name = tensor<string, []>("op_71_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1070080)))];
            tensor<fp16, [1, 384, 1, 1500]> var_90_cast_fp16 = conv(bias = var_71_to_fp16, dilations = var_80, groups = var_85, pad = var_90_pad_0, pad_type = var_90_pad_type_0, strides = var_74, weight = var_65_to_fp16, x = hidden_states_1_cast_fp16)[name = tensor<string, []>("op_90_cast_fp16")];
            tensor<string, []> hidden_states_3_mode_0 = const()[name = tensor<string, []>("hidden_states_3_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 384, 1, 1500]> hidden_states_3_cast_fp16 = gelu(mode = hidden_states_3_mode_0, x = var_90_cast_fp16)[name = tensor<string, []>("hidden_states_3_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> var_108_to_fp16 = const()[name = tensor<string, []>("op_108_to_fp16"), val = tensor<fp16, [1, 384, 1, 1500]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1070912)))];
            tensor<fp16, [1, 384, 1, 1500]> inputs_1_cast_fp16 = add(x = hidden_states_3_cast_fp16, y = var_108_to_fp16)[name = tensor<string, []>("inputs_1_cast_fp16")];
            tensor<int32, []> var_118 = const()[name = tensor<string, []>("op_118"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_129 = const()[name = tensor<string, []>("op_129"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_130 = const()[name = tensor<string, []>("op_130"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_140 = const()[name = tensor<string, []>("op_140"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1500]> channels_mean_1_cast_fp16 = reduce_mean(axes = var_140, keep_dims = var_130, x = inputs_1_cast_fp16)[name = tensor<string, []>("channels_mean_1_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> zero_mean_1_cast_fp16 = sub(x = inputs_1_cast_fp16, y = channels_mean_1_cast_fp16)[name = tensor<string, []>("zero_mean_1_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> zero_mean_sq_1_cast_fp16 = mul(x = zero_mean_1_cast_fp16, y = zero_mean_1_cast_fp16)[name = tensor<string, []>("zero_mean_sq_1_cast_fp16")];
            tensor<int32, [1]> var_144 = const()[name = tensor<string, []>("op_144"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1500]> var_145_cast_fp16 = reduce_mean(axes = var_144, keep_dims = var_130, x = zero_mean_sq_1_cast_fp16)[name = tensor<string, []>("op_145_cast_fp16")];
            tensor<fp16, []> var_146_to_fp16 = const()[name = tensor<string, []>("op_146_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1500]> var_147_cast_fp16 = add(x = var_145_cast_fp16, y = var_146_to_fp16)[name = tensor<string, []>("op_147_cast_fp16")];
            tensor<fp16, []> denom_1_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_1_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1500]> denom_1_cast_fp16 = rsqrt(epsilon = denom_1_epsilon_0_to_fp16, x = var_147_cast_fp16)[name = tensor<string, []>("denom_1_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> out_1_cast_fp16 = mul(x = zero_mean_1_cast_fp16, y = denom_1_cast_fp16)[name = tensor<string, []>("out_1_cast_fp16")];
            tensor<fp16, [384]> obj_1_mean_0_to_fp16 = const()[name = tensor<string, []>("obj_1_mean_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2222976)))];
            tensor<fp16, [384]> obj_1_variance_0_to_fp16 = const()[name = tensor<string, []>("obj_1_variance_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2223808)))];
            tensor<fp16, [384]> obj_1_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_1_gamma_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2224640)))];
            tensor<fp16, [384]> obj_1_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_1_beta_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2225472)))];
            tensor<fp16, []> obj_1_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_1_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 384, 1, 1500]> obj_1_cast_fp16 = batch_norm(beta = obj_1_beta_0_to_fp16, epsilon = obj_1_epsilon_0_to_fp16, gamma = obj_1_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_1_cast_fp16)[name = tensor<string, []>("obj_1_cast_fp16")];
            tensor<int32, [2]> var_162 = const()[name = tensor<string, []>("op_162"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_164 = const()[name = tensor<string, []>("op_164"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_1_pad_type_0 = const()[name = tensor<string, []>("query_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_1_pad_0 = const()[name = tensor<string, []>("query_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_0_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2226304)))];
            tensor<fp16, [384]> layers_0_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2521280)))];
            tensor<fp16, [1, 384, 1, 1500]> query_1_cast_fp16 = conv(bias = layers_0_self_attn_q_proj_bias_to_fp16, dilations = var_164, groups = var_129, pad = query_1_pad_0, pad_type = query_1_pad_type_0, strides = var_162, weight = layers_0_self_attn_q_proj_weight_to_fp16, x = obj_1_cast_fp16)[name = tensor<string, []>("query_1_cast_fp16")];
            tensor<int32, [2]> var_168 = const()[name = tensor<string, []>("op_168"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_170 = const()[name = tensor<string, []>("op_170"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_1_pad_type_0 = const()[name = tensor<string, []>("key_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_1_pad_0 = const()[name = tensor<string, []>("key_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_0_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2522112)))];
            tensor<fp16, [1, 384, 1, 1500]> key_1_cast_fp16 = conv(dilations = var_170, groups = var_129, pad = key_1_pad_0, pad_type = key_1_pad_type_0, strides = var_168, weight = layers_0_self_attn_k_proj_weight_to_fp16, x = obj_1_cast_fp16)[name = tensor<string, []>("key_1_cast_fp16")];
            tensor<int32, [2]> var_175 = const()[name = tensor<string, []>("op_175"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_177 = const()[name = tensor<string, []>("op_177"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_1_pad_type_0 = const()[name = tensor<string, []>("value_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_1_pad_0 = const()[name = tensor<string, []>("value_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_0_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2817088)))];
            tensor<fp16, [384]> layers_0_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3112064)))];
            tensor<fp16, [1, 384, 1, 1500]> value_1_cast_fp16 = conv(bias = layers_0_self_attn_v_proj_bias_to_fp16, dilations = var_177, groups = var_129, pad = value_1_pad_0, pad_type = value_1_pad_type_0, strides = var_175, weight = layers_0_self_attn_v_proj_weight_to_fp16, x = obj_1_cast_fp16)[name = tensor<string, []>("value_1_cast_fp16")];
            tensor<int32, [4]> var_184_begin_0 = const()[name = tensor<string, []>("op_184_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_184_end_0 = const()[name = tensor<string, []>("op_184_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_184_end_mask_0 = const()[name = tensor<string, []>("op_184_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_184_cast_fp16 = slice_by_index(begin = var_184_begin_0, end = var_184_end_0, end_mask = var_184_end_mask_0, x = query_1_cast_fp16)[name = tensor<string, []>("op_184_cast_fp16")];
            tensor<int32, [4]> var_188_begin_0 = const()[name = tensor<string, []>("op_188_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_188_end_0 = const()[name = tensor<string, []>("op_188_end_0"), val = tensor<int32, [4]>([1, 128, 1, 1500])];
            tensor<bool, [4]> var_188_end_mask_0 = const()[name = tensor<string, []>("op_188_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_188_cast_fp16 = slice_by_index(begin = var_188_begin_0, end = var_188_end_0, end_mask = var_188_end_mask_0, x = query_1_cast_fp16)[name = tensor<string, []>("op_188_cast_fp16")];
            tensor<int32, [4]> var_192_begin_0 = const()[name = tensor<string, []>("op_192_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_192_end_0 = const()[name = tensor<string, []>("op_192_end_0"), val = tensor<int32, [4]>([1, 192, 1, 1500])];
            tensor<bool, [4]> var_192_end_mask_0 = const()[name = tensor<string, []>("op_192_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_192_cast_fp16 = slice_by_index(begin = var_192_begin_0, end = var_192_end_0, end_mask = var_192_end_mask_0, x = query_1_cast_fp16)[name = tensor<string, []>("op_192_cast_fp16")];
            tensor<int32, [4]> var_196_begin_0 = const()[name = tensor<string, []>("op_196_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_196_end_0 = const()[name = tensor<string, []>("op_196_end_0"), val = tensor<int32, [4]>([1, 256, 1, 1500])];
            tensor<bool, [4]> var_196_end_mask_0 = const()[name = tensor<string, []>("op_196_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_196_cast_fp16 = slice_by_index(begin = var_196_begin_0, end = var_196_end_0, end_mask = var_196_end_mask_0, x = query_1_cast_fp16)[name = tensor<string, []>("op_196_cast_fp16")];
            tensor<int32, [4]> var_200_begin_0 = const()[name = tensor<string, []>("op_200_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_200_end_0 = const()[name = tensor<string, []>("op_200_end_0"), val = tensor<int32, [4]>([1, 320, 1, 1500])];
            tensor<bool, [4]> var_200_end_mask_0 = const()[name = tensor<string, []>("op_200_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_200_cast_fp16 = slice_by_index(begin = var_200_begin_0, end = var_200_end_0, end_mask = var_200_end_mask_0, x = query_1_cast_fp16)[name = tensor<string, []>("op_200_cast_fp16")];
            tensor<int32, [4]> var_204_begin_0 = const()[name = tensor<string, []>("op_204_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_204_end_0 = const()[name = tensor<string, []>("op_204_end_0"), val = tensor<int32, [4]>([1, 384, 1, 1500])];
            tensor<bool, [4]> var_204_end_mask_0 = const()[name = tensor<string, []>("op_204_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_204_cast_fp16 = slice_by_index(begin = var_204_begin_0, end = var_204_end_0, end_mask = var_204_end_mask_0, x = query_1_cast_fp16)[name = tensor<string, []>("op_204_cast_fp16")];
            tensor<int32, [4]> var_213_begin_0 = const()[name = tensor<string, []>("op_213_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_213_end_0 = const()[name = tensor<string, []>("op_213_end_0"), val = tensor<int32, [4]>([1, 64, 1, 375])];
            tensor<bool, [4]> var_213_end_mask_0 = const()[name = tensor<string, []>("op_213_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_213_cast_fp16 = slice_by_index(begin = var_213_begin_0, end = var_213_end_0, end_mask = var_213_end_mask_0, x = var_184_cast_fp16)[name = tensor<string, []>("op_213_cast_fp16")];
            tensor<int32, [4]> var_220_begin_0 = const()[name = tensor<string, []>("op_220_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 375])];
            tensor<int32, [4]> var_220_end_0 = const()[name = tensor<string, []>("op_220_end_0"), val = tensor<int32, [4]>([1, 64, 1, 750])];
            tensor<bool, [4]> var_220_end_mask_0 = const()[name = tensor<string, []>("op_220_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_220_cast_fp16 = slice_by_index(begin = var_220_begin_0, end = var_220_end_0, end_mask = var_220_end_mask_0, x = var_184_cast_fp16)[name = tensor<string, []>("op_220_cast_fp16")];
            tensor<int32, [4]> var_227_begin_0 = const()[name = tensor<string, []>("op_227_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 750])];
            tensor<int32, [4]> var_227_end_0 = const()[name = tensor<string, []>("op_227_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1125])];
            tensor<bool, [4]> var_227_end_mask_0 = const()[name = tensor<string, []>("op_227_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_227_cast_fp16 = slice_by_index(begin = var_227_begin_0, end = var_227_end_0, end_mask = var_227_end_mask_0, x = var_184_cast_fp16)[name = tensor<string, []>("op_227_cast_fp16")];
            tensor<int32, [4]> var_234_begin_0 = const()[name = tensor<string, []>("op_234_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1125])];
            tensor<int32, [4]> var_234_end_0 = const()[name = tensor<string, []>("op_234_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_234_end_mask_0 = const()[name = tensor<string, []>("op_234_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_234_cast_fp16 = slice_by_index(begin = var_234_begin_0, end = var_234_end_0, end_mask = var_234_end_mask_0, x = var_184_cast_fp16)[name = tensor<string, []>("op_234_cast_fp16")];
            tensor<int32, [4]> var_241_begin_0 = const()[name = tensor<string, []>("op_241_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_241_end_0 = const()[name = tensor<string, []>("op_241_end_0"), val = tensor<int32, [4]>([1, 64, 1, 375])];
            tensor<bool, [4]> var_241_end_mask_0 = const()[name = tensor<string, []>("op_241_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_241_cast_fp16 = slice_by_index(begin = var_241_begin_0, end = var_241_end_0, end_mask = var_241_end_mask_0, x = var_188_cast_fp16)[name = tensor<string, []>("op_241_cast_fp16")];
            tensor<int32, [4]> var_248_begin_0 = const()[name = tensor<string, []>("op_248_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 375])];
            tensor<int32, [4]> var_248_end_0 = const()[name = tensor<string, []>("op_248_end_0"), val = tensor<int32, [4]>([1, 64, 1, 750])];
            tensor<bool, [4]> var_248_end_mask_0 = const()[name = tensor<string, []>("op_248_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_248_cast_fp16 = slice_by_index(begin = var_248_begin_0, end = var_248_end_0, end_mask = var_248_end_mask_0, x = var_188_cast_fp16)[name = tensor<string, []>("op_248_cast_fp16")];
            tensor<int32, [4]> var_255_begin_0 = const()[name = tensor<string, []>("op_255_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 750])];
            tensor<int32, [4]> var_255_end_0 = const()[name = tensor<string, []>("op_255_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1125])];
            tensor<bool, [4]> var_255_end_mask_0 = const()[name = tensor<string, []>("op_255_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_255_cast_fp16 = slice_by_index(begin = var_255_begin_0, end = var_255_end_0, end_mask = var_255_end_mask_0, x = var_188_cast_fp16)[name = tensor<string, []>("op_255_cast_fp16")];
            tensor<int32, [4]> var_262_begin_0 = const()[name = tensor<string, []>("op_262_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1125])];
            tensor<int32, [4]> var_262_end_0 = const()[name = tensor<string, []>("op_262_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_262_end_mask_0 = const()[name = tensor<string, []>("op_262_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_262_cast_fp16 = slice_by_index(begin = var_262_begin_0, end = var_262_end_0, end_mask = var_262_end_mask_0, x = var_188_cast_fp16)[name = tensor<string, []>("op_262_cast_fp16")];
            tensor<int32, [4]> var_269_begin_0 = const()[name = tensor<string, []>("op_269_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_269_end_0 = const()[name = tensor<string, []>("op_269_end_0"), val = tensor<int32, [4]>([1, 64, 1, 375])];
            tensor<bool, [4]> var_269_end_mask_0 = const()[name = tensor<string, []>("op_269_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_269_cast_fp16 = slice_by_index(begin = var_269_begin_0, end = var_269_end_0, end_mask = var_269_end_mask_0, x = var_192_cast_fp16)[name = tensor<string, []>("op_269_cast_fp16")];
            tensor<int32, [4]> var_276_begin_0 = const()[name = tensor<string, []>("op_276_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 375])];
            tensor<int32, [4]> var_276_end_0 = const()[name = tensor<string, []>("op_276_end_0"), val = tensor<int32, [4]>([1, 64, 1, 750])];
            tensor<bool, [4]> var_276_end_mask_0 = const()[name = tensor<string, []>("op_276_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_276_cast_fp16 = slice_by_index(begin = var_276_begin_0, end = var_276_end_0, end_mask = var_276_end_mask_0, x = var_192_cast_fp16)[name = tensor<string, []>("op_276_cast_fp16")];
            tensor<int32, [4]> var_283_begin_0 = const()[name = tensor<string, []>("op_283_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 750])];
            tensor<int32, [4]> var_283_end_0 = const()[name = tensor<string, []>("op_283_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1125])];
            tensor<bool, [4]> var_283_end_mask_0 = const()[name = tensor<string, []>("op_283_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_283_cast_fp16 = slice_by_index(begin = var_283_begin_0, end = var_283_end_0, end_mask = var_283_end_mask_0, x = var_192_cast_fp16)[name = tensor<string, []>("op_283_cast_fp16")];
            tensor<int32, [4]> var_290_begin_0 = const()[name = tensor<string, []>("op_290_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1125])];
            tensor<int32, [4]> var_290_end_0 = const()[name = tensor<string, []>("op_290_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_290_end_mask_0 = const()[name = tensor<string, []>("op_290_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_290_cast_fp16 = slice_by_index(begin = var_290_begin_0, end = var_290_end_0, end_mask = var_290_end_mask_0, x = var_192_cast_fp16)[name = tensor<string, []>("op_290_cast_fp16")];
            tensor<int32, [4]> var_297_begin_0 = const()[name = tensor<string, []>("op_297_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_297_end_0 = const()[name = tensor<string, []>("op_297_end_0"), val = tensor<int32, [4]>([1, 64, 1, 375])];
            tensor<bool, [4]> var_297_end_mask_0 = const()[name = tensor<string, []>("op_297_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_297_cast_fp16 = slice_by_index(begin = var_297_begin_0, end = var_297_end_0, end_mask = var_297_end_mask_0, x = var_196_cast_fp16)[name = tensor<string, []>("op_297_cast_fp16")];
            tensor<int32, [4]> var_304_begin_0 = const()[name = tensor<string, []>("op_304_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 375])];
            tensor<int32, [4]> var_304_end_0 = const()[name = tensor<string, []>("op_304_end_0"), val = tensor<int32, [4]>([1, 64, 1, 750])];
            tensor<bool, [4]> var_304_end_mask_0 = const()[name = tensor<string, []>("op_304_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_304_cast_fp16 = slice_by_index(begin = var_304_begin_0, end = var_304_end_0, end_mask = var_304_end_mask_0, x = var_196_cast_fp16)[name = tensor<string, []>("op_304_cast_fp16")];
            tensor<int32, [4]> var_311_begin_0 = const()[name = tensor<string, []>("op_311_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 750])];
            tensor<int32, [4]> var_311_end_0 = const()[name = tensor<string, []>("op_311_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1125])];
            tensor<bool, [4]> var_311_end_mask_0 = const()[name = tensor<string, []>("op_311_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_311_cast_fp16 = slice_by_index(begin = var_311_begin_0, end = var_311_end_0, end_mask = var_311_end_mask_0, x = var_196_cast_fp16)[name = tensor<string, []>("op_311_cast_fp16")];
            tensor<int32, [4]> var_318_begin_0 = const()[name = tensor<string, []>("op_318_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1125])];
            tensor<int32, [4]> var_318_end_0 = const()[name = tensor<string, []>("op_318_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_318_end_mask_0 = const()[name = tensor<string, []>("op_318_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_318_cast_fp16 = slice_by_index(begin = var_318_begin_0, end = var_318_end_0, end_mask = var_318_end_mask_0, x = var_196_cast_fp16)[name = tensor<string, []>("op_318_cast_fp16")];
            tensor<int32, [4]> var_325_begin_0 = const()[name = tensor<string, []>("op_325_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_325_end_0 = const()[name = tensor<string, []>("op_325_end_0"), val = tensor<int32, [4]>([1, 64, 1, 375])];
            tensor<bool, [4]> var_325_end_mask_0 = const()[name = tensor<string, []>("op_325_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_325_cast_fp16 = slice_by_index(begin = var_325_begin_0, end = var_325_end_0, end_mask = var_325_end_mask_0, x = var_200_cast_fp16)[name = tensor<string, []>("op_325_cast_fp16")];
            tensor<int32, [4]> var_332_begin_0 = const()[name = tensor<string, []>("op_332_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 375])];
            tensor<int32, [4]> var_332_end_0 = const()[name = tensor<string, []>("op_332_end_0"), val = tensor<int32, [4]>([1, 64, 1, 750])];
            tensor<bool, [4]> var_332_end_mask_0 = const()[name = tensor<string, []>("op_332_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_332_cast_fp16 = slice_by_index(begin = var_332_begin_0, end = var_332_end_0, end_mask = var_332_end_mask_0, x = var_200_cast_fp16)[name = tensor<string, []>("op_332_cast_fp16")];
            tensor<int32, [4]> var_339_begin_0 = const()[name = tensor<string, []>("op_339_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 750])];
            tensor<int32, [4]> var_339_end_0 = const()[name = tensor<string, []>("op_339_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1125])];
            tensor<bool, [4]> var_339_end_mask_0 = const()[name = tensor<string, []>("op_339_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_339_cast_fp16 = slice_by_index(begin = var_339_begin_0, end = var_339_end_0, end_mask = var_339_end_mask_0, x = var_200_cast_fp16)[name = tensor<string, []>("op_339_cast_fp16")];
            tensor<int32, [4]> var_346_begin_0 = const()[name = tensor<string, []>("op_346_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1125])];
            tensor<int32, [4]> var_346_end_0 = const()[name = tensor<string, []>("op_346_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_346_end_mask_0 = const()[name = tensor<string, []>("op_346_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_346_cast_fp16 = slice_by_index(begin = var_346_begin_0, end = var_346_end_0, end_mask = var_346_end_mask_0, x = var_200_cast_fp16)[name = tensor<string, []>("op_346_cast_fp16")];
            tensor<int32, [4]> var_353_begin_0 = const()[name = tensor<string, []>("op_353_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_353_end_0 = const()[name = tensor<string, []>("op_353_end_0"), val = tensor<int32, [4]>([1, 64, 1, 375])];
            tensor<bool, [4]> var_353_end_mask_0 = const()[name = tensor<string, []>("op_353_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_353_cast_fp16 = slice_by_index(begin = var_353_begin_0, end = var_353_end_0, end_mask = var_353_end_mask_0, x = var_204_cast_fp16)[name = tensor<string, []>("op_353_cast_fp16")];
            tensor<int32, [4]> var_360_begin_0 = const()[name = tensor<string, []>("op_360_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 375])];
            tensor<int32, [4]> var_360_end_0 = const()[name = tensor<string, []>("op_360_end_0"), val = tensor<int32, [4]>([1, 64, 1, 750])];
            tensor<bool, [4]> var_360_end_mask_0 = const()[name = tensor<string, []>("op_360_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_360_cast_fp16 = slice_by_index(begin = var_360_begin_0, end = var_360_end_0, end_mask = var_360_end_mask_0, x = var_204_cast_fp16)[name = tensor<string, []>("op_360_cast_fp16")];
            tensor<int32, [4]> var_367_begin_0 = const()[name = tensor<string, []>("op_367_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 750])];
            tensor<int32, [4]> var_367_end_0 = const()[name = tensor<string, []>("op_367_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1125])];
            tensor<bool, [4]> var_367_end_mask_0 = const()[name = tensor<string, []>("op_367_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_367_cast_fp16 = slice_by_index(begin = var_367_begin_0, end = var_367_end_0, end_mask = var_367_end_mask_0, x = var_204_cast_fp16)[name = tensor<string, []>("op_367_cast_fp16")];
            tensor<int32, [4]> var_374_begin_0 = const()[name = tensor<string, []>("op_374_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1125])];
            tensor<int32, [4]> var_374_end_0 = const()[name = tensor<string, []>("op_374_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_374_end_mask_0 = const()[name = tensor<string, []>("op_374_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_374_cast_fp16 = slice_by_index(begin = var_374_begin_0, end = var_374_end_0, end_mask = var_374_end_mask_0, x = var_204_cast_fp16)[name = tensor<string, []>("op_374_cast_fp16")];
            tensor<int32, [4]> k_1_perm_0 = const()[name = tensor<string, []>("k_1_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_379_begin_0 = const()[name = tensor<string, []>("op_379_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_379_end_0 = const()[name = tensor<string, []>("op_379_end_0"), val = tensor<int32, [4]>([1, 1500, 1, 64])];
            tensor<bool, [4]> var_379_end_mask_0 = const()[name = tensor<string, []>("op_379_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 1500, 1, 384]> transpose_3 = transpose(perm = k_1_perm_0, x = key_1_cast_fp16)[name = tensor<string, []>("transpose_3")];
            tensor<fp16, [1, 1500, 1, 64]> var_379_cast_fp16 = slice_by_index(begin = var_379_begin_0, end = var_379_end_0, end_mask = var_379_end_mask_0, x = transpose_3)[name = tensor<string, []>("op_379_cast_fp16")];
            tensor<int32, [4]> var_383_begin_0 = const()[name = tensor<string, []>("op_383_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_383_end_0 = const()[name = tensor<string, []>("op_383_end_0"), val = tensor<int32, [4]>([1, 1500, 1, 128])];
            tensor<bool, [4]> var_383_end_mask_0 = const()[name = tensor<string, []>("op_383_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 1500, 1, 64]> var_383_cast_fp16 = slice_by_index(begin = var_383_begin_0, end = var_383_end_0, end_mask = var_383_end_mask_0, x = transpose_3)[name = tensor<string, []>("op_383_cast_fp16")];
            tensor<int32, [4]> var_387_begin_0 = const()[name = tensor<string, []>("op_387_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_387_end_0 = const()[name = tensor<string, []>("op_387_end_0"), val = tensor<int32, [4]>([1, 1500, 1, 192])];
            tensor<bool, [4]> var_387_end_mask_0 = const()[name = tensor<string, []>("op_387_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 1500, 1, 64]> var_387_cast_fp16 = slice_by_index(begin = var_387_begin_0, end = var_387_end_0, end_mask = var_387_end_mask_0, x = transpose_3)[name = tensor<string, []>("op_387_cast_fp16")];
            tensor<int32, [4]> var_391_begin_0 = const()[name = tensor<string, []>("op_391_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_391_end_0 = const()[name = tensor<string, []>("op_391_end_0"), val = tensor<int32, [4]>([1, 1500, 1, 256])];
            tensor<bool, [4]> var_391_end_mask_0 = const()[name = tensor<string, []>("op_391_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 1500, 1, 64]> var_391_cast_fp16 = slice_by_index(begin = var_391_begin_0, end = var_391_end_0, end_mask = var_391_end_mask_0, x = transpose_3)[name = tensor<string, []>("op_391_cast_fp16")];
            tensor<int32, [4]> var_395_begin_0 = const()[name = tensor<string, []>("op_395_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_395_end_0 = const()[name = tensor<string, []>("op_395_end_0"), val = tensor<int32, [4]>([1, 1500, 1, 320])];
            tensor<bool, [4]> var_395_end_mask_0 = const()[name = tensor<string, []>("op_395_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 1500, 1, 64]> var_395_cast_fp16 = slice_by_index(begin = var_395_begin_0, end = var_395_end_0, end_mask = var_395_end_mask_0, x = transpose_3)[name = tensor<string, []>("op_395_cast_fp16")];
            tensor<int32, [4]> var_399_begin_0 = const()[name = tensor<string, []>("op_399_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_399_end_0 = const()[name = tensor<string, []>("op_399_end_0"), val = tensor<int32, [4]>([1, 1500, 1, 384])];
            tensor<bool, [4]> var_399_end_mask_0 = const()[name = tensor<string, []>("op_399_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 1500, 1, 64]> var_399_cast_fp16 = slice_by_index(begin = var_399_begin_0, end = var_399_end_0, end_mask = var_399_end_mask_0, x = transpose_3)[name = tensor<string, []>("op_399_cast_fp16")];
            tensor<int32, [4]> var_401_begin_0 = const()[name = tensor<string, []>("op_401_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_401_end_0 = const()[name = tensor<string, []>("op_401_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_401_end_mask_0 = const()[name = tensor<string, []>("op_401_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_401_cast_fp16 = slice_by_index(begin = var_401_begin_0, end = var_401_end_0, end_mask = var_401_end_mask_0, x = value_1_cast_fp16)[name = tensor<string, []>("op_401_cast_fp16")];
            tensor<int32, [4]> var_405_begin_0 = const()[name = tensor<string, []>("op_405_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_405_end_0 = const()[name = tensor<string, []>("op_405_end_0"), val = tensor<int32, [4]>([1, 128, 1, 1500])];
            tensor<bool, [4]> var_405_end_mask_0 = const()[name = tensor<string, []>("op_405_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_405_cast_fp16 = slice_by_index(begin = var_405_begin_0, end = var_405_end_0, end_mask = var_405_end_mask_0, x = value_1_cast_fp16)[name = tensor<string, []>("op_405_cast_fp16")];
            tensor<int32, [4]> var_409_begin_0 = const()[name = tensor<string, []>("op_409_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_409_end_0 = const()[name = tensor<string, []>("op_409_end_0"), val = tensor<int32, [4]>([1, 192, 1, 1500])];
            tensor<bool, [4]> var_409_end_mask_0 = const()[name = tensor<string, []>("op_409_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_409_cast_fp16 = slice_by_index(begin = var_409_begin_0, end = var_409_end_0, end_mask = var_409_end_mask_0, x = value_1_cast_fp16)[name = tensor<string, []>("op_409_cast_fp16")];
            tensor<int32, [4]> var_413_begin_0 = const()[name = tensor<string, []>("op_413_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_413_end_0 = const()[name = tensor<string, []>("op_413_end_0"), val = tensor<int32, [4]>([1, 256, 1, 1500])];
            tensor<bool, [4]> var_413_end_mask_0 = const()[name = tensor<string, []>("op_413_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_413_cast_fp16 = slice_by_index(begin = var_413_begin_0, end = var_413_end_0, end_mask = var_413_end_mask_0, x = value_1_cast_fp16)[name = tensor<string, []>("op_413_cast_fp16")];
            tensor<int32, [4]> var_417_begin_0 = const()[name = tensor<string, []>("op_417_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_417_end_0 = const()[name = tensor<string, []>("op_417_end_0"), val = tensor<int32, [4]>([1, 320, 1, 1500])];
            tensor<bool, [4]> var_417_end_mask_0 = const()[name = tensor<string, []>("op_417_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_417_cast_fp16 = slice_by_index(begin = var_417_begin_0, end = var_417_end_0, end_mask = var_417_end_mask_0, x = value_1_cast_fp16)[name = tensor<string, []>("op_417_cast_fp16")];
            tensor<int32, [4]> var_421_begin_0 = const()[name = tensor<string, []>("op_421_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_421_end_0 = const()[name = tensor<string, []>("op_421_end_0"), val = tensor<int32, [4]>([1, 384, 1, 1500])];
            tensor<bool, [4]> var_421_end_mask_0 = const()[name = tensor<string, []>("op_421_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_421_cast_fp16 = slice_by_index(begin = var_421_begin_0, end = var_421_end_0, end_mask = var_421_end_mask_0, x = value_1_cast_fp16)[name = tensor<string, []>("op_421_cast_fp16")];
            tensor<string, []> var_425_equation_0 = const()[name = tensor<string, []>("op_425_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_425_cast_fp16 = einsum(equation = var_425_equation_0, values = (var_379_cast_fp16, var_213_cast_fp16))[name = tensor<string, []>("op_425_cast_fp16")];
            tensor<fp16, []> var_426_to_fp16 = const()[name = tensor<string, []>("op_426_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_1_cast_fp16 = mul(x = var_425_cast_fp16, y = var_426_to_fp16)[name = tensor<string, []>("aw_chunk_1_cast_fp16")];
            tensor<string, []> var_429_equation_0 = const()[name = tensor<string, []>("op_429_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_429_cast_fp16 = einsum(equation = var_429_equation_0, values = (var_379_cast_fp16, var_220_cast_fp16))[name = tensor<string, []>("op_429_cast_fp16")];
            tensor<fp16, []> var_430_to_fp16 = const()[name = tensor<string, []>("op_430_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_3_cast_fp16 = mul(x = var_429_cast_fp16, y = var_430_to_fp16)[name = tensor<string, []>("aw_chunk_3_cast_fp16")];
            tensor<string, []> var_433_equation_0 = const()[name = tensor<string, []>("op_433_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_433_cast_fp16 = einsum(equation = var_433_equation_0, values = (var_379_cast_fp16, var_227_cast_fp16))[name = tensor<string, []>("op_433_cast_fp16")];
            tensor<fp16, []> var_434_to_fp16 = const()[name = tensor<string, []>("op_434_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_5_cast_fp16 = mul(x = var_433_cast_fp16, y = var_434_to_fp16)[name = tensor<string, []>("aw_chunk_5_cast_fp16")];
            tensor<string, []> var_437_equation_0 = const()[name = tensor<string, []>("op_437_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_437_cast_fp16 = einsum(equation = var_437_equation_0, values = (var_379_cast_fp16, var_234_cast_fp16))[name = tensor<string, []>("op_437_cast_fp16")];
            tensor<fp16, []> var_438_to_fp16 = const()[name = tensor<string, []>("op_438_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_7_cast_fp16 = mul(x = var_437_cast_fp16, y = var_438_to_fp16)[name = tensor<string, []>("aw_chunk_7_cast_fp16")];
            tensor<string, []> var_441_equation_0 = const()[name = tensor<string, []>("op_441_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_441_cast_fp16 = einsum(equation = var_441_equation_0, values = (var_383_cast_fp16, var_241_cast_fp16))[name = tensor<string, []>("op_441_cast_fp16")];
            tensor<fp16, []> var_442_to_fp16 = const()[name = tensor<string, []>("op_442_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_9_cast_fp16 = mul(x = var_441_cast_fp16, y = var_442_to_fp16)[name = tensor<string, []>("aw_chunk_9_cast_fp16")];
            tensor<string, []> var_445_equation_0 = const()[name = tensor<string, []>("op_445_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_445_cast_fp16 = einsum(equation = var_445_equation_0, values = (var_383_cast_fp16, var_248_cast_fp16))[name = tensor<string, []>("op_445_cast_fp16")];
            tensor<fp16, []> var_446_to_fp16 = const()[name = tensor<string, []>("op_446_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_11_cast_fp16 = mul(x = var_445_cast_fp16, y = var_446_to_fp16)[name = tensor<string, []>("aw_chunk_11_cast_fp16")];
            tensor<string, []> var_449_equation_0 = const()[name = tensor<string, []>("op_449_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_449_cast_fp16 = einsum(equation = var_449_equation_0, values = (var_383_cast_fp16, var_255_cast_fp16))[name = tensor<string, []>("op_449_cast_fp16")];
            tensor<fp16, []> var_450_to_fp16 = const()[name = tensor<string, []>("op_450_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_13_cast_fp16 = mul(x = var_449_cast_fp16, y = var_450_to_fp16)[name = tensor<string, []>("aw_chunk_13_cast_fp16")];
            tensor<string, []> var_453_equation_0 = const()[name = tensor<string, []>("op_453_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_453_cast_fp16 = einsum(equation = var_453_equation_0, values = (var_383_cast_fp16, var_262_cast_fp16))[name = tensor<string, []>("op_453_cast_fp16")];
            tensor<fp16, []> var_454_to_fp16 = const()[name = tensor<string, []>("op_454_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_15_cast_fp16 = mul(x = var_453_cast_fp16, y = var_454_to_fp16)[name = tensor<string, []>("aw_chunk_15_cast_fp16")];
            tensor<string, []> var_457_equation_0 = const()[name = tensor<string, []>("op_457_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_457_cast_fp16 = einsum(equation = var_457_equation_0, values = (var_387_cast_fp16, var_269_cast_fp16))[name = tensor<string, []>("op_457_cast_fp16")];
            tensor<fp16, []> var_458_to_fp16 = const()[name = tensor<string, []>("op_458_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_17_cast_fp16 = mul(x = var_457_cast_fp16, y = var_458_to_fp16)[name = tensor<string, []>("aw_chunk_17_cast_fp16")];
            tensor<string, []> var_461_equation_0 = const()[name = tensor<string, []>("op_461_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_461_cast_fp16 = einsum(equation = var_461_equation_0, values = (var_387_cast_fp16, var_276_cast_fp16))[name = tensor<string, []>("op_461_cast_fp16")];
            tensor<fp16, []> var_462_to_fp16 = const()[name = tensor<string, []>("op_462_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_19_cast_fp16 = mul(x = var_461_cast_fp16, y = var_462_to_fp16)[name = tensor<string, []>("aw_chunk_19_cast_fp16")];
            tensor<string, []> var_465_equation_0 = const()[name = tensor<string, []>("op_465_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_465_cast_fp16 = einsum(equation = var_465_equation_0, values = (var_387_cast_fp16, var_283_cast_fp16))[name = tensor<string, []>("op_465_cast_fp16")];
            tensor<fp16, []> var_466_to_fp16 = const()[name = tensor<string, []>("op_466_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_21_cast_fp16 = mul(x = var_465_cast_fp16, y = var_466_to_fp16)[name = tensor<string, []>("aw_chunk_21_cast_fp16")];
            tensor<string, []> var_469_equation_0 = const()[name = tensor<string, []>("op_469_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_469_cast_fp16 = einsum(equation = var_469_equation_0, values = (var_387_cast_fp16, var_290_cast_fp16))[name = tensor<string, []>("op_469_cast_fp16")];
            tensor<fp16, []> var_470_to_fp16 = const()[name = tensor<string, []>("op_470_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_23_cast_fp16 = mul(x = var_469_cast_fp16, y = var_470_to_fp16)[name = tensor<string, []>("aw_chunk_23_cast_fp16")];
            tensor<string, []> var_473_equation_0 = const()[name = tensor<string, []>("op_473_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_473_cast_fp16 = einsum(equation = var_473_equation_0, values = (var_391_cast_fp16, var_297_cast_fp16))[name = tensor<string, []>("op_473_cast_fp16")];
            tensor<fp16, []> var_474_to_fp16 = const()[name = tensor<string, []>("op_474_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_25_cast_fp16 = mul(x = var_473_cast_fp16, y = var_474_to_fp16)[name = tensor<string, []>("aw_chunk_25_cast_fp16")];
            tensor<string, []> var_477_equation_0 = const()[name = tensor<string, []>("op_477_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_477_cast_fp16 = einsum(equation = var_477_equation_0, values = (var_391_cast_fp16, var_304_cast_fp16))[name = tensor<string, []>("op_477_cast_fp16")];
            tensor<fp16, []> var_478_to_fp16 = const()[name = tensor<string, []>("op_478_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_27_cast_fp16 = mul(x = var_477_cast_fp16, y = var_478_to_fp16)[name = tensor<string, []>("aw_chunk_27_cast_fp16")];
            tensor<string, []> var_481_equation_0 = const()[name = tensor<string, []>("op_481_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_481_cast_fp16 = einsum(equation = var_481_equation_0, values = (var_391_cast_fp16, var_311_cast_fp16))[name = tensor<string, []>("op_481_cast_fp16")];
            tensor<fp16, []> var_482_to_fp16 = const()[name = tensor<string, []>("op_482_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_29_cast_fp16 = mul(x = var_481_cast_fp16, y = var_482_to_fp16)[name = tensor<string, []>("aw_chunk_29_cast_fp16")];
            tensor<string, []> var_485_equation_0 = const()[name = tensor<string, []>("op_485_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_485_cast_fp16 = einsum(equation = var_485_equation_0, values = (var_391_cast_fp16, var_318_cast_fp16))[name = tensor<string, []>("op_485_cast_fp16")];
            tensor<fp16, []> var_486_to_fp16 = const()[name = tensor<string, []>("op_486_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_31_cast_fp16 = mul(x = var_485_cast_fp16, y = var_486_to_fp16)[name = tensor<string, []>("aw_chunk_31_cast_fp16")];
            tensor<string, []> var_489_equation_0 = const()[name = tensor<string, []>("op_489_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_489_cast_fp16 = einsum(equation = var_489_equation_0, values = (var_395_cast_fp16, var_325_cast_fp16))[name = tensor<string, []>("op_489_cast_fp16")];
            tensor<fp16, []> var_490_to_fp16 = const()[name = tensor<string, []>("op_490_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_33_cast_fp16 = mul(x = var_489_cast_fp16, y = var_490_to_fp16)[name = tensor<string, []>("aw_chunk_33_cast_fp16")];
            tensor<string, []> var_493_equation_0 = const()[name = tensor<string, []>("op_493_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_493_cast_fp16 = einsum(equation = var_493_equation_0, values = (var_395_cast_fp16, var_332_cast_fp16))[name = tensor<string, []>("op_493_cast_fp16")];
            tensor<fp16, []> var_494_to_fp16 = const()[name = tensor<string, []>("op_494_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_35_cast_fp16 = mul(x = var_493_cast_fp16, y = var_494_to_fp16)[name = tensor<string, []>("aw_chunk_35_cast_fp16")];
            tensor<string, []> var_497_equation_0 = const()[name = tensor<string, []>("op_497_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_497_cast_fp16 = einsum(equation = var_497_equation_0, values = (var_395_cast_fp16, var_339_cast_fp16))[name = tensor<string, []>("op_497_cast_fp16")];
            tensor<fp16, []> var_498_to_fp16 = const()[name = tensor<string, []>("op_498_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_37_cast_fp16 = mul(x = var_497_cast_fp16, y = var_498_to_fp16)[name = tensor<string, []>("aw_chunk_37_cast_fp16")];
            tensor<string, []> var_501_equation_0 = const()[name = tensor<string, []>("op_501_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_501_cast_fp16 = einsum(equation = var_501_equation_0, values = (var_395_cast_fp16, var_346_cast_fp16))[name = tensor<string, []>("op_501_cast_fp16")];
            tensor<fp16, []> var_502_to_fp16 = const()[name = tensor<string, []>("op_502_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_39_cast_fp16 = mul(x = var_501_cast_fp16, y = var_502_to_fp16)[name = tensor<string, []>("aw_chunk_39_cast_fp16")];
            tensor<string, []> var_505_equation_0 = const()[name = tensor<string, []>("op_505_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_505_cast_fp16 = einsum(equation = var_505_equation_0, values = (var_399_cast_fp16, var_353_cast_fp16))[name = tensor<string, []>("op_505_cast_fp16")];
            tensor<fp16, []> var_506_to_fp16 = const()[name = tensor<string, []>("op_506_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_41_cast_fp16 = mul(x = var_505_cast_fp16, y = var_506_to_fp16)[name = tensor<string, []>("aw_chunk_41_cast_fp16")];
            tensor<string, []> var_509_equation_0 = const()[name = tensor<string, []>("op_509_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_509_cast_fp16 = einsum(equation = var_509_equation_0, values = (var_399_cast_fp16, var_360_cast_fp16))[name = tensor<string, []>("op_509_cast_fp16")];
            tensor<fp16, []> var_510_to_fp16 = const()[name = tensor<string, []>("op_510_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_43_cast_fp16 = mul(x = var_509_cast_fp16, y = var_510_to_fp16)[name = tensor<string, []>("aw_chunk_43_cast_fp16")];
            tensor<string, []> var_513_equation_0 = const()[name = tensor<string, []>("op_513_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_513_cast_fp16 = einsum(equation = var_513_equation_0, values = (var_399_cast_fp16, var_367_cast_fp16))[name = tensor<string, []>("op_513_cast_fp16")];
            tensor<fp16, []> var_514_to_fp16 = const()[name = tensor<string, []>("op_514_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_45_cast_fp16 = mul(x = var_513_cast_fp16, y = var_514_to_fp16)[name = tensor<string, []>("aw_chunk_45_cast_fp16")];
            tensor<string, []> var_517_equation_0 = const()[name = tensor<string, []>("op_517_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_517_cast_fp16 = einsum(equation = var_517_equation_0, values = (var_399_cast_fp16, var_374_cast_fp16))[name = tensor<string, []>("op_517_cast_fp16")];
            tensor<fp16, []> var_518_to_fp16 = const()[name = tensor<string, []>("op_518_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_47_cast_fp16 = mul(x = var_517_cast_fp16, y = var_518_to_fp16)[name = tensor<string, []>("aw_chunk_47_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_520_cast_fp16 = softmax(axis = var_129, x = aw_chunk_1_cast_fp16)[name = tensor<string, []>("op_520_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_521_cast_fp16 = softmax(axis = var_129, x = aw_chunk_3_cast_fp16)[name = tensor<string, []>("op_521_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_522_cast_fp16 = softmax(axis = var_129, x = aw_chunk_5_cast_fp16)[name = tensor<string, []>("op_522_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_523_cast_fp16 = softmax(axis = var_129, x = aw_chunk_7_cast_fp16)[name = tensor<string, []>("op_523_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_524_cast_fp16 = softmax(axis = var_129, x = aw_chunk_9_cast_fp16)[name = tensor<string, []>("op_524_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_525_cast_fp16 = softmax(axis = var_129, x = aw_chunk_11_cast_fp16)[name = tensor<string, []>("op_525_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_526_cast_fp16 = softmax(axis = var_129, x = aw_chunk_13_cast_fp16)[name = tensor<string, []>("op_526_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_527_cast_fp16 = softmax(axis = var_129, x = aw_chunk_15_cast_fp16)[name = tensor<string, []>("op_527_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_528_cast_fp16 = softmax(axis = var_129, x = aw_chunk_17_cast_fp16)[name = tensor<string, []>("op_528_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_529_cast_fp16 = softmax(axis = var_129, x = aw_chunk_19_cast_fp16)[name = tensor<string, []>("op_529_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_530_cast_fp16 = softmax(axis = var_129, x = aw_chunk_21_cast_fp16)[name = tensor<string, []>("op_530_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_531_cast_fp16 = softmax(axis = var_129, x = aw_chunk_23_cast_fp16)[name = tensor<string, []>("op_531_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_532_cast_fp16 = softmax(axis = var_129, x = aw_chunk_25_cast_fp16)[name = tensor<string, []>("op_532_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_533_cast_fp16 = softmax(axis = var_129, x = aw_chunk_27_cast_fp16)[name = tensor<string, []>("op_533_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_534_cast_fp16 = softmax(axis = var_129, x = aw_chunk_29_cast_fp16)[name = tensor<string, []>("op_534_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_535_cast_fp16 = softmax(axis = var_129, x = aw_chunk_31_cast_fp16)[name = tensor<string, []>("op_535_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_536_cast_fp16 = softmax(axis = var_129, x = aw_chunk_33_cast_fp16)[name = tensor<string, []>("op_536_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_537_cast_fp16 = softmax(axis = var_129, x = aw_chunk_35_cast_fp16)[name = tensor<string, []>("op_537_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_538_cast_fp16 = softmax(axis = var_129, x = aw_chunk_37_cast_fp16)[name = tensor<string, []>("op_538_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_539_cast_fp16 = softmax(axis = var_129, x = aw_chunk_39_cast_fp16)[name = tensor<string, []>("op_539_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_540_cast_fp16 = softmax(axis = var_129, x = aw_chunk_41_cast_fp16)[name = tensor<string, []>("op_540_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_541_cast_fp16 = softmax(axis = var_129, x = aw_chunk_43_cast_fp16)[name = tensor<string, []>("op_541_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_542_cast_fp16 = softmax(axis = var_129, x = aw_chunk_45_cast_fp16)[name = tensor<string, []>("op_542_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_543_cast_fp16 = softmax(axis = var_129, x = aw_chunk_47_cast_fp16)[name = tensor<string, []>("op_543_cast_fp16")];
            tensor<string, []> var_545_equation_0 = const()[name = tensor<string, []>("op_545_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_545_cast_fp16 = einsum(equation = var_545_equation_0, values = (var_401_cast_fp16, var_520_cast_fp16))[name = tensor<string, []>("op_545_cast_fp16")];
            tensor<string, []> var_547_equation_0 = const()[name = tensor<string, []>("op_547_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_547_cast_fp16 = einsum(equation = var_547_equation_0, values = (var_401_cast_fp16, var_521_cast_fp16))[name = tensor<string, []>("op_547_cast_fp16")];
            tensor<string, []> var_549_equation_0 = const()[name = tensor<string, []>("op_549_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_549_cast_fp16 = einsum(equation = var_549_equation_0, values = (var_401_cast_fp16, var_522_cast_fp16))[name = tensor<string, []>("op_549_cast_fp16")];
            tensor<string, []> var_551_equation_0 = const()[name = tensor<string, []>("op_551_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_551_cast_fp16 = einsum(equation = var_551_equation_0, values = (var_401_cast_fp16, var_523_cast_fp16))[name = tensor<string, []>("op_551_cast_fp16")];
            tensor<string, []> var_553_equation_0 = const()[name = tensor<string, []>("op_553_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_553_cast_fp16 = einsum(equation = var_553_equation_0, values = (var_405_cast_fp16, var_524_cast_fp16))[name = tensor<string, []>("op_553_cast_fp16")];
            tensor<string, []> var_555_equation_0 = const()[name = tensor<string, []>("op_555_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_555_cast_fp16 = einsum(equation = var_555_equation_0, values = (var_405_cast_fp16, var_525_cast_fp16))[name = tensor<string, []>("op_555_cast_fp16")];
            tensor<string, []> var_557_equation_0 = const()[name = tensor<string, []>("op_557_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_557_cast_fp16 = einsum(equation = var_557_equation_0, values = (var_405_cast_fp16, var_526_cast_fp16))[name = tensor<string, []>("op_557_cast_fp16")];
            tensor<string, []> var_559_equation_0 = const()[name = tensor<string, []>("op_559_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_559_cast_fp16 = einsum(equation = var_559_equation_0, values = (var_405_cast_fp16, var_527_cast_fp16))[name = tensor<string, []>("op_559_cast_fp16")];
            tensor<string, []> var_561_equation_0 = const()[name = tensor<string, []>("op_561_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_561_cast_fp16 = einsum(equation = var_561_equation_0, values = (var_409_cast_fp16, var_528_cast_fp16))[name = tensor<string, []>("op_561_cast_fp16")];
            tensor<string, []> var_563_equation_0 = const()[name = tensor<string, []>("op_563_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_563_cast_fp16 = einsum(equation = var_563_equation_0, values = (var_409_cast_fp16, var_529_cast_fp16))[name = tensor<string, []>("op_563_cast_fp16")];
            tensor<string, []> var_565_equation_0 = const()[name = tensor<string, []>("op_565_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_565_cast_fp16 = einsum(equation = var_565_equation_0, values = (var_409_cast_fp16, var_530_cast_fp16))[name = tensor<string, []>("op_565_cast_fp16")];
            tensor<string, []> var_567_equation_0 = const()[name = tensor<string, []>("op_567_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_567_cast_fp16 = einsum(equation = var_567_equation_0, values = (var_409_cast_fp16, var_531_cast_fp16))[name = tensor<string, []>("op_567_cast_fp16")];
            tensor<string, []> var_569_equation_0 = const()[name = tensor<string, []>("op_569_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_569_cast_fp16 = einsum(equation = var_569_equation_0, values = (var_413_cast_fp16, var_532_cast_fp16))[name = tensor<string, []>("op_569_cast_fp16")];
            tensor<string, []> var_571_equation_0 = const()[name = tensor<string, []>("op_571_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_571_cast_fp16 = einsum(equation = var_571_equation_0, values = (var_413_cast_fp16, var_533_cast_fp16))[name = tensor<string, []>("op_571_cast_fp16")];
            tensor<string, []> var_573_equation_0 = const()[name = tensor<string, []>("op_573_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_573_cast_fp16 = einsum(equation = var_573_equation_0, values = (var_413_cast_fp16, var_534_cast_fp16))[name = tensor<string, []>("op_573_cast_fp16")];
            tensor<string, []> var_575_equation_0 = const()[name = tensor<string, []>("op_575_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_575_cast_fp16 = einsum(equation = var_575_equation_0, values = (var_413_cast_fp16, var_535_cast_fp16))[name = tensor<string, []>("op_575_cast_fp16")];
            tensor<string, []> var_577_equation_0 = const()[name = tensor<string, []>("op_577_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_577_cast_fp16 = einsum(equation = var_577_equation_0, values = (var_417_cast_fp16, var_536_cast_fp16))[name = tensor<string, []>("op_577_cast_fp16")];
            tensor<string, []> var_579_equation_0 = const()[name = tensor<string, []>("op_579_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_579_cast_fp16 = einsum(equation = var_579_equation_0, values = (var_417_cast_fp16, var_537_cast_fp16))[name = tensor<string, []>("op_579_cast_fp16")];
            tensor<string, []> var_581_equation_0 = const()[name = tensor<string, []>("op_581_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_581_cast_fp16 = einsum(equation = var_581_equation_0, values = (var_417_cast_fp16, var_538_cast_fp16))[name = tensor<string, []>("op_581_cast_fp16")];
            tensor<string, []> var_583_equation_0 = const()[name = tensor<string, []>("op_583_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_583_cast_fp16 = einsum(equation = var_583_equation_0, values = (var_417_cast_fp16, var_539_cast_fp16))[name = tensor<string, []>("op_583_cast_fp16")];
            tensor<string, []> var_585_equation_0 = const()[name = tensor<string, []>("op_585_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_585_cast_fp16 = einsum(equation = var_585_equation_0, values = (var_421_cast_fp16, var_540_cast_fp16))[name = tensor<string, []>("op_585_cast_fp16")];
            tensor<string, []> var_587_equation_0 = const()[name = tensor<string, []>("op_587_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_587_cast_fp16 = einsum(equation = var_587_equation_0, values = (var_421_cast_fp16, var_541_cast_fp16))[name = tensor<string, []>("op_587_cast_fp16")];
            tensor<string, []> var_589_equation_0 = const()[name = tensor<string, []>("op_589_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_589_cast_fp16 = einsum(equation = var_589_equation_0, values = (var_421_cast_fp16, var_542_cast_fp16))[name = tensor<string, []>("op_589_cast_fp16")];
            tensor<string, []> var_591_equation_0 = const()[name = tensor<string, []>("op_591_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_591_cast_fp16 = einsum(equation = var_591_equation_0, values = (var_421_cast_fp16, var_543_cast_fp16))[name = tensor<string, []>("op_591_cast_fp16")];
            tensor<bool, []> var_593_interleave_0 = const()[name = tensor<string, []>("op_593_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 1500]> var_593_cast_fp16 = concat(axis = var_118, interleave = var_593_interleave_0, values = (var_545_cast_fp16, var_547_cast_fp16, var_549_cast_fp16, var_551_cast_fp16))[name = tensor<string, []>("op_593_cast_fp16")];
            tensor<bool, []> var_595_interleave_0 = const()[name = tensor<string, []>("op_595_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 1500]> var_595_cast_fp16 = concat(axis = var_118, interleave = var_595_interleave_0, values = (var_553_cast_fp16, var_555_cast_fp16, var_557_cast_fp16, var_559_cast_fp16))[name = tensor<string, []>("op_595_cast_fp16")];
            tensor<bool, []> var_597_interleave_0 = const()[name = tensor<string, []>("op_597_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 1500]> var_597_cast_fp16 = concat(axis = var_118, interleave = var_597_interleave_0, values = (var_561_cast_fp16, var_563_cast_fp16, var_565_cast_fp16, var_567_cast_fp16))[name = tensor<string, []>("op_597_cast_fp16")];
            tensor<bool, []> var_599_interleave_0 = const()[name = tensor<string, []>("op_599_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 1500]> var_599_cast_fp16 = concat(axis = var_118, interleave = var_599_interleave_0, values = (var_569_cast_fp16, var_571_cast_fp16, var_573_cast_fp16, var_575_cast_fp16))[name = tensor<string, []>("op_599_cast_fp16")];
            tensor<bool, []> var_601_interleave_0 = const()[name = tensor<string, []>("op_601_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 1500]> var_601_cast_fp16 = concat(axis = var_118, interleave = var_601_interleave_0, values = (var_577_cast_fp16, var_579_cast_fp16, var_581_cast_fp16, var_583_cast_fp16))[name = tensor<string, []>("op_601_cast_fp16")];
            tensor<bool, []> var_603_interleave_0 = const()[name = tensor<string, []>("op_603_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 1500]> var_603_cast_fp16 = concat(axis = var_118, interleave = var_603_interleave_0, values = (var_585_cast_fp16, var_587_cast_fp16, var_589_cast_fp16, var_591_cast_fp16))[name = tensor<string, []>("op_603_cast_fp16")];
            tensor<bool, []> input_1_interleave_0 = const()[name = tensor<string, []>("input_1_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 1, 1500]> input_1_cast_fp16 = concat(axis = var_129, interleave = input_1_interleave_0, values = (var_593_cast_fp16, var_595_cast_fp16, var_597_cast_fp16, var_599_cast_fp16, var_601_cast_fp16, var_603_cast_fp16))[name = tensor<string, []>("input_1_cast_fp16")];
            tensor<int32, [2]> var_608 = const()[name = tensor<string, []>("op_608"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_610 = const()[name = tensor<string, []>("op_610"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_3_pad_type_0 = const()[name = tensor<string, []>("obj_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_3_pad_0 = const()[name = tensor<string, []>("obj_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_0_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3112896)))];
            tensor<fp16, [384]> layers_0_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3407872)))];
            tensor<fp16, [1, 384, 1, 1500]> obj_3_cast_fp16 = conv(bias = layers_0_self_attn_o_proj_bias_to_fp16, dilations = var_610, groups = var_129, pad = obj_3_pad_0, pad_type = obj_3_pad_type_0, strides = var_608, weight = layers_0_self_attn_o_proj_weight_to_fp16, x = input_1_cast_fp16)[name = tensor<string, []>("obj_3_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> inputs_3_cast_fp16 = add(x = inputs_1_cast_fp16, y = obj_3_cast_fp16)[name = tensor<string, []>("inputs_3_cast_fp16")];
            tensor<int32, [1]> var_616 = const()[name = tensor<string, []>("op_616"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1500]> channels_mean_3_cast_fp16 = reduce_mean(axes = var_616, keep_dims = var_130, x = inputs_3_cast_fp16)[name = tensor<string, []>("channels_mean_3_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> zero_mean_3_cast_fp16 = sub(x = inputs_3_cast_fp16, y = channels_mean_3_cast_fp16)[name = tensor<string, []>("zero_mean_3_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> zero_mean_sq_3_cast_fp16 = mul(x = zero_mean_3_cast_fp16, y = zero_mean_3_cast_fp16)[name = tensor<string, []>("zero_mean_sq_3_cast_fp16")];
            tensor<int32, [1]> var_620 = const()[name = tensor<string, []>("op_620"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1500]> var_621_cast_fp16 = reduce_mean(axes = var_620, keep_dims = var_130, x = zero_mean_sq_3_cast_fp16)[name = tensor<string, []>("op_621_cast_fp16")];
            tensor<fp16, []> var_622_to_fp16 = const()[name = tensor<string, []>("op_622_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1500]> var_623_cast_fp16 = add(x = var_621_cast_fp16, y = var_622_to_fp16)[name = tensor<string, []>("op_623_cast_fp16")];
            tensor<fp16, []> denom_3_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_3_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1500]> denom_3_cast_fp16 = rsqrt(epsilon = denom_3_epsilon_0_to_fp16, x = var_623_cast_fp16)[name = tensor<string, []>("denom_3_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> out_3_cast_fp16 = mul(x = zero_mean_3_cast_fp16, y = denom_3_cast_fp16)[name = tensor<string, []>("out_3_cast_fp16")];
            tensor<fp16, [384]> input_3_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_3_gamma_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3408704)))];
            tensor<fp16, [384]> input_3_beta_0_to_fp16 = const()[name = tensor<string, []>("input_3_beta_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3409536)))];
            tensor<fp16, []> input_3_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_3_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 384, 1, 1500]> input_3_cast_fp16 = batch_norm(beta = input_3_beta_0_to_fp16, epsilon = input_3_epsilon_0_to_fp16, gamma = input_3_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_3_cast_fp16)[name = tensor<string, []>("input_3_cast_fp16")];
            tensor<int32, [2]> var_634 = const()[name = tensor<string, []>("op_634"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_636 = const()[name = tensor<string, []>("op_636"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_5_pad_type_0 = const()[name = tensor<string, []>("input_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_5_pad_0 = const()[name = tensor<string, []>("input_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 384, 1, 1]> layers_0_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_fc1_weight_to_fp16"), val = tensor<fp16, [1536, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3410368)))];
            tensor<fp16, [1536]> layers_0_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_fc1_bias_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4590080)))];
            tensor<fp16, [1, 1536, 1, 1500]> input_5_cast_fp16 = conv(bias = layers_0_fc1_bias_to_fp16, dilations = var_636, groups = var_129, pad = input_5_pad_0, pad_type = input_5_pad_type_0, strides = var_634, weight = layers_0_fc1_weight_to_fp16, x = input_3_cast_fp16)[name = tensor<string, []>("input_5_cast_fp16")];
            tensor<string, []> input_7_mode_0 = const()[name = tensor<string, []>("input_7_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 1536, 1, 1500]> input_7_cast_fp16 = gelu(mode = input_7_mode_0, x = input_5_cast_fp16)[name = tensor<string, []>("input_7_cast_fp16")];
            tensor<int32, [2]> var_642 = const()[name = tensor<string, []>("op_642"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_644 = const()[name = tensor<string, []>("op_644"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_5_pad_type_0 = const()[name = tensor<string, []>("hidden_states_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_5_pad_0 = const()[name = tensor<string, []>("hidden_states_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 1536, 1, 1]> layers_0_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_0_fc2_weight_to_fp16"), val = tensor<fp16, [384, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4593216)))];
            tensor<fp16, [384]> layers_0_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_0_fc2_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5772928)))];
            tensor<fp16, [1, 384, 1, 1500]> hidden_states_5_cast_fp16 = conv(bias = layers_0_fc2_bias_to_fp16, dilations = var_644, groups = var_129, pad = hidden_states_5_pad_0, pad_type = hidden_states_5_pad_type_0, strides = var_642, weight = layers_0_fc2_weight_to_fp16, x = input_7_cast_fp16)[name = tensor<string, []>("hidden_states_5_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> inputs_5_cast_fp16 = add(x = inputs_3_cast_fp16, y = hidden_states_5_cast_fp16)[name = tensor<string, []>("inputs_5_cast_fp16")];
            tensor<int32, []> var_651 = const()[name = tensor<string, []>("op_651"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_662 = const()[name = tensor<string, []>("op_662"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_663 = const()[name = tensor<string, []>("op_663"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_673 = const()[name = tensor<string, []>("op_673"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1500]> channels_mean_5_cast_fp16 = reduce_mean(axes = var_673, keep_dims = var_663, x = inputs_5_cast_fp16)[name = tensor<string, []>("channels_mean_5_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> zero_mean_5_cast_fp16 = sub(x = inputs_5_cast_fp16, y = channels_mean_5_cast_fp16)[name = tensor<string, []>("zero_mean_5_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> zero_mean_sq_5_cast_fp16 = mul(x = zero_mean_5_cast_fp16, y = zero_mean_5_cast_fp16)[name = tensor<string, []>("zero_mean_sq_5_cast_fp16")];
            tensor<int32, [1]> var_677 = const()[name = tensor<string, []>("op_677"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1500]> var_678_cast_fp16 = reduce_mean(axes = var_677, keep_dims = var_663, x = zero_mean_sq_5_cast_fp16)[name = tensor<string, []>("op_678_cast_fp16")];
            tensor<fp16, []> var_679_to_fp16 = const()[name = tensor<string, []>("op_679_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1500]> var_680_cast_fp16 = add(x = var_678_cast_fp16, y = var_679_to_fp16)[name = tensor<string, []>("op_680_cast_fp16")];
            tensor<fp16, []> denom_5_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_5_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1500]> denom_5_cast_fp16 = rsqrt(epsilon = denom_5_epsilon_0_to_fp16, x = var_680_cast_fp16)[name = tensor<string, []>("denom_5_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> out_5_cast_fp16 = mul(x = zero_mean_5_cast_fp16, y = denom_5_cast_fp16)[name = tensor<string, []>("out_5_cast_fp16")];
            tensor<fp16, [384]> obj_5_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_5_gamma_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5773760)))];
            tensor<fp16, [384]> obj_5_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_5_beta_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5774592)))];
            tensor<fp16, []> obj_5_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_5_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 384, 1, 1500]> obj_5_cast_fp16 = batch_norm(beta = obj_5_beta_0_to_fp16, epsilon = obj_5_epsilon_0_to_fp16, gamma = obj_5_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_5_cast_fp16)[name = tensor<string, []>("obj_5_cast_fp16")];
            tensor<int32, [2]> var_695 = const()[name = tensor<string, []>("op_695"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_697 = const()[name = tensor<string, []>("op_697"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_3_pad_type_0 = const()[name = tensor<string, []>("query_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_3_pad_0 = const()[name = tensor<string, []>("query_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_1_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5775424)))];
            tensor<fp16, [384]> layers_1_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6070400)))];
            tensor<fp16, [1, 384, 1, 1500]> query_3_cast_fp16 = conv(bias = layers_1_self_attn_q_proj_bias_to_fp16, dilations = var_697, groups = var_662, pad = query_3_pad_0, pad_type = query_3_pad_type_0, strides = var_695, weight = layers_1_self_attn_q_proj_weight_to_fp16, x = obj_5_cast_fp16)[name = tensor<string, []>("query_3_cast_fp16")];
            tensor<int32, [2]> var_701 = const()[name = tensor<string, []>("op_701"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_703 = const()[name = tensor<string, []>("op_703"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_3_pad_type_0 = const()[name = tensor<string, []>("key_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_3_pad_0 = const()[name = tensor<string, []>("key_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_1_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6071232)))];
            tensor<fp16, [1, 384, 1, 1500]> key_3_cast_fp16 = conv(dilations = var_703, groups = var_662, pad = key_3_pad_0, pad_type = key_3_pad_type_0, strides = var_701, weight = layers_1_self_attn_k_proj_weight_to_fp16, x = obj_5_cast_fp16)[name = tensor<string, []>("key_3_cast_fp16")];
            tensor<int32, [2]> var_708 = const()[name = tensor<string, []>("op_708"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_710 = const()[name = tensor<string, []>("op_710"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_3_pad_type_0 = const()[name = tensor<string, []>("value_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_3_pad_0 = const()[name = tensor<string, []>("value_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_1_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6366208)))];
            tensor<fp16, [384]> layers_1_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6661184)))];
            tensor<fp16, [1, 384, 1, 1500]> value_3_cast_fp16 = conv(bias = layers_1_self_attn_v_proj_bias_to_fp16, dilations = var_710, groups = var_662, pad = value_3_pad_0, pad_type = value_3_pad_type_0, strides = var_708, weight = layers_1_self_attn_v_proj_weight_to_fp16, x = obj_5_cast_fp16)[name = tensor<string, []>("value_3_cast_fp16")];
            tensor<int32, [4]> var_717_begin_0 = const()[name = tensor<string, []>("op_717_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_717_end_0 = const()[name = tensor<string, []>("op_717_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_717_end_mask_0 = const()[name = tensor<string, []>("op_717_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_717_cast_fp16 = slice_by_index(begin = var_717_begin_0, end = var_717_end_0, end_mask = var_717_end_mask_0, x = query_3_cast_fp16)[name = tensor<string, []>("op_717_cast_fp16")];
            tensor<int32, [4]> var_721_begin_0 = const()[name = tensor<string, []>("op_721_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_721_end_0 = const()[name = tensor<string, []>("op_721_end_0"), val = tensor<int32, [4]>([1, 128, 1, 1500])];
            tensor<bool, [4]> var_721_end_mask_0 = const()[name = tensor<string, []>("op_721_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_721_cast_fp16 = slice_by_index(begin = var_721_begin_0, end = var_721_end_0, end_mask = var_721_end_mask_0, x = query_3_cast_fp16)[name = tensor<string, []>("op_721_cast_fp16")];
            tensor<int32, [4]> var_725_begin_0 = const()[name = tensor<string, []>("op_725_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_725_end_0 = const()[name = tensor<string, []>("op_725_end_0"), val = tensor<int32, [4]>([1, 192, 1, 1500])];
            tensor<bool, [4]> var_725_end_mask_0 = const()[name = tensor<string, []>("op_725_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_725_cast_fp16 = slice_by_index(begin = var_725_begin_0, end = var_725_end_0, end_mask = var_725_end_mask_0, x = query_3_cast_fp16)[name = tensor<string, []>("op_725_cast_fp16")];
            tensor<int32, [4]> var_729_begin_0 = const()[name = tensor<string, []>("op_729_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_729_end_0 = const()[name = tensor<string, []>("op_729_end_0"), val = tensor<int32, [4]>([1, 256, 1, 1500])];
            tensor<bool, [4]> var_729_end_mask_0 = const()[name = tensor<string, []>("op_729_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_729_cast_fp16 = slice_by_index(begin = var_729_begin_0, end = var_729_end_0, end_mask = var_729_end_mask_0, x = query_3_cast_fp16)[name = tensor<string, []>("op_729_cast_fp16")];
            tensor<int32, [4]> var_733_begin_0 = const()[name = tensor<string, []>("op_733_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_733_end_0 = const()[name = tensor<string, []>("op_733_end_0"), val = tensor<int32, [4]>([1, 320, 1, 1500])];
            tensor<bool, [4]> var_733_end_mask_0 = const()[name = tensor<string, []>("op_733_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_733_cast_fp16 = slice_by_index(begin = var_733_begin_0, end = var_733_end_0, end_mask = var_733_end_mask_0, x = query_3_cast_fp16)[name = tensor<string, []>("op_733_cast_fp16")];
            tensor<int32, [4]> var_737_begin_0 = const()[name = tensor<string, []>("op_737_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_737_end_0 = const()[name = tensor<string, []>("op_737_end_0"), val = tensor<int32, [4]>([1, 384, 1, 1500])];
            tensor<bool, [4]> var_737_end_mask_0 = const()[name = tensor<string, []>("op_737_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_737_cast_fp16 = slice_by_index(begin = var_737_begin_0, end = var_737_end_0, end_mask = var_737_end_mask_0, x = query_3_cast_fp16)[name = tensor<string, []>("op_737_cast_fp16")];
            tensor<int32, [4]> var_746_begin_0 = const()[name = tensor<string, []>("op_746_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_746_end_0 = const()[name = tensor<string, []>("op_746_end_0"), val = tensor<int32, [4]>([1, 64, 1, 375])];
            tensor<bool, [4]> var_746_end_mask_0 = const()[name = tensor<string, []>("op_746_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_746_cast_fp16 = slice_by_index(begin = var_746_begin_0, end = var_746_end_0, end_mask = var_746_end_mask_0, x = var_717_cast_fp16)[name = tensor<string, []>("op_746_cast_fp16")];
            tensor<int32, [4]> var_753_begin_0 = const()[name = tensor<string, []>("op_753_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 375])];
            tensor<int32, [4]> var_753_end_0 = const()[name = tensor<string, []>("op_753_end_0"), val = tensor<int32, [4]>([1, 64, 1, 750])];
            tensor<bool, [4]> var_753_end_mask_0 = const()[name = tensor<string, []>("op_753_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_753_cast_fp16 = slice_by_index(begin = var_753_begin_0, end = var_753_end_0, end_mask = var_753_end_mask_0, x = var_717_cast_fp16)[name = tensor<string, []>("op_753_cast_fp16")];
            tensor<int32, [4]> var_760_begin_0 = const()[name = tensor<string, []>("op_760_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 750])];
            tensor<int32, [4]> var_760_end_0 = const()[name = tensor<string, []>("op_760_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1125])];
            tensor<bool, [4]> var_760_end_mask_0 = const()[name = tensor<string, []>("op_760_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_760_cast_fp16 = slice_by_index(begin = var_760_begin_0, end = var_760_end_0, end_mask = var_760_end_mask_0, x = var_717_cast_fp16)[name = tensor<string, []>("op_760_cast_fp16")];
            tensor<int32, [4]> var_767_begin_0 = const()[name = tensor<string, []>("op_767_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1125])];
            tensor<int32, [4]> var_767_end_0 = const()[name = tensor<string, []>("op_767_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_767_end_mask_0 = const()[name = tensor<string, []>("op_767_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_767_cast_fp16 = slice_by_index(begin = var_767_begin_0, end = var_767_end_0, end_mask = var_767_end_mask_0, x = var_717_cast_fp16)[name = tensor<string, []>("op_767_cast_fp16")];
            tensor<int32, [4]> var_774_begin_0 = const()[name = tensor<string, []>("op_774_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_774_end_0 = const()[name = tensor<string, []>("op_774_end_0"), val = tensor<int32, [4]>([1, 64, 1, 375])];
            tensor<bool, [4]> var_774_end_mask_0 = const()[name = tensor<string, []>("op_774_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_774_cast_fp16 = slice_by_index(begin = var_774_begin_0, end = var_774_end_0, end_mask = var_774_end_mask_0, x = var_721_cast_fp16)[name = tensor<string, []>("op_774_cast_fp16")];
            tensor<int32, [4]> var_781_begin_0 = const()[name = tensor<string, []>("op_781_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 375])];
            tensor<int32, [4]> var_781_end_0 = const()[name = tensor<string, []>("op_781_end_0"), val = tensor<int32, [4]>([1, 64, 1, 750])];
            tensor<bool, [4]> var_781_end_mask_0 = const()[name = tensor<string, []>("op_781_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_781_cast_fp16 = slice_by_index(begin = var_781_begin_0, end = var_781_end_0, end_mask = var_781_end_mask_0, x = var_721_cast_fp16)[name = tensor<string, []>("op_781_cast_fp16")];
            tensor<int32, [4]> var_788_begin_0 = const()[name = tensor<string, []>("op_788_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 750])];
            tensor<int32, [4]> var_788_end_0 = const()[name = tensor<string, []>("op_788_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1125])];
            tensor<bool, [4]> var_788_end_mask_0 = const()[name = tensor<string, []>("op_788_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_788_cast_fp16 = slice_by_index(begin = var_788_begin_0, end = var_788_end_0, end_mask = var_788_end_mask_0, x = var_721_cast_fp16)[name = tensor<string, []>("op_788_cast_fp16")];
            tensor<int32, [4]> var_795_begin_0 = const()[name = tensor<string, []>("op_795_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1125])];
            tensor<int32, [4]> var_795_end_0 = const()[name = tensor<string, []>("op_795_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_795_end_mask_0 = const()[name = tensor<string, []>("op_795_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_795_cast_fp16 = slice_by_index(begin = var_795_begin_0, end = var_795_end_0, end_mask = var_795_end_mask_0, x = var_721_cast_fp16)[name = tensor<string, []>("op_795_cast_fp16")];
            tensor<int32, [4]> var_802_begin_0 = const()[name = tensor<string, []>("op_802_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_802_end_0 = const()[name = tensor<string, []>("op_802_end_0"), val = tensor<int32, [4]>([1, 64, 1, 375])];
            tensor<bool, [4]> var_802_end_mask_0 = const()[name = tensor<string, []>("op_802_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_802_cast_fp16 = slice_by_index(begin = var_802_begin_0, end = var_802_end_0, end_mask = var_802_end_mask_0, x = var_725_cast_fp16)[name = tensor<string, []>("op_802_cast_fp16")];
            tensor<int32, [4]> var_809_begin_0 = const()[name = tensor<string, []>("op_809_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 375])];
            tensor<int32, [4]> var_809_end_0 = const()[name = tensor<string, []>("op_809_end_0"), val = tensor<int32, [4]>([1, 64, 1, 750])];
            tensor<bool, [4]> var_809_end_mask_0 = const()[name = tensor<string, []>("op_809_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_809_cast_fp16 = slice_by_index(begin = var_809_begin_0, end = var_809_end_0, end_mask = var_809_end_mask_0, x = var_725_cast_fp16)[name = tensor<string, []>("op_809_cast_fp16")];
            tensor<int32, [4]> var_816_begin_0 = const()[name = tensor<string, []>("op_816_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 750])];
            tensor<int32, [4]> var_816_end_0 = const()[name = tensor<string, []>("op_816_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1125])];
            tensor<bool, [4]> var_816_end_mask_0 = const()[name = tensor<string, []>("op_816_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_816_cast_fp16 = slice_by_index(begin = var_816_begin_0, end = var_816_end_0, end_mask = var_816_end_mask_0, x = var_725_cast_fp16)[name = tensor<string, []>("op_816_cast_fp16")];
            tensor<int32, [4]> var_823_begin_0 = const()[name = tensor<string, []>("op_823_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1125])];
            tensor<int32, [4]> var_823_end_0 = const()[name = tensor<string, []>("op_823_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_823_end_mask_0 = const()[name = tensor<string, []>("op_823_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_823_cast_fp16 = slice_by_index(begin = var_823_begin_0, end = var_823_end_0, end_mask = var_823_end_mask_0, x = var_725_cast_fp16)[name = tensor<string, []>("op_823_cast_fp16")];
            tensor<int32, [4]> var_830_begin_0 = const()[name = tensor<string, []>("op_830_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_830_end_0 = const()[name = tensor<string, []>("op_830_end_0"), val = tensor<int32, [4]>([1, 64, 1, 375])];
            tensor<bool, [4]> var_830_end_mask_0 = const()[name = tensor<string, []>("op_830_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_830_cast_fp16 = slice_by_index(begin = var_830_begin_0, end = var_830_end_0, end_mask = var_830_end_mask_0, x = var_729_cast_fp16)[name = tensor<string, []>("op_830_cast_fp16")];
            tensor<int32, [4]> var_837_begin_0 = const()[name = tensor<string, []>("op_837_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 375])];
            tensor<int32, [4]> var_837_end_0 = const()[name = tensor<string, []>("op_837_end_0"), val = tensor<int32, [4]>([1, 64, 1, 750])];
            tensor<bool, [4]> var_837_end_mask_0 = const()[name = tensor<string, []>("op_837_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_837_cast_fp16 = slice_by_index(begin = var_837_begin_0, end = var_837_end_0, end_mask = var_837_end_mask_0, x = var_729_cast_fp16)[name = tensor<string, []>("op_837_cast_fp16")];
            tensor<int32, [4]> var_844_begin_0 = const()[name = tensor<string, []>("op_844_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 750])];
            tensor<int32, [4]> var_844_end_0 = const()[name = tensor<string, []>("op_844_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1125])];
            tensor<bool, [4]> var_844_end_mask_0 = const()[name = tensor<string, []>("op_844_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_844_cast_fp16 = slice_by_index(begin = var_844_begin_0, end = var_844_end_0, end_mask = var_844_end_mask_0, x = var_729_cast_fp16)[name = tensor<string, []>("op_844_cast_fp16")];
            tensor<int32, [4]> var_851_begin_0 = const()[name = tensor<string, []>("op_851_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1125])];
            tensor<int32, [4]> var_851_end_0 = const()[name = tensor<string, []>("op_851_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_851_end_mask_0 = const()[name = tensor<string, []>("op_851_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_851_cast_fp16 = slice_by_index(begin = var_851_begin_0, end = var_851_end_0, end_mask = var_851_end_mask_0, x = var_729_cast_fp16)[name = tensor<string, []>("op_851_cast_fp16")];
            tensor<int32, [4]> var_858_begin_0 = const()[name = tensor<string, []>("op_858_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_858_end_0 = const()[name = tensor<string, []>("op_858_end_0"), val = tensor<int32, [4]>([1, 64, 1, 375])];
            tensor<bool, [4]> var_858_end_mask_0 = const()[name = tensor<string, []>("op_858_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_858_cast_fp16 = slice_by_index(begin = var_858_begin_0, end = var_858_end_0, end_mask = var_858_end_mask_0, x = var_733_cast_fp16)[name = tensor<string, []>("op_858_cast_fp16")];
            tensor<int32, [4]> var_865_begin_0 = const()[name = tensor<string, []>("op_865_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 375])];
            tensor<int32, [4]> var_865_end_0 = const()[name = tensor<string, []>("op_865_end_0"), val = tensor<int32, [4]>([1, 64, 1, 750])];
            tensor<bool, [4]> var_865_end_mask_0 = const()[name = tensor<string, []>("op_865_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_865_cast_fp16 = slice_by_index(begin = var_865_begin_0, end = var_865_end_0, end_mask = var_865_end_mask_0, x = var_733_cast_fp16)[name = tensor<string, []>("op_865_cast_fp16")];
            tensor<int32, [4]> var_872_begin_0 = const()[name = tensor<string, []>("op_872_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 750])];
            tensor<int32, [4]> var_872_end_0 = const()[name = tensor<string, []>("op_872_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1125])];
            tensor<bool, [4]> var_872_end_mask_0 = const()[name = tensor<string, []>("op_872_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_872_cast_fp16 = slice_by_index(begin = var_872_begin_0, end = var_872_end_0, end_mask = var_872_end_mask_0, x = var_733_cast_fp16)[name = tensor<string, []>("op_872_cast_fp16")];
            tensor<int32, [4]> var_879_begin_0 = const()[name = tensor<string, []>("op_879_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1125])];
            tensor<int32, [4]> var_879_end_0 = const()[name = tensor<string, []>("op_879_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_879_end_mask_0 = const()[name = tensor<string, []>("op_879_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_879_cast_fp16 = slice_by_index(begin = var_879_begin_0, end = var_879_end_0, end_mask = var_879_end_mask_0, x = var_733_cast_fp16)[name = tensor<string, []>("op_879_cast_fp16")];
            tensor<int32, [4]> var_886_begin_0 = const()[name = tensor<string, []>("op_886_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_886_end_0 = const()[name = tensor<string, []>("op_886_end_0"), val = tensor<int32, [4]>([1, 64, 1, 375])];
            tensor<bool, [4]> var_886_end_mask_0 = const()[name = tensor<string, []>("op_886_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_886_cast_fp16 = slice_by_index(begin = var_886_begin_0, end = var_886_end_0, end_mask = var_886_end_mask_0, x = var_737_cast_fp16)[name = tensor<string, []>("op_886_cast_fp16")];
            tensor<int32, [4]> var_893_begin_0 = const()[name = tensor<string, []>("op_893_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 375])];
            tensor<int32, [4]> var_893_end_0 = const()[name = tensor<string, []>("op_893_end_0"), val = tensor<int32, [4]>([1, 64, 1, 750])];
            tensor<bool, [4]> var_893_end_mask_0 = const()[name = tensor<string, []>("op_893_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_893_cast_fp16 = slice_by_index(begin = var_893_begin_0, end = var_893_end_0, end_mask = var_893_end_mask_0, x = var_737_cast_fp16)[name = tensor<string, []>("op_893_cast_fp16")];
            tensor<int32, [4]> var_900_begin_0 = const()[name = tensor<string, []>("op_900_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 750])];
            tensor<int32, [4]> var_900_end_0 = const()[name = tensor<string, []>("op_900_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1125])];
            tensor<bool, [4]> var_900_end_mask_0 = const()[name = tensor<string, []>("op_900_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_900_cast_fp16 = slice_by_index(begin = var_900_begin_0, end = var_900_end_0, end_mask = var_900_end_mask_0, x = var_737_cast_fp16)[name = tensor<string, []>("op_900_cast_fp16")];
            tensor<int32, [4]> var_907_begin_0 = const()[name = tensor<string, []>("op_907_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1125])];
            tensor<int32, [4]> var_907_end_0 = const()[name = tensor<string, []>("op_907_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_907_end_mask_0 = const()[name = tensor<string, []>("op_907_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_907_cast_fp16 = slice_by_index(begin = var_907_begin_0, end = var_907_end_0, end_mask = var_907_end_mask_0, x = var_737_cast_fp16)[name = tensor<string, []>("op_907_cast_fp16")];
            tensor<int32, [4]> k_3_perm_0 = const()[name = tensor<string, []>("k_3_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_912_begin_0 = const()[name = tensor<string, []>("op_912_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_912_end_0 = const()[name = tensor<string, []>("op_912_end_0"), val = tensor<int32, [4]>([1, 1500, 1, 64])];
            tensor<bool, [4]> var_912_end_mask_0 = const()[name = tensor<string, []>("op_912_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 1500, 1, 384]> transpose_2 = transpose(perm = k_3_perm_0, x = key_3_cast_fp16)[name = tensor<string, []>("transpose_2")];
            tensor<fp16, [1, 1500, 1, 64]> var_912_cast_fp16 = slice_by_index(begin = var_912_begin_0, end = var_912_end_0, end_mask = var_912_end_mask_0, x = transpose_2)[name = tensor<string, []>("op_912_cast_fp16")];
            tensor<int32, [4]> var_916_begin_0 = const()[name = tensor<string, []>("op_916_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_916_end_0 = const()[name = tensor<string, []>("op_916_end_0"), val = tensor<int32, [4]>([1, 1500, 1, 128])];
            tensor<bool, [4]> var_916_end_mask_0 = const()[name = tensor<string, []>("op_916_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 1500, 1, 64]> var_916_cast_fp16 = slice_by_index(begin = var_916_begin_0, end = var_916_end_0, end_mask = var_916_end_mask_0, x = transpose_2)[name = tensor<string, []>("op_916_cast_fp16")];
            tensor<int32, [4]> var_920_begin_0 = const()[name = tensor<string, []>("op_920_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_920_end_0 = const()[name = tensor<string, []>("op_920_end_0"), val = tensor<int32, [4]>([1, 1500, 1, 192])];
            tensor<bool, [4]> var_920_end_mask_0 = const()[name = tensor<string, []>("op_920_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 1500, 1, 64]> var_920_cast_fp16 = slice_by_index(begin = var_920_begin_0, end = var_920_end_0, end_mask = var_920_end_mask_0, x = transpose_2)[name = tensor<string, []>("op_920_cast_fp16")];
            tensor<int32, [4]> var_924_begin_0 = const()[name = tensor<string, []>("op_924_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_924_end_0 = const()[name = tensor<string, []>("op_924_end_0"), val = tensor<int32, [4]>([1, 1500, 1, 256])];
            tensor<bool, [4]> var_924_end_mask_0 = const()[name = tensor<string, []>("op_924_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 1500, 1, 64]> var_924_cast_fp16 = slice_by_index(begin = var_924_begin_0, end = var_924_end_0, end_mask = var_924_end_mask_0, x = transpose_2)[name = tensor<string, []>("op_924_cast_fp16")];
            tensor<int32, [4]> var_928_begin_0 = const()[name = tensor<string, []>("op_928_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_928_end_0 = const()[name = tensor<string, []>("op_928_end_0"), val = tensor<int32, [4]>([1, 1500, 1, 320])];
            tensor<bool, [4]> var_928_end_mask_0 = const()[name = tensor<string, []>("op_928_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 1500, 1, 64]> var_928_cast_fp16 = slice_by_index(begin = var_928_begin_0, end = var_928_end_0, end_mask = var_928_end_mask_0, x = transpose_2)[name = tensor<string, []>("op_928_cast_fp16")];
            tensor<int32, [4]> var_932_begin_0 = const()[name = tensor<string, []>("op_932_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_932_end_0 = const()[name = tensor<string, []>("op_932_end_0"), val = tensor<int32, [4]>([1, 1500, 1, 384])];
            tensor<bool, [4]> var_932_end_mask_0 = const()[name = tensor<string, []>("op_932_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 1500, 1, 64]> var_932_cast_fp16 = slice_by_index(begin = var_932_begin_0, end = var_932_end_0, end_mask = var_932_end_mask_0, x = transpose_2)[name = tensor<string, []>("op_932_cast_fp16")];
            tensor<int32, [4]> var_934_begin_0 = const()[name = tensor<string, []>("op_934_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_934_end_0 = const()[name = tensor<string, []>("op_934_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_934_end_mask_0 = const()[name = tensor<string, []>("op_934_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_934_cast_fp16 = slice_by_index(begin = var_934_begin_0, end = var_934_end_0, end_mask = var_934_end_mask_0, x = value_3_cast_fp16)[name = tensor<string, []>("op_934_cast_fp16")];
            tensor<int32, [4]> var_938_begin_0 = const()[name = tensor<string, []>("op_938_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_938_end_0 = const()[name = tensor<string, []>("op_938_end_0"), val = tensor<int32, [4]>([1, 128, 1, 1500])];
            tensor<bool, [4]> var_938_end_mask_0 = const()[name = tensor<string, []>("op_938_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_938_cast_fp16 = slice_by_index(begin = var_938_begin_0, end = var_938_end_0, end_mask = var_938_end_mask_0, x = value_3_cast_fp16)[name = tensor<string, []>("op_938_cast_fp16")];
            tensor<int32, [4]> var_942_begin_0 = const()[name = tensor<string, []>("op_942_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_942_end_0 = const()[name = tensor<string, []>("op_942_end_0"), val = tensor<int32, [4]>([1, 192, 1, 1500])];
            tensor<bool, [4]> var_942_end_mask_0 = const()[name = tensor<string, []>("op_942_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_942_cast_fp16 = slice_by_index(begin = var_942_begin_0, end = var_942_end_0, end_mask = var_942_end_mask_0, x = value_3_cast_fp16)[name = tensor<string, []>("op_942_cast_fp16")];
            tensor<int32, [4]> var_946_begin_0 = const()[name = tensor<string, []>("op_946_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_946_end_0 = const()[name = tensor<string, []>("op_946_end_0"), val = tensor<int32, [4]>([1, 256, 1, 1500])];
            tensor<bool, [4]> var_946_end_mask_0 = const()[name = tensor<string, []>("op_946_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_946_cast_fp16 = slice_by_index(begin = var_946_begin_0, end = var_946_end_0, end_mask = var_946_end_mask_0, x = value_3_cast_fp16)[name = tensor<string, []>("op_946_cast_fp16")];
            tensor<int32, [4]> var_950_begin_0 = const()[name = tensor<string, []>("op_950_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_950_end_0 = const()[name = tensor<string, []>("op_950_end_0"), val = tensor<int32, [4]>([1, 320, 1, 1500])];
            tensor<bool, [4]> var_950_end_mask_0 = const()[name = tensor<string, []>("op_950_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_950_cast_fp16 = slice_by_index(begin = var_950_begin_0, end = var_950_end_0, end_mask = var_950_end_mask_0, x = value_3_cast_fp16)[name = tensor<string, []>("op_950_cast_fp16")];
            tensor<int32, [4]> var_954_begin_0 = const()[name = tensor<string, []>("op_954_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_954_end_0 = const()[name = tensor<string, []>("op_954_end_0"), val = tensor<int32, [4]>([1, 384, 1, 1500])];
            tensor<bool, [4]> var_954_end_mask_0 = const()[name = tensor<string, []>("op_954_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_954_cast_fp16 = slice_by_index(begin = var_954_begin_0, end = var_954_end_0, end_mask = var_954_end_mask_0, x = value_3_cast_fp16)[name = tensor<string, []>("op_954_cast_fp16")];
            tensor<string, []> var_958_equation_0 = const()[name = tensor<string, []>("op_958_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_958_cast_fp16 = einsum(equation = var_958_equation_0, values = (var_912_cast_fp16, var_746_cast_fp16))[name = tensor<string, []>("op_958_cast_fp16")];
            tensor<fp16, []> var_959_to_fp16 = const()[name = tensor<string, []>("op_959_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_49_cast_fp16 = mul(x = var_958_cast_fp16, y = var_959_to_fp16)[name = tensor<string, []>("aw_chunk_49_cast_fp16")];
            tensor<string, []> var_962_equation_0 = const()[name = tensor<string, []>("op_962_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_962_cast_fp16 = einsum(equation = var_962_equation_0, values = (var_912_cast_fp16, var_753_cast_fp16))[name = tensor<string, []>("op_962_cast_fp16")];
            tensor<fp16, []> var_963_to_fp16 = const()[name = tensor<string, []>("op_963_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_51_cast_fp16 = mul(x = var_962_cast_fp16, y = var_963_to_fp16)[name = tensor<string, []>("aw_chunk_51_cast_fp16")];
            tensor<string, []> var_966_equation_0 = const()[name = tensor<string, []>("op_966_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_966_cast_fp16 = einsum(equation = var_966_equation_0, values = (var_912_cast_fp16, var_760_cast_fp16))[name = tensor<string, []>("op_966_cast_fp16")];
            tensor<fp16, []> var_967_to_fp16 = const()[name = tensor<string, []>("op_967_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_53_cast_fp16 = mul(x = var_966_cast_fp16, y = var_967_to_fp16)[name = tensor<string, []>("aw_chunk_53_cast_fp16")];
            tensor<string, []> var_970_equation_0 = const()[name = tensor<string, []>("op_970_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_970_cast_fp16 = einsum(equation = var_970_equation_0, values = (var_912_cast_fp16, var_767_cast_fp16))[name = tensor<string, []>("op_970_cast_fp16")];
            tensor<fp16, []> var_971_to_fp16 = const()[name = tensor<string, []>("op_971_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_55_cast_fp16 = mul(x = var_970_cast_fp16, y = var_971_to_fp16)[name = tensor<string, []>("aw_chunk_55_cast_fp16")];
            tensor<string, []> var_974_equation_0 = const()[name = tensor<string, []>("op_974_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_974_cast_fp16 = einsum(equation = var_974_equation_0, values = (var_916_cast_fp16, var_774_cast_fp16))[name = tensor<string, []>("op_974_cast_fp16")];
            tensor<fp16, []> var_975_to_fp16 = const()[name = tensor<string, []>("op_975_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_57_cast_fp16 = mul(x = var_974_cast_fp16, y = var_975_to_fp16)[name = tensor<string, []>("aw_chunk_57_cast_fp16")];
            tensor<string, []> var_978_equation_0 = const()[name = tensor<string, []>("op_978_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_978_cast_fp16 = einsum(equation = var_978_equation_0, values = (var_916_cast_fp16, var_781_cast_fp16))[name = tensor<string, []>("op_978_cast_fp16")];
            tensor<fp16, []> var_979_to_fp16 = const()[name = tensor<string, []>("op_979_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_59_cast_fp16 = mul(x = var_978_cast_fp16, y = var_979_to_fp16)[name = tensor<string, []>("aw_chunk_59_cast_fp16")];
            tensor<string, []> var_982_equation_0 = const()[name = tensor<string, []>("op_982_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_982_cast_fp16 = einsum(equation = var_982_equation_0, values = (var_916_cast_fp16, var_788_cast_fp16))[name = tensor<string, []>("op_982_cast_fp16")];
            tensor<fp16, []> var_983_to_fp16 = const()[name = tensor<string, []>("op_983_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_61_cast_fp16 = mul(x = var_982_cast_fp16, y = var_983_to_fp16)[name = tensor<string, []>("aw_chunk_61_cast_fp16")];
            tensor<string, []> var_986_equation_0 = const()[name = tensor<string, []>("op_986_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_986_cast_fp16 = einsum(equation = var_986_equation_0, values = (var_916_cast_fp16, var_795_cast_fp16))[name = tensor<string, []>("op_986_cast_fp16")];
            tensor<fp16, []> var_987_to_fp16 = const()[name = tensor<string, []>("op_987_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_63_cast_fp16 = mul(x = var_986_cast_fp16, y = var_987_to_fp16)[name = tensor<string, []>("aw_chunk_63_cast_fp16")];
            tensor<string, []> var_990_equation_0 = const()[name = tensor<string, []>("op_990_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_990_cast_fp16 = einsum(equation = var_990_equation_0, values = (var_920_cast_fp16, var_802_cast_fp16))[name = tensor<string, []>("op_990_cast_fp16")];
            tensor<fp16, []> var_991_to_fp16 = const()[name = tensor<string, []>("op_991_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_65_cast_fp16 = mul(x = var_990_cast_fp16, y = var_991_to_fp16)[name = tensor<string, []>("aw_chunk_65_cast_fp16")];
            tensor<string, []> var_994_equation_0 = const()[name = tensor<string, []>("op_994_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_994_cast_fp16 = einsum(equation = var_994_equation_0, values = (var_920_cast_fp16, var_809_cast_fp16))[name = tensor<string, []>("op_994_cast_fp16")];
            tensor<fp16, []> var_995_to_fp16 = const()[name = tensor<string, []>("op_995_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_67_cast_fp16 = mul(x = var_994_cast_fp16, y = var_995_to_fp16)[name = tensor<string, []>("aw_chunk_67_cast_fp16")];
            tensor<string, []> var_998_equation_0 = const()[name = tensor<string, []>("op_998_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_998_cast_fp16 = einsum(equation = var_998_equation_0, values = (var_920_cast_fp16, var_816_cast_fp16))[name = tensor<string, []>("op_998_cast_fp16")];
            tensor<fp16, []> var_999_to_fp16 = const()[name = tensor<string, []>("op_999_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_69_cast_fp16 = mul(x = var_998_cast_fp16, y = var_999_to_fp16)[name = tensor<string, []>("aw_chunk_69_cast_fp16")];
            tensor<string, []> var_1002_equation_0 = const()[name = tensor<string, []>("op_1002_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1002_cast_fp16 = einsum(equation = var_1002_equation_0, values = (var_920_cast_fp16, var_823_cast_fp16))[name = tensor<string, []>("op_1002_cast_fp16")];
            tensor<fp16, []> var_1003_to_fp16 = const()[name = tensor<string, []>("op_1003_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_71_cast_fp16 = mul(x = var_1002_cast_fp16, y = var_1003_to_fp16)[name = tensor<string, []>("aw_chunk_71_cast_fp16")];
            tensor<string, []> var_1006_equation_0 = const()[name = tensor<string, []>("op_1006_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1006_cast_fp16 = einsum(equation = var_1006_equation_0, values = (var_924_cast_fp16, var_830_cast_fp16))[name = tensor<string, []>("op_1006_cast_fp16")];
            tensor<fp16, []> var_1007_to_fp16 = const()[name = tensor<string, []>("op_1007_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_73_cast_fp16 = mul(x = var_1006_cast_fp16, y = var_1007_to_fp16)[name = tensor<string, []>("aw_chunk_73_cast_fp16")];
            tensor<string, []> var_1010_equation_0 = const()[name = tensor<string, []>("op_1010_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1010_cast_fp16 = einsum(equation = var_1010_equation_0, values = (var_924_cast_fp16, var_837_cast_fp16))[name = tensor<string, []>("op_1010_cast_fp16")];
            tensor<fp16, []> var_1011_to_fp16 = const()[name = tensor<string, []>("op_1011_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_75_cast_fp16 = mul(x = var_1010_cast_fp16, y = var_1011_to_fp16)[name = tensor<string, []>("aw_chunk_75_cast_fp16")];
            tensor<string, []> var_1014_equation_0 = const()[name = tensor<string, []>("op_1014_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1014_cast_fp16 = einsum(equation = var_1014_equation_0, values = (var_924_cast_fp16, var_844_cast_fp16))[name = tensor<string, []>("op_1014_cast_fp16")];
            tensor<fp16, []> var_1015_to_fp16 = const()[name = tensor<string, []>("op_1015_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_77_cast_fp16 = mul(x = var_1014_cast_fp16, y = var_1015_to_fp16)[name = tensor<string, []>("aw_chunk_77_cast_fp16")];
            tensor<string, []> var_1018_equation_0 = const()[name = tensor<string, []>("op_1018_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1018_cast_fp16 = einsum(equation = var_1018_equation_0, values = (var_924_cast_fp16, var_851_cast_fp16))[name = tensor<string, []>("op_1018_cast_fp16")];
            tensor<fp16, []> var_1019_to_fp16 = const()[name = tensor<string, []>("op_1019_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_79_cast_fp16 = mul(x = var_1018_cast_fp16, y = var_1019_to_fp16)[name = tensor<string, []>("aw_chunk_79_cast_fp16")];
            tensor<string, []> var_1022_equation_0 = const()[name = tensor<string, []>("op_1022_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1022_cast_fp16 = einsum(equation = var_1022_equation_0, values = (var_928_cast_fp16, var_858_cast_fp16))[name = tensor<string, []>("op_1022_cast_fp16")];
            tensor<fp16, []> var_1023_to_fp16 = const()[name = tensor<string, []>("op_1023_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_81_cast_fp16 = mul(x = var_1022_cast_fp16, y = var_1023_to_fp16)[name = tensor<string, []>("aw_chunk_81_cast_fp16")];
            tensor<string, []> var_1026_equation_0 = const()[name = tensor<string, []>("op_1026_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1026_cast_fp16 = einsum(equation = var_1026_equation_0, values = (var_928_cast_fp16, var_865_cast_fp16))[name = tensor<string, []>("op_1026_cast_fp16")];
            tensor<fp16, []> var_1027_to_fp16 = const()[name = tensor<string, []>("op_1027_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_83_cast_fp16 = mul(x = var_1026_cast_fp16, y = var_1027_to_fp16)[name = tensor<string, []>("aw_chunk_83_cast_fp16")];
            tensor<string, []> var_1030_equation_0 = const()[name = tensor<string, []>("op_1030_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1030_cast_fp16 = einsum(equation = var_1030_equation_0, values = (var_928_cast_fp16, var_872_cast_fp16))[name = tensor<string, []>("op_1030_cast_fp16")];
            tensor<fp16, []> var_1031_to_fp16 = const()[name = tensor<string, []>("op_1031_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_85_cast_fp16 = mul(x = var_1030_cast_fp16, y = var_1031_to_fp16)[name = tensor<string, []>("aw_chunk_85_cast_fp16")];
            tensor<string, []> var_1034_equation_0 = const()[name = tensor<string, []>("op_1034_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1034_cast_fp16 = einsum(equation = var_1034_equation_0, values = (var_928_cast_fp16, var_879_cast_fp16))[name = tensor<string, []>("op_1034_cast_fp16")];
            tensor<fp16, []> var_1035_to_fp16 = const()[name = tensor<string, []>("op_1035_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_87_cast_fp16 = mul(x = var_1034_cast_fp16, y = var_1035_to_fp16)[name = tensor<string, []>("aw_chunk_87_cast_fp16")];
            tensor<string, []> var_1038_equation_0 = const()[name = tensor<string, []>("op_1038_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1038_cast_fp16 = einsum(equation = var_1038_equation_0, values = (var_932_cast_fp16, var_886_cast_fp16))[name = tensor<string, []>("op_1038_cast_fp16")];
            tensor<fp16, []> var_1039_to_fp16 = const()[name = tensor<string, []>("op_1039_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_89_cast_fp16 = mul(x = var_1038_cast_fp16, y = var_1039_to_fp16)[name = tensor<string, []>("aw_chunk_89_cast_fp16")];
            tensor<string, []> var_1042_equation_0 = const()[name = tensor<string, []>("op_1042_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1042_cast_fp16 = einsum(equation = var_1042_equation_0, values = (var_932_cast_fp16, var_893_cast_fp16))[name = tensor<string, []>("op_1042_cast_fp16")];
            tensor<fp16, []> var_1043_to_fp16 = const()[name = tensor<string, []>("op_1043_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_91_cast_fp16 = mul(x = var_1042_cast_fp16, y = var_1043_to_fp16)[name = tensor<string, []>("aw_chunk_91_cast_fp16")];
            tensor<string, []> var_1046_equation_0 = const()[name = tensor<string, []>("op_1046_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1046_cast_fp16 = einsum(equation = var_1046_equation_0, values = (var_932_cast_fp16, var_900_cast_fp16))[name = tensor<string, []>("op_1046_cast_fp16")];
            tensor<fp16, []> var_1047_to_fp16 = const()[name = tensor<string, []>("op_1047_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_93_cast_fp16 = mul(x = var_1046_cast_fp16, y = var_1047_to_fp16)[name = tensor<string, []>("aw_chunk_93_cast_fp16")];
            tensor<string, []> var_1050_equation_0 = const()[name = tensor<string, []>("op_1050_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1050_cast_fp16 = einsum(equation = var_1050_equation_0, values = (var_932_cast_fp16, var_907_cast_fp16))[name = tensor<string, []>("op_1050_cast_fp16")];
            tensor<fp16, []> var_1051_to_fp16 = const()[name = tensor<string, []>("op_1051_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_95_cast_fp16 = mul(x = var_1050_cast_fp16, y = var_1051_to_fp16)[name = tensor<string, []>("aw_chunk_95_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1053_cast_fp16 = softmax(axis = var_662, x = aw_chunk_49_cast_fp16)[name = tensor<string, []>("op_1053_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1054_cast_fp16 = softmax(axis = var_662, x = aw_chunk_51_cast_fp16)[name = tensor<string, []>("op_1054_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1055_cast_fp16 = softmax(axis = var_662, x = aw_chunk_53_cast_fp16)[name = tensor<string, []>("op_1055_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1056_cast_fp16 = softmax(axis = var_662, x = aw_chunk_55_cast_fp16)[name = tensor<string, []>("op_1056_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1057_cast_fp16 = softmax(axis = var_662, x = aw_chunk_57_cast_fp16)[name = tensor<string, []>("op_1057_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1058_cast_fp16 = softmax(axis = var_662, x = aw_chunk_59_cast_fp16)[name = tensor<string, []>("op_1058_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1059_cast_fp16 = softmax(axis = var_662, x = aw_chunk_61_cast_fp16)[name = tensor<string, []>("op_1059_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1060_cast_fp16 = softmax(axis = var_662, x = aw_chunk_63_cast_fp16)[name = tensor<string, []>("op_1060_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1061_cast_fp16 = softmax(axis = var_662, x = aw_chunk_65_cast_fp16)[name = tensor<string, []>("op_1061_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1062_cast_fp16 = softmax(axis = var_662, x = aw_chunk_67_cast_fp16)[name = tensor<string, []>("op_1062_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1063_cast_fp16 = softmax(axis = var_662, x = aw_chunk_69_cast_fp16)[name = tensor<string, []>("op_1063_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1064_cast_fp16 = softmax(axis = var_662, x = aw_chunk_71_cast_fp16)[name = tensor<string, []>("op_1064_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1065_cast_fp16 = softmax(axis = var_662, x = aw_chunk_73_cast_fp16)[name = tensor<string, []>("op_1065_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1066_cast_fp16 = softmax(axis = var_662, x = aw_chunk_75_cast_fp16)[name = tensor<string, []>("op_1066_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1067_cast_fp16 = softmax(axis = var_662, x = aw_chunk_77_cast_fp16)[name = tensor<string, []>("op_1067_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1068_cast_fp16 = softmax(axis = var_662, x = aw_chunk_79_cast_fp16)[name = tensor<string, []>("op_1068_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1069_cast_fp16 = softmax(axis = var_662, x = aw_chunk_81_cast_fp16)[name = tensor<string, []>("op_1069_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1070_cast_fp16 = softmax(axis = var_662, x = aw_chunk_83_cast_fp16)[name = tensor<string, []>("op_1070_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1071_cast_fp16 = softmax(axis = var_662, x = aw_chunk_85_cast_fp16)[name = tensor<string, []>("op_1071_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1072_cast_fp16 = softmax(axis = var_662, x = aw_chunk_87_cast_fp16)[name = tensor<string, []>("op_1072_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1073_cast_fp16 = softmax(axis = var_662, x = aw_chunk_89_cast_fp16)[name = tensor<string, []>("op_1073_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1074_cast_fp16 = softmax(axis = var_662, x = aw_chunk_91_cast_fp16)[name = tensor<string, []>("op_1074_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1075_cast_fp16 = softmax(axis = var_662, x = aw_chunk_93_cast_fp16)[name = tensor<string, []>("op_1075_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1076_cast_fp16 = softmax(axis = var_662, x = aw_chunk_95_cast_fp16)[name = tensor<string, []>("op_1076_cast_fp16")];
            tensor<string, []> var_1078_equation_0 = const()[name = tensor<string, []>("op_1078_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1078_cast_fp16 = einsum(equation = var_1078_equation_0, values = (var_934_cast_fp16, var_1053_cast_fp16))[name = tensor<string, []>("op_1078_cast_fp16")];
            tensor<string, []> var_1080_equation_0 = const()[name = tensor<string, []>("op_1080_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1080_cast_fp16 = einsum(equation = var_1080_equation_0, values = (var_934_cast_fp16, var_1054_cast_fp16))[name = tensor<string, []>("op_1080_cast_fp16")];
            tensor<string, []> var_1082_equation_0 = const()[name = tensor<string, []>("op_1082_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1082_cast_fp16 = einsum(equation = var_1082_equation_0, values = (var_934_cast_fp16, var_1055_cast_fp16))[name = tensor<string, []>("op_1082_cast_fp16")];
            tensor<string, []> var_1084_equation_0 = const()[name = tensor<string, []>("op_1084_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1084_cast_fp16 = einsum(equation = var_1084_equation_0, values = (var_934_cast_fp16, var_1056_cast_fp16))[name = tensor<string, []>("op_1084_cast_fp16")];
            tensor<string, []> var_1086_equation_0 = const()[name = tensor<string, []>("op_1086_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1086_cast_fp16 = einsum(equation = var_1086_equation_0, values = (var_938_cast_fp16, var_1057_cast_fp16))[name = tensor<string, []>("op_1086_cast_fp16")];
            tensor<string, []> var_1088_equation_0 = const()[name = tensor<string, []>("op_1088_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1088_cast_fp16 = einsum(equation = var_1088_equation_0, values = (var_938_cast_fp16, var_1058_cast_fp16))[name = tensor<string, []>("op_1088_cast_fp16")];
            tensor<string, []> var_1090_equation_0 = const()[name = tensor<string, []>("op_1090_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1090_cast_fp16 = einsum(equation = var_1090_equation_0, values = (var_938_cast_fp16, var_1059_cast_fp16))[name = tensor<string, []>("op_1090_cast_fp16")];
            tensor<string, []> var_1092_equation_0 = const()[name = tensor<string, []>("op_1092_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1092_cast_fp16 = einsum(equation = var_1092_equation_0, values = (var_938_cast_fp16, var_1060_cast_fp16))[name = tensor<string, []>("op_1092_cast_fp16")];
            tensor<string, []> var_1094_equation_0 = const()[name = tensor<string, []>("op_1094_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1094_cast_fp16 = einsum(equation = var_1094_equation_0, values = (var_942_cast_fp16, var_1061_cast_fp16))[name = tensor<string, []>("op_1094_cast_fp16")];
            tensor<string, []> var_1096_equation_0 = const()[name = tensor<string, []>("op_1096_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1096_cast_fp16 = einsum(equation = var_1096_equation_0, values = (var_942_cast_fp16, var_1062_cast_fp16))[name = tensor<string, []>("op_1096_cast_fp16")];
            tensor<string, []> var_1098_equation_0 = const()[name = tensor<string, []>("op_1098_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1098_cast_fp16 = einsum(equation = var_1098_equation_0, values = (var_942_cast_fp16, var_1063_cast_fp16))[name = tensor<string, []>("op_1098_cast_fp16")];
            tensor<string, []> var_1100_equation_0 = const()[name = tensor<string, []>("op_1100_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1100_cast_fp16 = einsum(equation = var_1100_equation_0, values = (var_942_cast_fp16, var_1064_cast_fp16))[name = tensor<string, []>("op_1100_cast_fp16")];
            tensor<string, []> var_1102_equation_0 = const()[name = tensor<string, []>("op_1102_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1102_cast_fp16 = einsum(equation = var_1102_equation_0, values = (var_946_cast_fp16, var_1065_cast_fp16))[name = tensor<string, []>("op_1102_cast_fp16")];
            tensor<string, []> var_1104_equation_0 = const()[name = tensor<string, []>("op_1104_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1104_cast_fp16 = einsum(equation = var_1104_equation_0, values = (var_946_cast_fp16, var_1066_cast_fp16))[name = tensor<string, []>("op_1104_cast_fp16")];
            tensor<string, []> var_1106_equation_0 = const()[name = tensor<string, []>("op_1106_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1106_cast_fp16 = einsum(equation = var_1106_equation_0, values = (var_946_cast_fp16, var_1067_cast_fp16))[name = tensor<string, []>("op_1106_cast_fp16")];
            tensor<string, []> var_1108_equation_0 = const()[name = tensor<string, []>("op_1108_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1108_cast_fp16 = einsum(equation = var_1108_equation_0, values = (var_946_cast_fp16, var_1068_cast_fp16))[name = tensor<string, []>("op_1108_cast_fp16")];
            tensor<string, []> var_1110_equation_0 = const()[name = tensor<string, []>("op_1110_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1110_cast_fp16 = einsum(equation = var_1110_equation_0, values = (var_950_cast_fp16, var_1069_cast_fp16))[name = tensor<string, []>("op_1110_cast_fp16")];
            tensor<string, []> var_1112_equation_0 = const()[name = tensor<string, []>("op_1112_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1112_cast_fp16 = einsum(equation = var_1112_equation_0, values = (var_950_cast_fp16, var_1070_cast_fp16))[name = tensor<string, []>("op_1112_cast_fp16")];
            tensor<string, []> var_1114_equation_0 = const()[name = tensor<string, []>("op_1114_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1114_cast_fp16 = einsum(equation = var_1114_equation_0, values = (var_950_cast_fp16, var_1071_cast_fp16))[name = tensor<string, []>("op_1114_cast_fp16")];
            tensor<string, []> var_1116_equation_0 = const()[name = tensor<string, []>("op_1116_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1116_cast_fp16 = einsum(equation = var_1116_equation_0, values = (var_950_cast_fp16, var_1072_cast_fp16))[name = tensor<string, []>("op_1116_cast_fp16")];
            tensor<string, []> var_1118_equation_0 = const()[name = tensor<string, []>("op_1118_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1118_cast_fp16 = einsum(equation = var_1118_equation_0, values = (var_954_cast_fp16, var_1073_cast_fp16))[name = tensor<string, []>("op_1118_cast_fp16")];
            tensor<string, []> var_1120_equation_0 = const()[name = tensor<string, []>("op_1120_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1120_cast_fp16 = einsum(equation = var_1120_equation_0, values = (var_954_cast_fp16, var_1074_cast_fp16))[name = tensor<string, []>("op_1120_cast_fp16")];
            tensor<string, []> var_1122_equation_0 = const()[name = tensor<string, []>("op_1122_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1122_cast_fp16 = einsum(equation = var_1122_equation_0, values = (var_954_cast_fp16, var_1075_cast_fp16))[name = tensor<string, []>("op_1122_cast_fp16")];
            tensor<string, []> var_1124_equation_0 = const()[name = tensor<string, []>("op_1124_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1124_cast_fp16 = einsum(equation = var_1124_equation_0, values = (var_954_cast_fp16, var_1076_cast_fp16))[name = tensor<string, []>("op_1124_cast_fp16")];
            tensor<bool, []> var_1126_interleave_0 = const()[name = tensor<string, []>("op_1126_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 1500]> var_1126_cast_fp16 = concat(axis = var_651, interleave = var_1126_interleave_0, values = (var_1078_cast_fp16, var_1080_cast_fp16, var_1082_cast_fp16, var_1084_cast_fp16))[name = tensor<string, []>("op_1126_cast_fp16")];
            tensor<bool, []> var_1128_interleave_0 = const()[name = tensor<string, []>("op_1128_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 1500]> var_1128_cast_fp16 = concat(axis = var_651, interleave = var_1128_interleave_0, values = (var_1086_cast_fp16, var_1088_cast_fp16, var_1090_cast_fp16, var_1092_cast_fp16))[name = tensor<string, []>("op_1128_cast_fp16")];
            tensor<bool, []> var_1130_interleave_0 = const()[name = tensor<string, []>("op_1130_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 1500]> var_1130_cast_fp16 = concat(axis = var_651, interleave = var_1130_interleave_0, values = (var_1094_cast_fp16, var_1096_cast_fp16, var_1098_cast_fp16, var_1100_cast_fp16))[name = tensor<string, []>("op_1130_cast_fp16")];
            tensor<bool, []> var_1132_interleave_0 = const()[name = tensor<string, []>("op_1132_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 1500]> var_1132_cast_fp16 = concat(axis = var_651, interleave = var_1132_interleave_0, values = (var_1102_cast_fp16, var_1104_cast_fp16, var_1106_cast_fp16, var_1108_cast_fp16))[name = tensor<string, []>("op_1132_cast_fp16")];
            tensor<bool, []> var_1134_interleave_0 = const()[name = tensor<string, []>("op_1134_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 1500]> var_1134_cast_fp16 = concat(axis = var_651, interleave = var_1134_interleave_0, values = (var_1110_cast_fp16, var_1112_cast_fp16, var_1114_cast_fp16, var_1116_cast_fp16))[name = tensor<string, []>("op_1134_cast_fp16")];
            tensor<bool, []> var_1136_interleave_0 = const()[name = tensor<string, []>("op_1136_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 1500]> var_1136_cast_fp16 = concat(axis = var_651, interleave = var_1136_interleave_0, values = (var_1118_cast_fp16, var_1120_cast_fp16, var_1122_cast_fp16, var_1124_cast_fp16))[name = tensor<string, []>("op_1136_cast_fp16")];
            tensor<bool, []> input_9_interleave_0 = const()[name = tensor<string, []>("input_9_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 1, 1500]> input_9_cast_fp16 = concat(axis = var_662, interleave = input_9_interleave_0, values = (var_1126_cast_fp16, var_1128_cast_fp16, var_1130_cast_fp16, var_1132_cast_fp16, var_1134_cast_fp16, var_1136_cast_fp16))[name = tensor<string, []>("input_9_cast_fp16")];
            tensor<int32, [2]> var_1141 = const()[name = tensor<string, []>("op_1141"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1143 = const()[name = tensor<string, []>("op_1143"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_7_pad_type_0 = const()[name = tensor<string, []>("obj_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_7_pad_0 = const()[name = tensor<string, []>("obj_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_1_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6662016)))];
            tensor<fp16, [384]> layers_1_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6956992)))];
            tensor<fp16, [1, 384, 1, 1500]> obj_7_cast_fp16 = conv(bias = layers_1_self_attn_o_proj_bias_to_fp16, dilations = var_1143, groups = var_662, pad = obj_7_pad_0, pad_type = obj_7_pad_type_0, strides = var_1141, weight = layers_1_self_attn_o_proj_weight_to_fp16, x = input_9_cast_fp16)[name = tensor<string, []>("obj_7_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> inputs_7_cast_fp16 = add(x = inputs_5_cast_fp16, y = obj_7_cast_fp16)[name = tensor<string, []>("inputs_7_cast_fp16")];
            tensor<int32, [1]> var_1149 = const()[name = tensor<string, []>("op_1149"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1500]> channels_mean_7_cast_fp16 = reduce_mean(axes = var_1149, keep_dims = var_663, x = inputs_7_cast_fp16)[name = tensor<string, []>("channels_mean_7_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> zero_mean_7_cast_fp16 = sub(x = inputs_7_cast_fp16, y = channels_mean_7_cast_fp16)[name = tensor<string, []>("zero_mean_7_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> zero_mean_sq_7_cast_fp16 = mul(x = zero_mean_7_cast_fp16, y = zero_mean_7_cast_fp16)[name = tensor<string, []>("zero_mean_sq_7_cast_fp16")];
            tensor<int32, [1]> var_1153 = const()[name = tensor<string, []>("op_1153"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1500]> var_1154_cast_fp16 = reduce_mean(axes = var_1153, keep_dims = var_663, x = zero_mean_sq_7_cast_fp16)[name = tensor<string, []>("op_1154_cast_fp16")];
            tensor<fp16, []> var_1155_to_fp16 = const()[name = tensor<string, []>("op_1155_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1500]> var_1156_cast_fp16 = add(x = var_1154_cast_fp16, y = var_1155_to_fp16)[name = tensor<string, []>("op_1156_cast_fp16")];
            tensor<fp16, []> denom_7_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_7_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1500]> denom_7_cast_fp16 = rsqrt(epsilon = denom_7_epsilon_0_to_fp16, x = var_1156_cast_fp16)[name = tensor<string, []>("denom_7_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> out_7_cast_fp16 = mul(x = zero_mean_7_cast_fp16, y = denom_7_cast_fp16)[name = tensor<string, []>("out_7_cast_fp16")];
            tensor<fp16, [384]> input_11_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_11_gamma_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6957824)))];
            tensor<fp16, [384]> input_11_beta_0_to_fp16 = const()[name = tensor<string, []>("input_11_beta_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6958656)))];
            tensor<fp16, []> input_11_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_11_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 384, 1, 1500]> input_11_cast_fp16 = batch_norm(beta = input_11_beta_0_to_fp16, epsilon = input_11_epsilon_0_to_fp16, gamma = input_11_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_7_cast_fp16)[name = tensor<string, []>("input_11_cast_fp16")];
            tensor<int32, [2]> var_1167 = const()[name = tensor<string, []>("op_1167"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1169 = const()[name = tensor<string, []>("op_1169"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_13_pad_type_0 = const()[name = tensor<string, []>("input_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_13_pad_0 = const()[name = tensor<string, []>("input_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 384, 1, 1]> layers_1_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_fc1_weight_to_fp16"), val = tensor<fp16, [1536, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6959488)))];
            tensor<fp16, [1536]> layers_1_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_fc1_bias_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8139200)))];
            tensor<fp16, [1, 1536, 1, 1500]> input_13_cast_fp16 = conv(bias = layers_1_fc1_bias_to_fp16, dilations = var_1169, groups = var_662, pad = input_13_pad_0, pad_type = input_13_pad_type_0, strides = var_1167, weight = layers_1_fc1_weight_to_fp16, x = input_11_cast_fp16)[name = tensor<string, []>("input_13_cast_fp16")];
            tensor<string, []> input_15_mode_0 = const()[name = tensor<string, []>("input_15_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 1536, 1, 1500]> input_15_cast_fp16 = gelu(mode = input_15_mode_0, x = input_13_cast_fp16)[name = tensor<string, []>("input_15_cast_fp16")];
            tensor<int32, [2]> var_1175 = const()[name = tensor<string, []>("op_1175"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1177 = const()[name = tensor<string, []>("op_1177"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_7_pad_type_0 = const()[name = tensor<string, []>("hidden_states_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_7_pad_0 = const()[name = tensor<string, []>("hidden_states_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 1536, 1, 1]> layers_1_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_1_fc2_weight_to_fp16"), val = tensor<fp16, [384, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8142336)))];
            tensor<fp16, [384]> layers_1_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_1_fc2_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9322048)))];
            tensor<fp16, [1, 384, 1, 1500]> hidden_states_7_cast_fp16 = conv(bias = layers_1_fc2_bias_to_fp16, dilations = var_1177, groups = var_662, pad = hidden_states_7_pad_0, pad_type = hidden_states_7_pad_type_0, strides = var_1175, weight = layers_1_fc2_weight_to_fp16, x = input_15_cast_fp16)[name = tensor<string, []>("hidden_states_7_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> inputs_9_cast_fp16 = add(x = inputs_7_cast_fp16, y = hidden_states_7_cast_fp16)[name = tensor<string, []>("inputs_9_cast_fp16")];
            tensor<int32, []> var_1184 = const()[name = tensor<string, []>("op_1184"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_1195 = const()[name = tensor<string, []>("op_1195"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_1196 = const()[name = tensor<string, []>("op_1196"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_1206 = const()[name = tensor<string, []>("op_1206"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1500]> channels_mean_9_cast_fp16 = reduce_mean(axes = var_1206, keep_dims = var_1196, x = inputs_9_cast_fp16)[name = tensor<string, []>("channels_mean_9_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> zero_mean_9_cast_fp16 = sub(x = inputs_9_cast_fp16, y = channels_mean_9_cast_fp16)[name = tensor<string, []>("zero_mean_9_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> zero_mean_sq_9_cast_fp16 = mul(x = zero_mean_9_cast_fp16, y = zero_mean_9_cast_fp16)[name = tensor<string, []>("zero_mean_sq_9_cast_fp16")];
            tensor<int32, [1]> var_1210 = const()[name = tensor<string, []>("op_1210"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1500]> var_1211_cast_fp16 = reduce_mean(axes = var_1210, keep_dims = var_1196, x = zero_mean_sq_9_cast_fp16)[name = tensor<string, []>("op_1211_cast_fp16")];
            tensor<fp16, []> var_1212_to_fp16 = const()[name = tensor<string, []>("op_1212_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1500]> var_1213_cast_fp16 = add(x = var_1211_cast_fp16, y = var_1212_to_fp16)[name = tensor<string, []>("op_1213_cast_fp16")];
            tensor<fp16, []> denom_9_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_9_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1500]> denom_9_cast_fp16 = rsqrt(epsilon = denom_9_epsilon_0_to_fp16, x = var_1213_cast_fp16)[name = tensor<string, []>("denom_9_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> out_9_cast_fp16 = mul(x = zero_mean_9_cast_fp16, y = denom_9_cast_fp16)[name = tensor<string, []>("out_9_cast_fp16")];
            tensor<fp16, [384]> obj_9_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_9_gamma_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9322880)))];
            tensor<fp16, [384]> obj_9_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_9_beta_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9323712)))];
            tensor<fp16, []> obj_9_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_9_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 384, 1, 1500]> obj_9_cast_fp16 = batch_norm(beta = obj_9_beta_0_to_fp16, epsilon = obj_9_epsilon_0_to_fp16, gamma = obj_9_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_9_cast_fp16)[name = tensor<string, []>("obj_9_cast_fp16")];
            tensor<int32, [2]> var_1228 = const()[name = tensor<string, []>("op_1228"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1230 = const()[name = tensor<string, []>("op_1230"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_5_pad_type_0 = const()[name = tensor<string, []>("query_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_5_pad_0 = const()[name = tensor<string, []>("query_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_2_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9324544)))];
            tensor<fp16, [384]> layers_2_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9619520)))];
            tensor<fp16, [1, 384, 1, 1500]> query_5_cast_fp16 = conv(bias = layers_2_self_attn_q_proj_bias_to_fp16, dilations = var_1230, groups = var_1195, pad = query_5_pad_0, pad_type = query_5_pad_type_0, strides = var_1228, weight = layers_2_self_attn_q_proj_weight_to_fp16, x = obj_9_cast_fp16)[name = tensor<string, []>("query_5_cast_fp16")];
            tensor<int32, [2]> var_1234 = const()[name = tensor<string, []>("op_1234"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1236 = const()[name = tensor<string, []>("op_1236"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_5_pad_type_0 = const()[name = tensor<string, []>("key_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_5_pad_0 = const()[name = tensor<string, []>("key_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_2_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9620352)))];
            tensor<fp16, [1, 384, 1, 1500]> key_5_cast_fp16 = conv(dilations = var_1236, groups = var_1195, pad = key_5_pad_0, pad_type = key_5_pad_type_0, strides = var_1234, weight = layers_2_self_attn_k_proj_weight_to_fp16, x = obj_9_cast_fp16)[name = tensor<string, []>("key_5_cast_fp16")];
            tensor<int32, [2]> var_1241 = const()[name = tensor<string, []>("op_1241"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1243 = const()[name = tensor<string, []>("op_1243"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_5_pad_type_0 = const()[name = tensor<string, []>("value_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_5_pad_0 = const()[name = tensor<string, []>("value_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_2_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9915328)))];
            tensor<fp16, [384]> layers_2_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10210304)))];
            tensor<fp16, [1, 384, 1, 1500]> value_5_cast_fp16 = conv(bias = layers_2_self_attn_v_proj_bias_to_fp16, dilations = var_1243, groups = var_1195, pad = value_5_pad_0, pad_type = value_5_pad_type_0, strides = var_1241, weight = layers_2_self_attn_v_proj_weight_to_fp16, x = obj_9_cast_fp16)[name = tensor<string, []>("value_5_cast_fp16")];
            tensor<int32, [4]> var_1250_begin_0 = const()[name = tensor<string, []>("op_1250_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1250_end_0 = const()[name = tensor<string, []>("op_1250_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_1250_end_mask_0 = const()[name = tensor<string, []>("op_1250_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_1250_cast_fp16 = slice_by_index(begin = var_1250_begin_0, end = var_1250_end_0, end_mask = var_1250_end_mask_0, x = query_5_cast_fp16)[name = tensor<string, []>("op_1250_cast_fp16")];
            tensor<int32, [4]> var_1254_begin_0 = const()[name = tensor<string, []>("op_1254_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_1254_end_0 = const()[name = tensor<string, []>("op_1254_end_0"), val = tensor<int32, [4]>([1, 128, 1, 1500])];
            tensor<bool, [4]> var_1254_end_mask_0 = const()[name = tensor<string, []>("op_1254_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_1254_cast_fp16 = slice_by_index(begin = var_1254_begin_0, end = var_1254_end_0, end_mask = var_1254_end_mask_0, x = query_5_cast_fp16)[name = tensor<string, []>("op_1254_cast_fp16")];
            tensor<int32, [4]> var_1258_begin_0 = const()[name = tensor<string, []>("op_1258_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_1258_end_0 = const()[name = tensor<string, []>("op_1258_end_0"), val = tensor<int32, [4]>([1, 192, 1, 1500])];
            tensor<bool, [4]> var_1258_end_mask_0 = const()[name = tensor<string, []>("op_1258_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_1258_cast_fp16 = slice_by_index(begin = var_1258_begin_0, end = var_1258_end_0, end_mask = var_1258_end_mask_0, x = query_5_cast_fp16)[name = tensor<string, []>("op_1258_cast_fp16")];
            tensor<int32, [4]> var_1262_begin_0 = const()[name = tensor<string, []>("op_1262_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_1262_end_0 = const()[name = tensor<string, []>("op_1262_end_0"), val = tensor<int32, [4]>([1, 256, 1, 1500])];
            tensor<bool, [4]> var_1262_end_mask_0 = const()[name = tensor<string, []>("op_1262_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_1262_cast_fp16 = slice_by_index(begin = var_1262_begin_0, end = var_1262_end_0, end_mask = var_1262_end_mask_0, x = query_5_cast_fp16)[name = tensor<string, []>("op_1262_cast_fp16")];
            tensor<int32, [4]> var_1266_begin_0 = const()[name = tensor<string, []>("op_1266_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_1266_end_0 = const()[name = tensor<string, []>("op_1266_end_0"), val = tensor<int32, [4]>([1, 320, 1, 1500])];
            tensor<bool, [4]> var_1266_end_mask_0 = const()[name = tensor<string, []>("op_1266_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_1266_cast_fp16 = slice_by_index(begin = var_1266_begin_0, end = var_1266_end_0, end_mask = var_1266_end_mask_0, x = query_5_cast_fp16)[name = tensor<string, []>("op_1266_cast_fp16")];
            tensor<int32, [4]> var_1270_begin_0 = const()[name = tensor<string, []>("op_1270_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_1270_end_0 = const()[name = tensor<string, []>("op_1270_end_0"), val = tensor<int32, [4]>([1, 384, 1, 1500])];
            tensor<bool, [4]> var_1270_end_mask_0 = const()[name = tensor<string, []>("op_1270_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_1270_cast_fp16 = slice_by_index(begin = var_1270_begin_0, end = var_1270_end_0, end_mask = var_1270_end_mask_0, x = query_5_cast_fp16)[name = tensor<string, []>("op_1270_cast_fp16")];
            tensor<int32, [4]> var_1279_begin_0 = const()[name = tensor<string, []>("op_1279_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1279_end_0 = const()[name = tensor<string, []>("op_1279_end_0"), val = tensor<int32, [4]>([1, 64, 1, 375])];
            tensor<bool, [4]> var_1279_end_mask_0 = const()[name = tensor<string, []>("op_1279_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1279_cast_fp16 = slice_by_index(begin = var_1279_begin_0, end = var_1279_end_0, end_mask = var_1279_end_mask_0, x = var_1250_cast_fp16)[name = tensor<string, []>("op_1279_cast_fp16")];
            tensor<int32, [4]> var_1286_begin_0 = const()[name = tensor<string, []>("op_1286_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 375])];
            tensor<int32, [4]> var_1286_end_0 = const()[name = tensor<string, []>("op_1286_end_0"), val = tensor<int32, [4]>([1, 64, 1, 750])];
            tensor<bool, [4]> var_1286_end_mask_0 = const()[name = tensor<string, []>("op_1286_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1286_cast_fp16 = slice_by_index(begin = var_1286_begin_0, end = var_1286_end_0, end_mask = var_1286_end_mask_0, x = var_1250_cast_fp16)[name = tensor<string, []>("op_1286_cast_fp16")];
            tensor<int32, [4]> var_1293_begin_0 = const()[name = tensor<string, []>("op_1293_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 750])];
            tensor<int32, [4]> var_1293_end_0 = const()[name = tensor<string, []>("op_1293_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1125])];
            tensor<bool, [4]> var_1293_end_mask_0 = const()[name = tensor<string, []>("op_1293_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1293_cast_fp16 = slice_by_index(begin = var_1293_begin_0, end = var_1293_end_0, end_mask = var_1293_end_mask_0, x = var_1250_cast_fp16)[name = tensor<string, []>("op_1293_cast_fp16")];
            tensor<int32, [4]> var_1300_begin_0 = const()[name = tensor<string, []>("op_1300_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1125])];
            tensor<int32, [4]> var_1300_end_0 = const()[name = tensor<string, []>("op_1300_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_1300_end_mask_0 = const()[name = tensor<string, []>("op_1300_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1300_cast_fp16 = slice_by_index(begin = var_1300_begin_0, end = var_1300_end_0, end_mask = var_1300_end_mask_0, x = var_1250_cast_fp16)[name = tensor<string, []>("op_1300_cast_fp16")];
            tensor<int32, [4]> var_1307_begin_0 = const()[name = tensor<string, []>("op_1307_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1307_end_0 = const()[name = tensor<string, []>("op_1307_end_0"), val = tensor<int32, [4]>([1, 64, 1, 375])];
            tensor<bool, [4]> var_1307_end_mask_0 = const()[name = tensor<string, []>("op_1307_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1307_cast_fp16 = slice_by_index(begin = var_1307_begin_0, end = var_1307_end_0, end_mask = var_1307_end_mask_0, x = var_1254_cast_fp16)[name = tensor<string, []>("op_1307_cast_fp16")];
            tensor<int32, [4]> var_1314_begin_0 = const()[name = tensor<string, []>("op_1314_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 375])];
            tensor<int32, [4]> var_1314_end_0 = const()[name = tensor<string, []>("op_1314_end_0"), val = tensor<int32, [4]>([1, 64, 1, 750])];
            tensor<bool, [4]> var_1314_end_mask_0 = const()[name = tensor<string, []>("op_1314_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1314_cast_fp16 = slice_by_index(begin = var_1314_begin_0, end = var_1314_end_0, end_mask = var_1314_end_mask_0, x = var_1254_cast_fp16)[name = tensor<string, []>("op_1314_cast_fp16")];
            tensor<int32, [4]> var_1321_begin_0 = const()[name = tensor<string, []>("op_1321_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 750])];
            tensor<int32, [4]> var_1321_end_0 = const()[name = tensor<string, []>("op_1321_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1125])];
            tensor<bool, [4]> var_1321_end_mask_0 = const()[name = tensor<string, []>("op_1321_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1321_cast_fp16 = slice_by_index(begin = var_1321_begin_0, end = var_1321_end_0, end_mask = var_1321_end_mask_0, x = var_1254_cast_fp16)[name = tensor<string, []>("op_1321_cast_fp16")];
            tensor<int32, [4]> var_1328_begin_0 = const()[name = tensor<string, []>("op_1328_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1125])];
            tensor<int32, [4]> var_1328_end_0 = const()[name = tensor<string, []>("op_1328_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_1328_end_mask_0 = const()[name = tensor<string, []>("op_1328_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1328_cast_fp16 = slice_by_index(begin = var_1328_begin_0, end = var_1328_end_0, end_mask = var_1328_end_mask_0, x = var_1254_cast_fp16)[name = tensor<string, []>("op_1328_cast_fp16")];
            tensor<int32, [4]> var_1335_begin_0 = const()[name = tensor<string, []>("op_1335_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1335_end_0 = const()[name = tensor<string, []>("op_1335_end_0"), val = tensor<int32, [4]>([1, 64, 1, 375])];
            tensor<bool, [4]> var_1335_end_mask_0 = const()[name = tensor<string, []>("op_1335_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1335_cast_fp16 = slice_by_index(begin = var_1335_begin_0, end = var_1335_end_0, end_mask = var_1335_end_mask_0, x = var_1258_cast_fp16)[name = tensor<string, []>("op_1335_cast_fp16")];
            tensor<int32, [4]> var_1342_begin_0 = const()[name = tensor<string, []>("op_1342_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 375])];
            tensor<int32, [4]> var_1342_end_0 = const()[name = tensor<string, []>("op_1342_end_0"), val = tensor<int32, [4]>([1, 64, 1, 750])];
            tensor<bool, [4]> var_1342_end_mask_0 = const()[name = tensor<string, []>("op_1342_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1342_cast_fp16 = slice_by_index(begin = var_1342_begin_0, end = var_1342_end_0, end_mask = var_1342_end_mask_0, x = var_1258_cast_fp16)[name = tensor<string, []>("op_1342_cast_fp16")];
            tensor<int32, [4]> var_1349_begin_0 = const()[name = tensor<string, []>("op_1349_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 750])];
            tensor<int32, [4]> var_1349_end_0 = const()[name = tensor<string, []>("op_1349_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1125])];
            tensor<bool, [4]> var_1349_end_mask_0 = const()[name = tensor<string, []>("op_1349_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1349_cast_fp16 = slice_by_index(begin = var_1349_begin_0, end = var_1349_end_0, end_mask = var_1349_end_mask_0, x = var_1258_cast_fp16)[name = tensor<string, []>("op_1349_cast_fp16")];
            tensor<int32, [4]> var_1356_begin_0 = const()[name = tensor<string, []>("op_1356_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1125])];
            tensor<int32, [4]> var_1356_end_0 = const()[name = tensor<string, []>("op_1356_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_1356_end_mask_0 = const()[name = tensor<string, []>("op_1356_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1356_cast_fp16 = slice_by_index(begin = var_1356_begin_0, end = var_1356_end_0, end_mask = var_1356_end_mask_0, x = var_1258_cast_fp16)[name = tensor<string, []>("op_1356_cast_fp16")];
            tensor<int32, [4]> var_1363_begin_0 = const()[name = tensor<string, []>("op_1363_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1363_end_0 = const()[name = tensor<string, []>("op_1363_end_0"), val = tensor<int32, [4]>([1, 64, 1, 375])];
            tensor<bool, [4]> var_1363_end_mask_0 = const()[name = tensor<string, []>("op_1363_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1363_cast_fp16 = slice_by_index(begin = var_1363_begin_0, end = var_1363_end_0, end_mask = var_1363_end_mask_0, x = var_1262_cast_fp16)[name = tensor<string, []>("op_1363_cast_fp16")];
            tensor<int32, [4]> var_1370_begin_0 = const()[name = tensor<string, []>("op_1370_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 375])];
            tensor<int32, [4]> var_1370_end_0 = const()[name = tensor<string, []>("op_1370_end_0"), val = tensor<int32, [4]>([1, 64, 1, 750])];
            tensor<bool, [4]> var_1370_end_mask_0 = const()[name = tensor<string, []>("op_1370_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1370_cast_fp16 = slice_by_index(begin = var_1370_begin_0, end = var_1370_end_0, end_mask = var_1370_end_mask_0, x = var_1262_cast_fp16)[name = tensor<string, []>("op_1370_cast_fp16")];
            tensor<int32, [4]> var_1377_begin_0 = const()[name = tensor<string, []>("op_1377_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 750])];
            tensor<int32, [4]> var_1377_end_0 = const()[name = tensor<string, []>("op_1377_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1125])];
            tensor<bool, [4]> var_1377_end_mask_0 = const()[name = tensor<string, []>("op_1377_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1377_cast_fp16 = slice_by_index(begin = var_1377_begin_0, end = var_1377_end_0, end_mask = var_1377_end_mask_0, x = var_1262_cast_fp16)[name = tensor<string, []>("op_1377_cast_fp16")];
            tensor<int32, [4]> var_1384_begin_0 = const()[name = tensor<string, []>("op_1384_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1125])];
            tensor<int32, [4]> var_1384_end_0 = const()[name = tensor<string, []>("op_1384_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_1384_end_mask_0 = const()[name = tensor<string, []>("op_1384_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1384_cast_fp16 = slice_by_index(begin = var_1384_begin_0, end = var_1384_end_0, end_mask = var_1384_end_mask_0, x = var_1262_cast_fp16)[name = tensor<string, []>("op_1384_cast_fp16")];
            tensor<int32, [4]> var_1391_begin_0 = const()[name = tensor<string, []>("op_1391_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1391_end_0 = const()[name = tensor<string, []>("op_1391_end_0"), val = tensor<int32, [4]>([1, 64, 1, 375])];
            tensor<bool, [4]> var_1391_end_mask_0 = const()[name = tensor<string, []>("op_1391_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1391_cast_fp16 = slice_by_index(begin = var_1391_begin_0, end = var_1391_end_0, end_mask = var_1391_end_mask_0, x = var_1266_cast_fp16)[name = tensor<string, []>("op_1391_cast_fp16")];
            tensor<int32, [4]> var_1398_begin_0 = const()[name = tensor<string, []>("op_1398_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 375])];
            tensor<int32, [4]> var_1398_end_0 = const()[name = tensor<string, []>("op_1398_end_0"), val = tensor<int32, [4]>([1, 64, 1, 750])];
            tensor<bool, [4]> var_1398_end_mask_0 = const()[name = tensor<string, []>("op_1398_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1398_cast_fp16 = slice_by_index(begin = var_1398_begin_0, end = var_1398_end_0, end_mask = var_1398_end_mask_0, x = var_1266_cast_fp16)[name = tensor<string, []>("op_1398_cast_fp16")];
            tensor<int32, [4]> var_1405_begin_0 = const()[name = tensor<string, []>("op_1405_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 750])];
            tensor<int32, [4]> var_1405_end_0 = const()[name = tensor<string, []>("op_1405_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1125])];
            tensor<bool, [4]> var_1405_end_mask_0 = const()[name = tensor<string, []>("op_1405_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1405_cast_fp16 = slice_by_index(begin = var_1405_begin_0, end = var_1405_end_0, end_mask = var_1405_end_mask_0, x = var_1266_cast_fp16)[name = tensor<string, []>("op_1405_cast_fp16")];
            tensor<int32, [4]> var_1412_begin_0 = const()[name = tensor<string, []>("op_1412_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1125])];
            tensor<int32, [4]> var_1412_end_0 = const()[name = tensor<string, []>("op_1412_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_1412_end_mask_0 = const()[name = tensor<string, []>("op_1412_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1412_cast_fp16 = slice_by_index(begin = var_1412_begin_0, end = var_1412_end_0, end_mask = var_1412_end_mask_0, x = var_1266_cast_fp16)[name = tensor<string, []>("op_1412_cast_fp16")];
            tensor<int32, [4]> var_1419_begin_0 = const()[name = tensor<string, []>("op_1419_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1419_end_0 = const()[name = tensor<string, []>("op_1419_end_0"), val = tensor<int32, [4]>([1, 64, 1, 375])];
            tensor<bool, [4]> var_1419_end_mask_0 = const()[name = tensor<string, []>("op_1419_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1419_cast_fp16 = slice_by_index(begin = var_1419_begin_0, end = var_1419_end_0, end_mask = var_1419_end_mask_0, x = var_1270_cast_fp16)[name = tensor<string, []>("op_1419_cast_fp16")];
            tensor<int32, [4]> var_1426_begin_0 = const()[name = tensor<string, []>("op_1426_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 375])];
            tensor<int32, [4]> var_1426_end_0 = const()[name = tensor<string, []>("op_1426_end_0"), val = tensor<int32, [4]>([1, 64, 1, 750])];
            tensor<bool, [4]> var_1426_end_mask_0 = const()[name = tensor<string, []>("op_1426_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1426_cast_fp16 = slice_by_index(begin = var_1426_begin_0, end = var_1426_end_0, end_mask = var_1426_end_mask_0, x = var_1270_cast_fp16)[name = tensor<string, []>("op_1426_cast_fp16")];
            tensor<int32, [4]> var_1433_begin_0 = const()[name = tensor<string, []>("op_1433_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 750])];
            tensor<int32, [4]> var_1433_end_0 = const()[name = tensor<string, []>("op_1433_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1125])];
            tensor<bool, [4]> var_1433_end_mask_0 = const()[name = tensor<string, []>("op_1433_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1433_cast_fp16 = slice_by_index(begin = var_1433_begin_0, end = var_1433_end_0, end_mask = var_1433_end_mask_0, x = var_1270_cast_fp16)[name = tensor<string, []>("op_1433_cast_fp16")];
            tensor<int32, [4]> var_1440_begin_0 = const()[name = tensor<string, []>("op_1440_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1125])];
            tensor<int32, [4]> var_1440_end_0 = const()[name = tensor<string, []>("op_1440_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_1440_end_mask_0 = const()[name = tensor<string, []>("op_1440_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1440_cast_fp16 = slice_by_index(begin = var_1440_begin_0, end = var_1440_end_0, end_mask = var_1440_end_mask_0, x = var_1270_cast_fp16)[name = tensor<string, []>("op_1440_cast_fp16")];
            tensor<int32, [4]> k_5_perm_0 = const()[name = tensor<string, []>("k_5_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_1445_begin_0 = const()[name = tensor<string, []>("op_1445_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1445_end_0 = const()[name = tensor<string, []>("op_1445_end_0"), val = tensor<int32, [4]>([1, 1500, 1, 64])];
            tensor<bool, [4]> var_1445_end_mask_0 = const()[name = tensor<string, []>("op_1445_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 1500, 1, 384]> transpose_1 = transpose(perm = k_5_perm_0, x = key_5_cast_fp16)[name = tensor<string, []>("transpose_1")];
            tensor<fp16, [1, 1500, 1, 64]> var_1445_cast_fp16 = slice_by_index(begin = var_1445_begin_0, end = var_1445_end_0, end_mask = var_1445_end_mask_0, x = transpose_1)[name = tensor<string, []>("op_1445_cast_fp16")];
            tensor<int32, [4]> var_1449_begin_0 = const()[name = tensor<string, []>("op_1449_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_1449_end_0 = const()[name = tensor<string, []>("op_1449_end_0"), val = tensor<int32, [4]>([1, 1500, 1, 128])];
            tensor<bool, [4]> var_1449_end_mask_0 = const()[name = tensor<string, []>("op_1449_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 1500, 1, 64]> var_1449_cast_fp16 = slice_by_index(begin = var_1449_begin_0, end = var_1449_end_0, end_mask = var_1449_end_mask_0, x = transpose_1)[name = tensor<string, []>("op_1449_cast_fp16")];
            tensor<int32, [4]> var_1453_begin_0 = const()[name = tensor<string, []>("op_1453_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_1453_end_0 = const()[name = tensor<string, []>("op_1453_end_0"), val = tensor<int32, [4]>([1, 1500, 1, 192])];
            tensor<bool, [4]> var_1453_end_mask_0 = const()[name = tensor<string, []>("op_1453_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 1500, 1, 64]> var_1453_cast_fp16 = slice_by_index(begin = var_1453_begin_0, end = var_1453_end_0, end_mask = var_1453_end_mask_0, x = transpose_1)[name = tensor<string, []>("op_1453_cast_fp16")];
            tensor<int32, [4]> var_1457_begin_0 = const()[name = tensor<string, []>("op_1457_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_1457_end_0 = const()[name = tensor<string, []>("op_1457_end_0"), val = tensor<int32, [4]>([1, 1500, 1, 256])];
            tensor<bool, [4]> var_1457_end_mask_0 = const()[name = tensor<string, []>("op_1457_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 1500, 1, 64]> var_1457_cast_fp16 = slice_by_index(begin = var_1457_begin_0, end = var_1457_end_0, end_mask = var_1457_end_mask_0, x = transpose_1)[name = tensor<string, []>("op_1457_cast_fp16")];
            tensor<int32, [4]> var_1461_begin_0 = const()[name = tensor<string, []>("op_1461_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_1461_end_0 = const()[name = tensor<string, []>("op_1461_end_0"), val = tensor<int32, [4]>([1, 1500, 1, 320])];
            tensor<bool, [4]> var_1461_end_mask_0 = const()[name = tensor<string, []>("op_1461_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 1500, 1, 64]> var_1461_cast_fp16 = slice_by_index(begin = var_1461_begin_0, end = var_1461_end_0, end_mask = var_1461_end_mask_0, x = transpose_1)[name = tensor<string, []>("op_1461_cast_fp16")];
            tensor<int32, [4]> var_1465_begin_0 = const()[name = tensor<string, []>("op_1465_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_1465_end_0 = const()[name = tensor<string, []>("op_1465_end_0"), val = tensor<int32, [4]>([1, 1500, 1, 384])];
            tensor<bool, [4]> var_1465_end_mask_0 = const()[name = tensor<string, []>("op_1465_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 1500, 1, 64]> var_1465_cast_fp16 = slice_by_index(begin = var_1465_begin_0, end = var_1465_end_0, end_mask = var_1465_end_mask_0, x = transpose_1)[name = tensor<string, []>("op_1465_cast_fp16")];
            tensor<int32, [4]> var_1467_begin_0 = const()[name = tensor<string, []>("op_1467_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1467_end_0 = const()[name = tensor<string, []>("op_1467_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_1467_end_mask_0 = const()[name = tensor<string, []>("op_1467_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_1467_cast_fp16 = slice_by_index(begin = var_1467_begin_0, end = var_1467_end_0, end_mask = var_1467_end_mask_0, x = value_5_cast_fp16)[name = tensor<string, []>("op_1467_cast_fp16")];
            tensor<int32, [4]> var_1471_begin_0 = const()[name = tensor<string, []>("op_1471_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_1471_end_0 = const()[name = tensor<string, []>("op_1471_end_0"), val = tensor<int32, [4]>([1, 128, 1, 1500])];
            tensor<bool, [4]> var_1471_end_mask_0 = const()[name = tensor<string, []>("op_1471_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_1471_cast_fp16 = slice_by_index(begin = var_1471_begin_0, end = var_1471_end_0, end_mask = var_1471_end_mask_0, x = value_5_cast_fp16)[name = tensor<string, []>("op_1471_cast_fp16")];
            tensor<int32, [4]> var_1475_begin_0 = const()[name = tensor<string, []>("op_1475_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_1475_end_0 = const()[name = tensor<string, []>("op_1475_end_0"), val = tensor<int32, [4]>([1, 192, 1, 1500])];
            tensor<bool, [4]> var_1475_end_mask_0 = const()[name = tensor<string, []>("op_1475_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_1475_cast_fp16 = slice_by_index(begin = var_1475_begin_0, end = var_1475_end_0, end_mask = var_1475_end_mask_0, x = value_5_cast_fp16)[name = tensor<string, []>("op_1475_cast_fp16")];
            tensor<int32, [4]> var_1479_begin_0 = const()[name = tensor<string, []>("op_1479_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_1479_end_0 = const()[name = tensor<string, []>("op_1479_end_0"), val = tensor<int32, [4]>([1, 256, 1, 1500])];
            tensor<bool, [4]> var_1479_end_mask_0 = const()[name = tensor<string, []>("op_1479_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_1479_cast_fp16 = slice_by_index(begin = var_1479_begin_0, end = var_1479_end_0, end_mask = var_1479_end_mask_0, x = value_5_cast_fp16)[name = tensor<string, []>("op_1479_cast_fp16")];
            tensor<int32, [4]> var_1483_begin_0 = const()[name = tensor<string, []>("op_1483_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_1483_end_0 = const()[name = tensor<string, []>("op_1483_end_0"), val = tensor<int32, [4]>([1, 320, 1, 1500])];
            tensor<bool, [4]> var_1483_end_mask_0 = const()[name = tensor<string, []>("op_1483_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_1483_cast_fp16 = slice_by_index(begin = var_1483_begin_0, end = var_1483_end_0, end_mask = var_1483_end_mask_0, x = value_5_cast_fp16)[name = tensor<string, []>("op_1483_cast_fp16")];
            tensor<int32, [4]> var_1487_begin_0 = const()[name = tensor<string, []>("op_1487_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_1487_end_0 = const()[name = tensor<string, []>("op_1487_end_0"), val = tensor<int32, [4]>([1, 384, 1, 1500])];
            tensor<bool, [4]> var_1487_end_mask_0 = const()[name = tensor<string, []>("op_1487_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_1487_cast_fp16 = slice_by_index(begin = var_1487_begin_0, end = var_1487_end_0, end_mask = var_1487_end_mask_0, x = value_5_cast_fp16)[name = tensor<string, []>("op_1487_cast_fp16")];
            tensor<string, []> var_1491_equation_0 = const()[name = tensor<string, []>("op_1491_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1491_cast_fp16 = einsum(equation = var_1491_equation_0, values = (var_1445_cast_fp16, var_1279_cast_fp16))[name = tensor<string, []>("op_1491_cast_fp16")];
            tensor<fp16, []> var_1492_to_fp16 = const()[name = tensor<string, []>("op_1492_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_97_cast_fp16 = mul(x = var_1491_cast_fp16, y = var_1492_to_fp16)[name = tensor<string, []>("aw_chunk_97_cast_fp16")];
            tensor<string, []> var_1495_equation_0 = const()[name = tensor<string, []>("op_1495_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1495_cast_fp16 = einsum(equation = var_1495_equation_0, values = (var_1445_cast_fp16, var_1286_cast_fp16))[name = tensor<string, []>("op_1495_cast_fp16")];
            tensor<fp16, []> var_1496_to_fp16 = const()[name = tensor<string, []>("op_1496_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_99_cast_fp16 = mul(x = var_1495_cast_fp16, y = var_1496_to_fp16)[name = tensor<string, []>("aw_chunk_99_cast_fp16")];
            tensor<string, []> var_1499_equation_0 = const()[name = tensor<string, []>("op_1499_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1499_cast_fp16 = einsum(equation = var_1499_equation_0, values = (var_1445_cast_fp16, var_1293_cast_fp16))[name = tensor<string, []>("op_1499_cast_fp16")];
            tensor<fp16, []> var_1500_to_fp16 = const()[name = tensor<string, []>("op_1500_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_101_cast_fp16 = mul(x = var_1499_cast_fp16, y = var_1500_to_fp16)[name = tensor<string, []>("aw_chunk_101_cast_fp16")];
            tensor<string, []> var_1503_equation_0 = const()[name = tensor<string, []>("op_1503_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1503_cast_fp16 = einsum(equation = var_1503_equation_0, values = (var_1445_cast_fp16, var_1300_cast_fp16))[name = tensor<string, []>("op_1503_cast_fp16")];
            tensor<fp16, []> var_1504_to_fp16 = const()[name = tensor<string, []>("op_1504_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_103_cast_fp16 = mul(x = var_1503_cast_fp16, y = var_1504_to_fp16)[name = tensor<string, []>("aw_chunk_103_cast_fp16")];
            tensor<string, []> var_1507_equation_0 = const()[name = tensor<string, []>("op_1507_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1507_cast_fp16 = einsum(equation = var_1507_equation_0, values = (var_1449_cast_fp16, var_1307_cast_fp16))[name = tensor<string, []>("op_1507_cast_fp16")];
            tensor<fp16, []> var_1508_to_fp16 = const()[name = tensor<string, []>("op_1508_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_105_cast_fp16 = mul(x = var_1507_cast_fp16, y = var_1508_to_fp16)[name = tensor<string, []>("aw_chunk_105_cast_fp16")];
            tensor<string, []> var_1511_equation_0 = const()[name = tensor<string, []>("op_1511_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1511_cast_fp16 = einsum(equation = var_1511_equation_0, values = (var_1449_cast_fp16, var_1314_cast_fp16))[name = tensor<string, []>("op_1511_cast_fp16")];
            tensor<fp16, []> var_1512_to_fp16 = const()[name = tensor<string, []>("op_1512_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_107_cast_fp16 = mul(x = var_1511_cast_fp16, y = var_1512_to_fp16)[name = tensor<string, []>("aw_chunk_107_cast_fp16")];
            tensor<string, []> var_1515_equation_0 = const()[name = tensor<string, []>("op_1515_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1515_cast_fp16 = einsum(equation = var_1515_equation_0, values = (var_1449_cast_fp16, var_1321_cast_fp16))[name = tensor<string, []>("op_1515_cast_fp16")];
            tensor<fp16, []> var_1516_to_fp16 = const()[name = tensor<string, []>("op_1516_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_109_cast_fp16 = mul(x = var_1515_cast_fp16, y = var_1516_to_fp16)[name = tensor<string, []>("aw_chunk_109_cast_fp16")];
            tensor<string, []> var_1519_equation_0 = const()[name = tensor<string, []>("op_1519_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1519_cast_fp16 = einsum(equation = var_1519_equation_0, values = (var_1449_cast_fp16, var_1328_cast_fp16))[name = tensor<string, []>("op_1519_cast_fp16")];
            tensor<fp16, []> var_1520_to_fp16 = const()[name = tensor<string, []>("op_1520_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_111_cast_fp16 = mul(x = var_1519_cast_fp16, y = var_1520_to_fp16)[name = tensor<string, []>("aw_chunk_111_cast_fp16")];
            tensor<string, []> var_1523_equation_0 = const()[name = tensor<string, []>("op_1523_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1523_cast_fp16 = einsum(equation = var_1523_equation_0, values = (var_1453_cast_fp16, var_1335_cast_fp16))[name = tensor<string, []>("op_1523_cast_fp16")];
            tensor<fp16, []> var_1524_to_fp16 = const()[name = tensor<string, []>("op_1524_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_113_cast_fp16 = mul(x = var_1523_cast_fp16, y = var_1524_to_fp16)[name = tensor<string, []>("aw_chunk_113_cast_fp16")];
            tensor<string, []> var_1527_equation_0 = const()[name = tensor<string, []>("op_1527_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1527_cast_fp16 = einsum(equation = var_1527_equation_0, values = (var_1453_cast_fp16, var_1342_cast_fp16))[name = tensor<string, []>("op_1527_cast_fp16")];
            tensor<fp16, []> var_1528_to_fp16 = const()[name = tensor<string, []>("op_1528_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_115_cast_fp16 = mul(x = var_1527_cast_fp16, y = var_1528_to_fp16)[name = tensor<string, []>("aw_chunk_115_cast_fp16")];
            tensor<string, []> var_1531_equation_0 = const()[name = tensor<string, []>("op_1531_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1531_cast_fp16 = einsum(equation = var_1531_equation_0, values = (var_1453_cast_fp16, var_1349_cast_fp16))[name = tensor<string, []>("op_1531_cast_fp16")];
            tensor<fp16, []> var_1532_to_fp16 = const()[name = tensor<string, []>("op_1532_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_117_cast_fp16 = mul(x = var_1531_cast_fp16, y = var_1532_to_fp16)[name = tensor<string, []>("aw_chunk_117_cast_fp16")];
            tensor<string, []> var_1535_equation_0 = const()[name = tensor<string, []>("op_1535_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1535_cast_fp16 = einsum(equation = var_1535_equation_0, values = (var_1453_cast_fp16, var_1356_cast_fp16))[name = tensor<string, []>("op_1535_cast_fp16")];
            tensor<fp16, []> var_1536_to_fp16 = const()[name = tensor<string, []>("op_1536_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_119_cast_fp16 = mul(x = var_1535_cast_fp16, y = var_1536_to_fp16)[name = tensor<string, []>("aw_chunk_119_cast_fp16")];
            tensor<string, []> var_1539_equation_0 = const()[name = tensor<string, []>("op_1539_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1539_cast_fp16 = einsum(equation = var_1539_equation_0, values = (var_1457_cast_fp16, var_1363_cast_fp16))[name = tensor<string, []>("op_1539_cast_fp16")];
            tensor<fp16, []> var_1540_to_fp16 = const()[name = tensor<string, []>("op_1540_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_121_cast_fp16 = mul(x = var_1539_cast_fp16, y = var_1540_to_fp16)[name = tensor<string, []>("aw_chunk_121_cast_fp16")];
            tensor<string, []> var_1543_equation_0 = const()[name = tensor<string, []>("op_1543_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1543_cast_fp16 = einsum(equation = var_1543_equation_0, values = (var_1457_cast_fp16, var_1370_cast_fp16))[name = tensor<string, []>("op_1543_cast_fp16")];
            tensor<fp16, []> var_1544_to_fp16 = const()[name = tensor<string, []>("op_1544_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_123_cast_fp16 = mul(x = var_1543_cast_fp16, y = var_1544_to_fp16)[name = tensor<string, []>("aw_chunk_123_cast_fp16")];
            tensor<string, []> var_1547_equation_0 = const()[name = tensor<string, []>("op_1547_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1547_cast_fp16 = einsum(equation = var_1547_equation_0, values = (var_1457_cast_fp16, var_1377_cast_fp16))[name = tensor<string, []>("op_1547_cast_fp16")];
            tensor<fp16, []> var_1548_to_fp16 = const()[name = tensor<string, []>("op_1548_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_125_cast_fp16 = mul(x = var_1547_cast_fp16, y = var_1548_to_fp16)[name = tensor<string, []>("aw_chunk_125_cast_fp16")];
            tensor<string, []> var_1551_equation_0 = const()[name = tensor<string, []>("op_1551_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1551_cast_fp16 = einsum(equation = var_1551_equation_0, values = (var_1457_cast_fp16, var_1384_cast_fp16))[name = tensor<string, []>("op_1551_cast_fp16")];
            tensor<fp16, []> var_1552_to_fp16 = const()[name = tensor<string, []>("op_1552_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_127_cast_fp16 = mul(x = var_1551_cast_fp16, y = var_1552_to_fp16)[name = tensor<string, []>("aw_chunk_127_cast_fp16")];
            tensor<string, []> var_1555_equation_0 = const()[name = tensor<string, []>("op_1555_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1555_cast_fp16 = einsum(equation = var_1555_equation_0, values = (var_1461_cast_fp16, var_1391_cast_fp16))[name = tensor<string, []>("op_1555_cast_fp16")];
            tensor<fp16, []> var_1556_to_fp16 = const()[name = tensor<string, []>("op_1556_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_129_cast_fp16 = mul(x = var_1555_cast_fp16, y = var_1556_to_fp16)[name = tensor<string, []>("aw_chunk_129_cast_fp16")];
            tensor<string, []> var_1559_equation_0 = const()[name = tensor<string, []>("op_1559_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1559_cast_fp16 = einsum(equation = var_1559_equation_0, values = (var_1461_cast_fp16, var_1398_cast_fp16))[name = tensor<string, []>("op_1559_cast_fp16")];
            tensor<fp16, []> var_1560_to_fp16 = const()[name = tensor<string, []>("op_1560_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_131_cast_fp16 = mul(x = var_1559_cast_fp16, y = var_1560_to_fp16)[name = tensor<string, []>("aw_chunk_131_cast_fp16")];
            tensor<string, []> var_1563_equation_0 = const()[name = tensor<string, []>("op_1563_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1563_cast_fp16 = einsum(equation = var_1563_equation_0, values = (var_1461_cast_fp16, var_1405_cast_fp16))[name = tensor<string, []>("op_1563_cast_fp16")];
            tensor<fp16, []> var_1564_to_fp16 = const()[name = tensor<string, []>("op_1564_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_133_cast_fp16 = mul(x = var_1563_cast_fp16, y = var_1564_to_fp16)[name = tensor<string, []>("aw_chunk_133_cast_fp16")];
            tensor<string, []> var_1567_equation_0 = const()[name = tensor<string, []>("op_1567_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1567_cast_fp16 = einsum(equation = var_1567_equation_0, values = (var_1461_cast_fp16, var_1412_cast_fp16))[name = tensor<string, []>("op_1567_cast_fp16")];
            tensor<fp16, []> var_1568_to_fp16 = const()[name = tensor<string, []>("op_1568_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_135_cast_fp16 = mul(x = var_1567_cast_fp16, y = var_1568_to_fp16)[name = tensor<string, []>("aw_chunk_135_cast_fp16")];
            tensor<string, []> var_1571_equation_0 = const()[name = tensor<string, []>("op_1571_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1571_cast_fp16 = einsum(equation = var_1571_equation_0, values = (var_1465_cast_fp16, var_1419_cast_fp16))[name = tensor<string, []>("op_1571_cast_fp16")];
            tensor<fp16, []> var_1572_to_fp16 = const()[name = tensor<string, []>("op_1572_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_137_cast_fp16 = mul(x = var_1571_cast_fp16, y = var_1572_to_fp16)[name = tensor<string, []>("aw_chunk_137_cast_fp16")];
            tensor<string, []> var_1575_equation_0 = const()[name = tensor<string, []>("op_1575_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1575_cast_fp16 = einsum(equation = var_1575_equation_0, values = (var_1465_cast_fp16, var_1426_cast_fp16))[name = tensor<string, []>("op_1575_cast_fp16")];
            tensor<fp16, []> var_1576_to_fp16 = const()[name = tensor<string, []>("op_1576_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_139_cast_fp16 = mul(x = var_1575_cast_fp16, y = var_1576_to_fp16)[name = tensor<string, []>("aw_chunk_139_cast_fp16")];
            tensor<string, []> var_1579_equation_0 = const()[name = tensor<string, []>("op_1579_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1579_cast_fp16 = einsum(equation = var_1579_equation_0, values = (var_1465_cast_fp16, var_1433_cast_fp16))[name = tensor<string, []>("op_1579_cast_fp16")];
            tensor<fp16, []> var_1580_to_fp16 = const()[name = tensor<string, []>("op_1580_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_141_cast_fp16 = mul(x = var_1579_cast_fp16, y = var_1580_to_fp16)[name = tensor<string, []>("aw_chunk_141_cast_fp16")];
            tensor<string, []> var_1583_equation_0 = const()[name = tensor<string, []>("op_1583_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_1583_cast_fp16 = einsum(equation = var_1583_equation_0, values = (var_1465_cast_fp16, var_1440_cast_fp16))[name = tensor<string, []>("op_1583_cast_fp16")];
            tensor<fp16, []> var_1584_to_fp16 = const()[name = tensor<string, []>("op_1584_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_143_cast_fp16 = mul(x = var_1583_cast_fp16, y = var_1584_to_fp16)[name = tensor<string, []>("aw_chunk_143_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1586_cast_fp16 = softmax(axis = var_1195, x = aw_chunk_97_cast_fp16)[name = tensor<string, []>("op_1586_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1587_cast_fp16 = softmax(axis = var_1195, x = aw_chunk_99_cast_fp16)[name = tensor<string, []>("op_1587_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1588_cast_fp16 = softmax(axis = var_1195, x = aw_chunk_101_cast_fp16)[name = tensor<string, []>("op_1588_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1589_cast_fp16 = softmax(axis = var_1195, x = aw_chunk_103_cast_fp16)[name = tensor<string, []>("op_1589_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1590_cast_fp16 = softmax(axis = var_1195, x = aw_chunk_105_cast_fp16)[name = tensor<string, []>("op_1590_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1591_cast_fp16 = softmax(axis = var_1195, x = aw_chunk_107_cast_fp16)[name = tensor<string, []>("op_1591_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1592_cast_fp16 = softmax(axis = var_1195, x = aw_chunk_109_cast_fp16)[name = tensor<string, []>("op_1592_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1593_cast_fp16 = softmax(axis = var_1195, x = aw_chunk_111_cast_fp16)[name = tensor<string, []>("op_1593_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1594_cast_fp16 = softmax(axis = var_1195, x = aw_chunk_113_cast_fp16)[name = tensor<string, []>("op_1594_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1595_cast_fp16 = softmax(axis = var_1195, x = aw_chunk_115_cast_fp16)[name = tensor<string, []>("op_1595_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1596_cast_fp16 = softmax(axis = var_1195, x = aw_chunk_117_cast_fp16)[name = tensor<string, []>("op_1596_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1597_cast_fp16 = softmax(axis = var_1195, x = aw_chunk_119_cast_fp16)[name = tensor<string, []>("op_1597_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1598_cast_fp16 = softmax(axis = var_1195, x = aw_chunk_121_cast_fp16)[name = tensor<string, []>("op_1598_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1599_cast_fp16 = softmax(axis = var_1195, x = aw_chunk_123_cast_fp16)[name = tensor<string, []>("op_1599_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1600_cast_fp16 = softmax(axis = var_1195, x = aw_chunk_125_cast_fp16)[name = tensor<string, []>("op_1600_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1601_cast_fp16 = softmax(axis = var_1195, x = aw_chunk_127_cast_fp16)[name = tensor<string, []>("op_1601_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1602_cast_fp16 = softmax(axis = var_1195, x = aw_chunk_129_cast_fp16)[name = tensor<string, []>("op_1602_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1603_cast_fp16 = softmax(axis = var_1195, x = aw_chunk_131_cast_fp16)[name = tensor<string, []>("op_1603_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1604_cast_fp16 = softmax(axis = var_1195, x = aw_chunk_133_cast_fp16)[name = tensor<string, []>("op_1604_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1605_cast_fp16 = softmax(axis = var_1195, x = aw_chunk_135_cast_fp16)[name = tensor<string, []>("op_1605_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1606_cast_fp16 = softmax(axis = var_1195, x = aw_chunk_137_cast_fp16)[name = tensor<string, []>("op_1606_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1607_cast_fp16 = softmax(axis = var_1195, x = aw_chunk_139_cast_fp16)[name = tensor<string, []>("op_1607_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1608_cast_fp16 = softmax(axis = var_1195, x = aw_chunk_141_cast_fp16)[name = tensor<string, []>("op_1608_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_1609_cast_fp16 = softmax(axis = var_1195, x = aw_chunk_143_cast_fp16)[name = tensor<string, []>("op_1609_cast_fp16")];
            tensor<string, []> var_1611_equation_0 = const()[name = tensor<string, []>("op_1611_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1611_cast_fp16 = einsum(equation = var_1611_equation_0, values = (var_1467_cast_fp16, var_1586_cast_fp16))[name = tensor<string, []>("op_1611_cast_fp16")];
            tensor<string, []> var_1613_equation_0 = const()[name = tensor<string, []>("op_1613_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1613_cast_fp16 = einsum(equation = var_1613_equation_0, values = (var_1467_cast_fp16, var_1587_cast_fp16))[name = tensor<string, []>("op_1613_cast_fp16")];
            tensor<string, []> var_1615_equation_0 = const()[name = tensor<string, []>("op_1615_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1615_cast_fp16 = einsum(equation = var_1615_equation_0, values = (var_1467_cast_fp16, var_1588_cast_fp16))[name = tensor<string, []>("op_1615_cast_fp16")];
            tensor<string, []> var_1617_equation_0 = const()[name = tensor<string, []>("op_1617_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1617_cast_fp16 = einsum(equation = var_1617_equation_0, values = (var_1467_cast_fp16, var_1589_cast_fp16))[name = tensor<string, []>("op_1617_cast_fp16")];
            tensor<string, []> var_1619_equation_0 = const()[name = tensor<string, []>("op_1619_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1619_cast_fp16 = einsum(equation = var_1619_equation_0, values = (var_1471_cast_fp16, var_1590_cast_fp16))[name = tensor<string, []>("op_1619_cast_fp16")];
            tensor<string, []> var_1621_equation_0 = const()[name = tensor<string, []>("op_1621_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1621_cast_fp16 = einsum(equation = var_1621_equation_0, values = (var_1471_cast_fp16, var_1591_cast_fp16))[name = tensor<string, []>("op_1621_cast_fp16")];
            tensor<string, []> var_1623_equation_0 = const()[name = tensor<string, []>("op_1623_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1623_cast_fp16 = einsum(equation = var_1623_equation_0, values = (var_1471_cast_fp16, var_1592_cast_fp16))[name = tensor<string, []>("op_1623_cast_fp16")];
            tensor<string, []> var_1625_equation_0 = const()[name = tensor<string, []>("op_1625_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1625_cast_fp16 = einsum(equation = var_1625_equation_0, values = (var_1471_cast_fp16, var_1593_cast_fp16))[name = tensor<string, []>("op_1625_cast_fp16")];
            tensor<string, []> var_1627_equation_0 = const()[name = tensor<string, []>("op_1627_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1627_cast_fp16 = einsum(equation = var_1627_equation_0, values = (var_1475_cast_fp16, var_1594_cast_fp16))[name = tensor<string, []>("op_1627_cast_fp16")];
            tensor<string, []> var_1629_equation_0 = const()[name = tensor<string, []>("op_1629_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1629_cast_fp16 = einsum(equation = var_1629_equation_0, values = (var_1475_cast_fp16, var_1595_cast_fp16))[name = tensor<string, []>("op_1629_cast_fp16")];
            tensor<string, []> var_1631_equation_0 = const()[name = tensor<string, []>("op_1631_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1631_cast_fp16 = einsum(equation = var_1631_equation_0, values = (var_1475_cast_fp16, var_1596_cast_fp16))[name = tensor<string, []>("op_1631_cast_fp16")];
            tensor<string, []> var_1633_equation_0 = const()[name = tensor<string, []>("op_1633_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1633_cast_fp16 = einsum(equation = var_1633_equation_0, values = (var_1475_cast_fp16, var_1597_cast_fp16))[name = tensor<string, []>("op_1633_cast_fp16")];
            tensor<string, []> var_1635_equation_0 = const()[name = tensor<string, []>("op_1635_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1635_cast_fp16 = einsum(equation = var_1635_equation_0, values = (var_1479_cast_fp16, var_1598_cast_fp16))[name = tensor<string, []>("op_1635_cast_fp16")];
            tensor<string, []> var_1637_equation_0 = const()[name = tensor<string, []>("op_1637_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1637_cast_fp16 = einsum(equation = var_1637_equation_0, values = (var_1479_cast_fp16, var_1599_cast_fp16))[name = tensor<string, []>("op_1637_cast_fp16")];
            tensor<string, []> var_1639_equation_0 = const()[name = tensor<string, []>("op_1639_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1639_cast_fp16 = einsum(equation = var_1639_equation_0, values = (var_1479_cast_fp16, var_1600_cast_fp16))[name = tensor<string, []>("op_1639_cast_fp16")];
            tensor<string, []> var_1641_equation_0 = const()[name = tensor<string, []>("op_1641_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1641_cast_fp16 = einsum(equation = var_1641_equation_0, values = (var_1479_cast_fp16, var_1601_cast_fp16))[name = tensor<string, []>("op_1641_cast_fp16")];
            tensor<string, []> var_1643_equation_0 = const()[name = tensor<string, []>("op_1643_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1643_cast_fp16 = einsum(equation = var_1643_equation_0, values = (var_1483_cast_fp16, var_1602_cast_fp16))[name = tensor<string, []>("op_1643_cast_fp16")];
            tensor<string, []> var_1645_equation_0 = const()[name = tensor<string, []>("op_1645_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1645_cast_fp16 = einsum(equation = var_1645_equation_0, values = (var_1483_cast_fp16, var_1603_cast_fp16))[name = tensor<string, []>("op_1645_cast_fp16")];
            tensor<string, []> var_1647_equation_0 = const()[name = tensor<string, []>("op_1647_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1647_cast_fp16 = einsum(equation = var_1647_equation_0, values = (var_1483_cast_fp16, var_1604_cast_fp16))[name = tensor<string, []>("op_1647_cast_fp16")];
            tensor<string, []> var_1649_equation_0 = const()[name = tensor<string, []>("op_1649_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1649_cast_fp16 = einsum(equation = var_1649_equation_0, values = (var_1483_cast_fp16, var_1605_cast_fp16))[name = tensor<string, []>("op_1649_cast_fp16")];
            tensor<string, []> var_1651_equation_0 = const()[name = tensor<string, []>("op_1651_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1651_cast_fp16 = einsum(equation = var_1651_equation_0, values = (var_1487_cast_fp16, var_1606_cast_fp16))[name = tensor<string, []>("op_1651_cast_fp16")];
            tensor<string, []> var_1653_equation_0 = const()[name = tensor<string, []>("op_1653_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1653_cast_fp16 = einsum(equation = var_1653_equation_0, values = (var_1487_cast_fp16, var_1607_cast_fp16))[name = tensor<string, []>("op_1653_cast_fp16")];
            tensor<string, []> var_1655_equation_0 = const()[name = tensor<string, []>("op_1655_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1655_cast_fp16 = einsum(equation = var_1655_equation_0, values = (var_1487_cast_fp16, var_1608_cast_fp16))[name = tensor<string, []>("op_1655_cast_fp16")];
            tensor<string, []> var_1657_equation_0 = const()[name = tensor<string, []>("op_1657_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_1657_cast_fp16 = einsum(equation = var_1657_equation_0, values = (var_1487_cast_fp16, var_1609_cast_fp16))[name = tensor<string, []>("op_1657_cast_fp16")];
            tensor<bool, []> var_1659_interleave_0 = const()[name = tensor<string, []>("op_1659_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 1500]> var_1659_cast_fp16 = concat(axis = var_1184, interleave = var_1659_interleave_0, values = (var_1611_cast_fp16, var_1613_cast_fp16, var_1615_cast_fp16, var_1617_cast_fp16))[name = tensor<string, []>("op_1659_cast_fp16")];
            tensor<bool, []> var_1661_interleave_0 = const()[name = tensor<string, []>("op_1661_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 1500]> var_1661_cast_fp16 = concat(axis = var_1184, interleave = var_1661_interleave_0, values = (var_1619_cast_fp16, var_1621_cast_fp16, var_1623_cast_fp16, var_1625_cast_fp16))[name = tensor<string, []>("op_1661_cast_fp16")];
            tensor<bool, []> var_1663_interleave_0 = const()[name = tensor<string, []>("op_1663_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 1500]> var_1663_cast_fp16 = concat(axis = var_1184, interleave = var_1663_interleave_0, values = (var_1627_cast_fp16, var_1629_cast_fp16, var_1631_cast_fp16, var_1633_cast_fp16))[name = tensor<string, []>("op_1663_cast_fp16")];
            tensor<bool, []> var_1665_interleave_0 = const()[name = tensor<string, []>("op_1665_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 1500]> var_1665_cast_fp16 = concat(axis = var_1184, interleave = var_1665_interleave_0, values = (var_1635_cast_fp16, var_1637_cast_fp16, var_1639_cast_fp16, var_1641_cast_fp16))[name = tensor<string, []>("op_1665_cast_fp16")];
            tensor<bool, []> var_1667_interleave_0 = const()[name = tensor<string, []>("op_1667_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 1500]> var_1667_cast_fp16 = concat(axis = var_1184, interleave = var_1667_interleave_0, values = (var_1643_cast_fp16, var_1645_cast_fp16, var_1647_cast_fp16, var_1649_cast_fp16))[name = tensor<string, []>("op_1667_cast_fp16")];
            tensor<bool, []> var_1669_interleave_0 = const()[name = tensor<string, []>("op_1669_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 1500]> var_1669_cast_fp16 = concat(axis = var_1184, interleave = var_1669_interleave_0, values = (var_1651_cast_fp16, var_1653_cast_fp16, var_1655_cast_fp16, var_1657_cast_fp16))[name = tensor<string, []>("op_1669_cast_fp16")];
            tensor<bool, []> input_17_interleave_0 = const()[name = tensor<string, []>("input_17_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 1, 1500]> input_17_cast_fp16 = concat(axis = var_1195, interleave = input_17_interleave_0, values = (var_1659_cast_fp16, var_1661_cast_fp16, var_1663_cast_fp16, var_1665_cast_fp16, var_1667_cast_fp16, var_1669_cast_fp16))[name = tensor<string, []>("input_17_cast_fp16")];
            tensor<int32, [2]> var_1674 = const()[name = tensor<string, []>("op_1674"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1676 = const()[name = tensor<string, []>("op_1676"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_11_pad_type_0 = const()[name = tensor<string, []>("obj_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_11_pad_0 = const()[name = tensor<string, []>("obj_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_2_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10211136)))];
            tensor<fp16, [384]> layers_2_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10506112)))];
            tensor<fp16, [1, 384, 1, 1500]> obj_11_cast_fp16 = conv(bias = layers_2_self_attn_o_proj_bias_to_fp16, dilations = var_1676, groups = var_1195, pad = obj_11_pad_0, pad_type = obj_11_pad_type_0, strides = var_1674, weight = layers_2_self_attn_o_proj_weight_to_fp16, x = input_17_cast_fp16)[name = tensor<string, []>("obj_11_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> inputs_11_cast_fp16 = add(x = inputs_9_cast_fp16, y = obj_11_cast_fp16)[name = tensor<string, []>("inputs_11_cast_fp16")];
            tensor<int32, [1]> var_1682 = const()[name = tensor<string, []>("op_1682"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1500]> channels_mean_11_cast_fp16 = reduce_mean(axes = var_1682, keep_dims = var_1196, x = inputs_11_cast_fp16)[name = tensor<string, []>("channels_mean_11_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> zero_mean_11_cast_fp16 = sub(x = inputs_11_cast_fp16, y = channels_mean_11_cast_fp16)[name = tensor<string, []>("zero_mean_11_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> zero_mean_sq_11_cast_fp16 = mul(x = zero_mean_11_cast_fp16, y = zero_mean_11_cast_fp16)[name = tensor<string, []>("zero_mean_sq_11_cast_fp16")];
            tensor<int32, [1]> var_1686 = const()[name = tensor<string, []>("op_1686"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1500]> var_1687_cast_fp16 = reduce_mean(axes = var_1686, keep_dims = var_1196, x = zero_mean_sq_11_cast_fp16)[name = tensor<string, []>("op_1687_cast_fp16")];
            tensor<fp16, []> var_1688_to_fp16 = const()[name = tensor<string, []>("op_1688_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1500]> var_1689_cast_fp16 = add(x = var_1687_cast_fp16, y = var_1688_to_fp16)[name = tensor<string, []>("op_1689_cast_fp16")];
            tensor<fp16, []> denom_11_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_11_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1500]> denom_11_cast_fp16 = rsqrt(epsilon = denom_11_epsilon_0_to_fp16, x = var_1689_cast_fp16)[name = tensor<string, []>("denom_11_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> out_11_cast_fp16 = mul(x = zero_mean_11_cast_fp16, y = denom_11_cast_fp16)[name = tensor<string, []>("out_11_cast_fp16")];
            tensor<fp16, [384]> input_19_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_19_gamma_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10506944)))];
            tensor<fp16, [384]> input_19_beta_0_to_fp16 = const()[name = tensor<string, []>("input_19_beta_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10507776)))];
            tensor<fp16, []> input_19_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_19_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 384, 1, 1500]> input_19_cast_fp16 = batch_norm(beta = input_19_beta_0_to_fp16, epsilon = input_19_epsilon_0_to_fp16, gamma = input_19_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_11_cast_fp16)[name = tensor<string, []>("input_19_cast_fp16")];
            tensor<int32, [2]> var_1700 = const()[name = tensor<string, []>("op_1700"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1702 = const()[name = tensor<string, []>("op_1702"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_21_pad_type_0 = const()[name = tensor<string, []>("input_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_21_pad_0 = const()[name = tensor<string, []>("input_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 384, 1, 1]> layers_2_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_fc1_weight_to_fp16"), val = tensor<fp16, [1536, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10508608)))];
            tensor<fp16, [1536]> layers_2_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_fc1_bias_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11688320)))];
            tensor<fp16, [1, 1536, 1, 1500]> input_21_cast_fp16 = conv(bias = layers_2_fc1_bias_to_fp16, dilations = var_1702, groups = var_1195, pad = input_21_pad_0, pad_type = input_21_pad_type_0, strides = var_1700, weight = layers_2_fc1_weight_to_fp16, x = input_19_cast_fp16)[name = tensor<string, []>("input_21_cast_fp16")];
            tensor<string, []> input_23_mode_0 = const()[name = tensor<string, []>("input_23_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 1536, 1, 1500]> input_23_cast_fp16 = gelu(mode = input_23_mode_0, x = input_21_cast_fp16)[name = tensor<string, []>("input_23_cast_fp16")];
            tensor<int32, [2]> var_1708 = const()[name = tensor<string, []>("op_1708"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1710 = const()[name = tensor<string, []>("op_1710"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_9_pad_type_0 = const()[name = tensor<string, []>("hidden_states_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_9_pad_0 = const()[name = tensor<string, []>("hidden_states_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 1536, 1, 1]> layers_2_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_2_fc2_weight_to_fp16"), val = tensor<fp16, [384, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11691456)))];
            tensor<fp16, [384]> layers_2_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_2_fc2_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12871168)))];
            tensor<fp16, [1, 384, 1, 1500]> hidden_states_9_cast_fp16 = conv(bias = layers_2_fc2_bias_to_fp16, dilations = var_1710, groups = var_1195, pad = hidden_states_9_pad_0, pad_type = hidden_states_9_pad_type_0, strides = var_1708, weight = layers_2_fc2_weight_to_fp16, x = input_23_cast_fp16)[name = tensor<string, []>("hidden_states_9_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> inputs_13_cast_fp16 = add(x = inputs_11_cast_fp16, y = hidden_states_9_cast_fp16)[name = tensor<string, []>("inputs_13_cast_fp16")];
            tensor<int32, []> var_1717 = const()[name = tensor<string, []>("op_1717"), val = tensor<int32, []>(3)];
            tensor<int32, []> var_1728 = const()[name = tensor<string, []>("op_1728"), val = tensor<int32, []>(1)];
            tensor<bool, []> var_1729 = const()[name = tensor<string, []>("op_1729"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_1739 = const()[name = tensor<string, []>("op_1739"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1500]> channels_mean_13_cast_fp16 = reduce_mean(axes = var_1739, keep_dims = var_1729, x = inputs_13_cast_fp16)[name = tensor<string, []>("channels_mean_13_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> zero_mean_13_cast_fp16 = sub(x = inputs_13_cast_fp16, y = channels_mean_13_cast_fp16)[name = tensor<string, []>("zero_mean_13_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> zero_mean_sq_13_cast_fp16 = mul(x = zero_mean_13_cast_fp16, y = zero_mean_13_cast_fp16)[name = tensor<string, []>("zero_mean_sq_13_cast_fp16")];
            tensor<int32, [1]> var_1743 = const()[name = tensor<string, []>("op_1743"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1500]> var_1744_cast_fp16 = reduce_mean(axes = var_1743, keep_dims = var_1729, x = zero_mean_sq_13_cast_fp16)[name = tensor<string, []>("op_1744_cast_fp16")];
            tensor<fp16, []> var_1745_to_fp16 = const()[name = tensor<string, []>("op_1745_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1500]> var_1746_cast_fp16 = add(x = var_1744_cast_fp16, y = var_1745_to_fp16)[name = tensor<string, []>("op_1746_cast_fp16")];
            tensor<fp16, []> denom_13_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_13_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1500]> denom_13_cast_fp16 = rsqrt(epsilon = denom_13_epsilon_0_to_fp16, x = var_1746_cast_fp16)[name = tensor<string, []>("denom_13_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> out_13_cast_fp16 = mul(x = zero_mean_13_cast_fp16, y = denom_13_cast_fp16)[name = tensor<string, []>("out_13_cast_fp16")];
            tensor<fp16, [384]> obj_13_gamma_0_to_fp16 = const()[name = tensor<string, []>("obj_13_gamma_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12872000)))];
            tensor<fp16, [384]> obj_13_beta_0_to_fp16 = const()[name = tensor<string, []>("obj_13_beta_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12872832)))];
            tensor<fp16, []> obj_13_epsilon_0_to_fp16 = const()[name = tensor<string, []>("obj_13_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 384, 1, 1500]> obj_13_cast_fp16 = batch_norm(beta = obj_13_beta_0_to_fp16, epsilon = obj_13_epsilon_0_to_fp16, gamma = obj_13_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_13_cast_fp16)[name = tensor<string, []>("obj_13_cast_fp16")];
            tensor<int32, [2]> var_1761 = const()[name = tensor<string, []>("op_1761"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1763 = const()[name = tensor<string, []>("op_1763"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> query_pad_type_0 = const()[name = tensor<string, []>("query_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> query_pad_0 = const()[name = tensor<string, []>("query_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_3_self_attn_q_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_q_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12873664)))];
            tensor<fp16, [384]> layers_3_self_attn_q_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_q_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13168640)))];
            tensor<fp16, [1, 384, 1, 1500]> query_cast_fp16 = conv(bias = layers_3_self_attn_q_proj_bias_to_fp16, dilations = var_1763, groups = var_1728, pad = query_pad_0, pad_type = query_pad_type_0, strides = var_1761, weight = layers_3_self_attn_q_proj_weight_to_fp16, x = obj_13_cast_fp16)[name = tensor<string, []>("query_cast_fp16")];
            tensor<int32, [2]> var_1767 = const()[name = tensor<string, []>("op_1767"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1769 = const()[name = tensor<string, []>("op_1769"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> key_pad_type_0 = const()[name = tensor<string, []>("key_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> key_pad_0 = const()[name = tensor<string, []>("key_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_3_self_attn_k_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_k_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13169472)))];
            tensor<fp16, [1, 384, 1, 1500]> key_cast_fp16 = conv(dilations = var_1769, groups = var_1728, pad = key_pad_0, pad_type = key_pad_type_0, strides = var_1767, weight = layers_3_self_attn_k_proj_weight_to_fp16, x = obj_13_cast_fp16)[name = tensor<string, []>("key_cast_fp16")];
            tensor<int32, [2]> var_1774 = const()[name = tensor<string, []>("op_1774"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1776 = const()[name = tensor<string, []>("op_1776"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> value_pad_type_0 = const()[name = tensor<string, []>("value_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> value_pad_0 = const()[name = tensor<string, []>("value_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_3_self_attn_v_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_v_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13464448)))];
            tensor<fp16, [384]> layers_3_self_attn_v_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_v_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13759424)))];
            tensor<fp16, [1, 384, 1, 1500]> value_cast_fp16 = conv(bias = layers_3_self_attn_v_proj_bias_to_fp16, dilations = var_1776, groups = var_1728, pad = value_pad_0, pad_type = value_pad_type_0, strides = var_1774, weight = layers_3_self_attn_v_proj_weight_to_fp16, x = obj_13_cast_fp16)[name = tensor<string, []>("value_cast_fp16")];
            tensor<int32, [4]> var_1783_begin_0 = const()[name = tensor<string, []>("op_1783_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1783_end_0 = const()[name = tensor<string, []>("op_1783_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_1783_end_mask_0 = const()[name = tensor<string, []>("op_1783_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_1783_cast_fp16 = slice_by_index(begin = var_1783_begin_0, end = var_1783_end_0, end_mask = var_1783_end_mask_0, x = query_cast_fp16)[name = tensor<string, []>("op_1783_cast_fp16")];
            tensor<int32, [4]> var_1787_begin_0 = const()[name = tensor<string, []>("op_1787_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_1787_end_0 = const()[name = tensor<string, []>("op_1787_end_0"), val = tensor<int32, [4]>([1, 128, 1, 1500])];
            tensor<bool, [4]> var_1787_end_mask_0 = const()[name = tensor<string, []>("op_1787_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_1787_cast_fp16 = slice_by_index(begin = var_1787_begin_0, end = var_1787_end_0, end_mask = var_1787_end_mask_0, x = query_cast_fp16)[name = tensor<string, []>("op_1787_cast_fp16")];
            tensor<int32, [4]> var_1791_begin_0 = const()[name = tensor<string, []>("op_1791_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_1791_end_0 = const()[name = tensor<string, []>("op_1791_end_0"), val = tensor<int32, [4]>([1, 192, 1, 1500])];
            tensor<bool, [4]> var_1791_end_mask_0 = const()[name = tensor<string, []>("op_1791_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_1791_cast_fp16 = slice_by_index(begin = var_1791_begin_0, end = var_1791_end_0, end_mask = var_1791_end_mask_0, x = query_cast_fp16)[name = tensor<string, []>("op_1791_cast_fp16")];
            tensor<int32, [4]> var_1795_begin_0 = const()[name = tensor<string, []>("op_1795_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_1795_end_0 = const()[name = tensor<string, []>("op_1795_end_0"), val = tensor<int32, [4]>([1, 256, 1, 1500])];
            tensor<bool, [4]> var_1795_end_mask_0 = const()[name = tensor<string, []>("op_1795_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_1795_cast_fp16 = slice_by_index(begin = var_1795_begin_0, end = var_1795_end_0, end_mask = var_1795_end_mask_0, x = query_cast_fp16)[name = tensor<string, []>("op_1795_cast_fp16")];
            tensor<int32, [4]> var_1799_begin_0 = const()[name = tensor<string, []>("op_1799_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_1799_end_0 = const()[name = tensor<string, []>("op_1799_end_0"), val = tensor<int32, [4]>([1, 320, 1, 1500])];
            tensor<bool, [4]> var_1799_end_mask_0 = const()[name = tensor<string, []>("op_1799_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_1799_cast_fp16 = slice_by_index(begin = var_1799_begin_0, end = var_1799_end_0, end_mask = var_1799_end_mask_0, x = query_cast_fp16)[name = tensor<string, []>("op_1799_cast_fp16")];
            tensor<int32, [4]> var_1803_begin_0 = const()[name = tensor<string, []>("op_1803_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_1803_end_0 = const()[name = tensor<string, []>("op_1803_end_0"), val = tensor<int32, [4]>([1, 384, 1, 1500])];
            tensor<bool, [4]> var_1803_end_mask_0 = const()[name = tensor<string, []>("op_1803_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_1803_cast_fp16 = slice_by_index(begin = var_1803_begin_0, end = var_1803_end_0, end_mask = var_1803_end_mask_0, x = query_cast_fp16)[name = tensor<string, []>("op_1803_cast_fp16")];
            tensor<int32, [4]> var_1812_begin_0 = const()[name = tensor<string, []>("op_1812_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1812_end_0 = const()[name = tensor<string, []>("op_1812_end_0"), val = tensor<int32, [4]>([1, 64, 1, 375])];
            tensor<bool, [4]> var_1812_end_mask_0 = const()[name = tensor<string, []>("op_1812_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1812_cast_fp16 = slice_by_index(begin = var_1812_begin_0, end = var_1812_end_0, end_mask = var_1812_end_mask_0, x = var_1783_cast_fp16)[name = tensor<string, []>("op_1812_cast_fp16")];
            tensor<int32, [4]> var_1819_begin_0 = const()[name = tensor<string, []>("op_1819_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 375])];
            tensor<int32, [4]> var_1819_end_0 = const()[name = tensor<string, []>("op_1819_end_0"), val = tensor<int32, [4]>([1, 64, 1, 750])];
            tensor<bool, [4]> var_1819_end_mask_0 = const()[name = tensor<string, []>("op_1819_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1819_cast_fp16 = slice_by_index(begin = var_1819_begin_0, end = var_1819_end_0, end_mask = var_1819_end_mask_0, x = var_1783_cast_fp16)[name = tensor<string, []>("op_1819_cast_fp16")];
            tensor<int32, [4]> var_1826_begin_0 = const()[name = tensor<string, []>("op_1826_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 750])];
            tensor<int32, [4]> var_1826_end_0 = const()[name = tensor<string, []>("op_1826_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1125])];
            tensor<bool, [4]> var_1826_end_mask_0 = const()[name = tensor<string, []>("op_1826_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1826_cast_fp16 = slice_by_index(begin = var_1826_begin_0, end = var_1826_end_0, end_mask = var_1826_end_mask_0, x = var_1783_cast_fp16)[name = tensor<string, []>("op_1826_cast_fp16")];
            tensor<int32, [4]> var_1833_begin_0 = const()[name = tensor<string, []>("op_1833_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1125])];
            tensor<int32, [4]> var_1833_end_0 = const()[name = tensor<string, []>("op_1833_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_1833_end_mask_0 = const()[name = tensor<string, []>("op_1833_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1833_cast_fp16 = slice_by_index(begin = var_1833_begin_0, end = var_1833_end_0, end_mask = var_1833_end_mask_0, x = var_1783_cast_fp16)[name = tensor<string, []>("op_1833_cast_fp16")];
            tensor<int32, [4]> var_1840_begin_0 = const()[name = tensor<string, []>("op_1840_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1840_end_0 = const()[name = tensor<string, []>("op_1840_end_0"), val = tensor<int32, [4]>([1, 64, 1, 375])];
            tensor<bool, [4]> var_1840_end_mask_0 = const()[name = tensor<string, []>("op_1840_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1840_cast_fp16 = slice_by_index(begin = var_1840_begin_0, end = var_1840_end_0, end_mask = var_1840_end_mask_0, x = var_1787_cast_fp16)[name = tensor<string, []>("op_1840_cast_fp16")];
            tensor<int32, [4]> var_1847_begin_0 = const()[name = tensor<string, []>("op_1847_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 375])];
            tensor<int32, [4]> var_1847_end_0 = const()[name = tensor<string, []>("op_1847_end_0"), val = tensor<int32, [4]>([1, 64, 1, 750])];
            tensor<bool, [4]> var_1847_end_mask_0 = const()[name = tensor<string, []>("op_1847_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1847_cast_fp16 = slice_by_index(begin = var_1847_begin_0, end = var_1847_end_0, end_mask = var_1847_end_mask_0, x = var_1787_cast_fp16)[name = tensor<string, []>("op_1847_cast_fp16")];
            tensor<int32, [4]> var_1854_begin_0 = const()[name = tensor<string, []>("op_1854_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 750])];
            tensor<int32, [4]> var_1854_end_0 = const()[name = tensor<string, []>("op_1854_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1125])];
            tensor<bool, [4]> var_1854_end_mask_0 = const()[name = tensor<string, []>("op_1854_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1854_cast_fp16 = slice_by_index(begin = var_1854_begin_0, end = var_1854_end_0, end_mask = var_1854_end_mask_0, x = var_1787_cast_fp16)[name = tensor<string, []>("op_1854_cast_fp16")];
            tensor<int32, [4]> var_1861_begin_0 = const()[name = tensor<string, []>("op_1861_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1125])];
            tensor<int32, [4]> var_1861_end_0 = const()[name = tensor<string, []>("op_1861_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_1861_end_mask_0 = const()[name = tensor<string, []>("op_1861_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1861_cast_fp16 = slice_by_index(begin = var_1861_begin_0, end = var_1861_end_0, end_mask = var_1861_end_mask_0, x = var_1787_cast_fp16)[name = tensor<string, []>("op_1861_cast_fp16")];
            tensor<int32, [4]> var_1868_begin_0 = const()[name = tensor<string, []>("op_1868_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1868_end_0 = const()[name = tensor<string, []>("op_1868_end_0"), val = tensor<int32, [4]>([1, 64, 1, 375])];
            tensor<bool, [4]> var_1868_end_mask_0 = const()[name = tensor<string, []>("op_1868_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1868_cast_fp16 = slice_by_index(begin = var_1868_begin_0, end = var_1868_end_0, end_mask = var_1868_end_mask_0, x = var_1791_cast_fp16)[name = tensor<string, []>("op_1868_cast_fp16")];
            tensor<int32, [4]> var_1875_begin_0 = const()[name = tensor<string, []>("op_1875_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 375])];
            tensor<int32, [4]> var_1875_end_0 = const()[name = tensor<string, []>("op_1875_end_0"), val = tensor<int32, [4]>([1, 64, 1, 750])];
            tensor<bool, [4]> var_1875_end_mask_0 = const()[name = tensor<string, []>("op_1875_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1875_cast_fp16 = slice_by_index(begin = var_1875_begin_0, end = var_1875_end_0, end_mask = var_1875_end_mask_0, x = var_1791_cast_fp16)[name = tensor<string, []>("op_1875_cast_fp16")];
            tensor<int32, [4]> var_1882_begin_0 = const()[name = tensor<string, []>("op_1882_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 750])];
            tensor<int32, [4]> var_1882_end_0 = const()[name = tensor<string, []>("op_1882_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1125])];
            tensor<bool, [4]> var_1882_end_mask_0 = const()[name = tensor<string, []>("op_1882_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1882_cast_fp16 = slice_by_index(begin = var_1882_begin_0, end = var_1882_end_0, end_mask = var_1882_end_mask_0, x = var_1791_cast_fp16)[name = tensor<string, []>("op_1882_cast_fp16")];
            tensor<int32, [4]> var_1889_begin_0 = const()[name = tensor<string, []>("op_1889_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1125])];
            tensor<int32, [4]> var_1889_end_0 = const()[name = tensor<string, []>("op_1889_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_1889_end_mask_0 = const()[name = tensor<string, []>("op_1889_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1889_cast_fp16 = slice_by_index(begin = var_1889_begin_0, end = var_1889_end_0, end_mask = var_1889_end_mask_0, x = var_1791_cast_fp16)[name = tensor<string, []>("op_1889_cast_fp16")];
            tensor<int32, [4]> var_1896_begin_0 = const()[name = tensor<string, []>("op_1896_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1896_end_0 = const()[name = tensor<string, []>("op_1896_end_0"), val = tensor<int32, [4]>([1, 64, 1, 375])];
            tensor<bool, [4]> var_1896_end_mask_0 = const()[name = tensor<string, []>("op_1896_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1896_cast_fp16 = slice_by_index(begin = var_1896_begin_0, end = var_1896_end_0, end_mask = var_1896_end_mask_0, x = var_1795_cast_fp16)[name = tensor<string, []>("op_1896_cast_fp16")];
            tensor<int32, [4]> var_1903_begin_0 = const()[name = tensor<string, []>("op_1903_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 375])];
            tensor<int32, [4]> var_1903_end_0 = const()[name = tensor<string, []>("op_1903_end_0"), val = tensor<int32, [4]>([1, 64, 1, 750])];
            tensor<bool, [4]> var_1903_end_mask_0 = const()[name = tensor<string, []>("op_1903_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1903_cast_fp16 = slice_by_index(begin = var_1903_begin_0, end = var_1903_end_0, end_mask = var_1903_end_mask_0, x = var_1795_cast_fp16)[name = tensor<string, []>("op_1903_cast_fp16")];
            tensor<int32, [4]> var_1910_begin_0 = const()[name = tensor<string, []>("op_1910_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 750])];
            tensor<int32, [4]> var_1910_end_0 = const()[name = tensor<string, []>("op_1910_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1125])];
            tensor<bool, [4]> var_1910_end_mask_0 = const()[name = tensor<string, []>("op_1910_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1910_cast_fp16 = slice_by_index(begin = var_1910_begin_0, end = var_1910_end_0, end_mask = var_1910_end_mask_0, x = var_1795_cast_fp16)[name = tensor<string, []>("op_1910_cast_fp16")];
            tensor<int32, [4]> var_1917_begin_0 = const()[name = tensor<string, []>("op_1917_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1125])];
            tensor<int32, [4]> var_1917_end_0 = const()[name = tensor<string, []>("op_1917_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_1917_end_mask_0 = const()[name = tensor<string, []>("op_1917_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1917_cast_fp16 = slice_by_index(begin = var_1917_begin_0, end = var_1917_end_0, end_mask = var_1917_end_mask_0, x = var_1795_cast_fp16)[name = tensor<string, []>("op_1917_cast_fp16")];
            tensor<int32, [4]> var_1924_begin_0 = const()[name = tensor<string, []>("op_1924_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1924_end_0 = const()[name = tensor<string, []>("op_1924_end_0"), val = tensor<int32, [4]>([1, 64, 1, 375])];
            tensor<bool, [4]> var_1924_end_mask_0 = const()[name = tensor<string, []>("op_1924_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1924_cast_fp16 = slice_by_index(begin = var_1924_begin_0, end = var_1924_end_0, end_mask = var_1924_end_mask_0, x = var_1799_cast_fp16)[name = tensor<string, []>("op_1924_cast_fp16")];
            tensor<int32, [4]> var_1931_begin_0 = const()[name = tensor<string, []>("op_1931_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 375])];
            tensor<int32, [4]> var_1931_end_0 = const()[name = tensor<string, []>("op_1931_end_0"), val = tensor<int32, [4]>([1, 64, 1, 750])];
            tensor<bool, [4]> var_1931_end_mask_0 = const()[name = tensor<string, []>("op_1931_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1931_cast_fp16 = slice_by_index(begin = var_1931_begin_0, end = var_1931_end_0, end_mask = var_1931_end_mask_0, x = var_1799_cast_fp16)[name = tensor<string, []>("op_1931_cast_fp16")];
            tensor<int32, [4]> var_1938_begin_0 = const()[name = tensor<string, []>("op_1938_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 750])];
            tensor<int32, [4]> var_1938_end_0 = const()[name = tensor<string, []>("op_1938_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1125])];
            tensor<bool, [4]> var_1938_end_mask_0 = const()[name = tensor<string, []>("op_1938_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1938_cast_fp16 = slice_by_index(begin = var_1938_begin_0, end = var_1938_end_0, end_mask = var_1938_end_mask_0, x = var_1799_cast_fp16)[name = tensor<string, []>("op_1938_cast_fp16")];
            tensor<int32, [4]> var_1945_begin_0 = const()[name = tensor<string, []>("op_1945_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1125])];
            tensor<int32, [4]> var_1945_end_0 = const()[name = tensor<string, []>("op_1945_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_1945_end_mask_0 = const()[name = tensor<string, []>("op_1945_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1945_cast_fp16 = slice_by_index(begin = var_1945_begin_0, end = var_1945_end_0, end_mask = var_1945_end_mask_0, x = var_1799_cast_fp16)[name = tensor<string, []>("op_1945_cast_fp16")];
            tensor<int32, [4]> var_1952_begin_0 = const()[name = tensor<string, []>("op_1952_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1952_end_0 = const()[name = tensor<string, []>("op_1952_end_0"), val = tensor<int32, [4]>([1, 64, 1, 375])];
            tensor<bool, [4]> var_1952_end_mask_0 = const()[name = tensor<string, []>("op_1952_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1952_cast_fp16 = slice_by_index(begin = var_1952_begin_0, end = var_1952_end_0, end_mask = var_1952_end_mask_0, x = var_1803_cast_fp16)[name = tensor<string, []>("op_1952_cast_fp16")];
            tensor<int32, [4]> var_1959_begin_0 = const()[name = tensor<string, []>("op_1959_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 375])];
            tensor<int32, [4]> var_1959_end_0 = const()[name = tensor<string, []>("op_1959_end_0"), val = tensor<int32, [4]>([1, 64, 1, 750])];
            tensor<bool, [4]> var_1959_end_mask_0 = const()[name = tensor<string, []>("op_1959_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1959_cast_fp16 = slice_by_index(begin = var_1959_begin_0, end = var_1959_end_0, end_mask = var_1959_end_mask_0, x = var_1803_cast_fp16)[name = tensor<string, []>("op_1959_cast_fp16")];
            tensor<int32, [4]> var_1966_begin_0 = const()[name = tensor<string, []>("op_1966_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 750])];
            tensor<int32, [4]> var_1966_end_0 = const()[name = tensor<string, []>("op_1966_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1125])];
            tensor<bool, [4]> var_1966_end_mask_0 = const()[name = tensor<string, []>("op_1966_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1966_cast_fp16 = slice_by_index(begin = var_1966_begin_0, end = var_1966_end_0, end_mask = var_1966_end_mask_0, x = var_1803_cast_fp16)[name = tensor<string, []>("op_1966_cast_fp16")];
            tensor<int32, [4]> var_1973_begin_0 = const()[name = tensor<string, []>("op_1973_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1125])];
            tensor<int32, [4]> var_1973_end_0 = const()[name = tensor<string, []>("op_1973_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_1973_end_mask_0 = const()[name = tensor<string, []>("op_1973_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 64, 1, 375]> var_1973_cast_fp16 = slice_by_index(begin = var_1973_begin_0, end = var_1973_end_0, end_mask = var_1973_end_mask_0, x = var_1803_cast_fp16)[name = tensor<string, []>("op_1973_cast_fp16")];
            tensor<int32, [4]> k_perm_0 = const()[name = tensor<string, []>("k_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_1978_begin_0 = const()[name = tensor<string, []>("op_1978_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1978_end_0 = const()[name = tensor<string, []>("op_1978_end_0"), val = tensor<int32, [4]>([1, 1500, 1, 64])];
            tensor<bool, [4]> var_1978_end_mask_0 = const()[name = tensor<string, []>("op_1978_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 1500, 1, 384]> transpose_0 = transpose(perm = k_perm_0, x = key_cast_fp16)[name = tensor<string, []>("transpose_0")];
            tensor<fp16, [1, 1500, 1, 64]> var_1978_cast_fp16 = slice_by_index(begin = var_1978_begin_0, end = var_1978_end_0, end_mask = var_1978_end_mask_0, x = transpose_0)[name = tensor<string, []>("op_1978_cast_fp16")];
            tensor<int32, [4]> var_1982_begin_0 = const()[name = tensor<string, []>("op_1982_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_1982_end_0 = const()[name = tensor<string, []>("op_1982_end_0"), val = tensor<int32, [4]>([1, 1500, 1, 128])];
            tensor<bool, [4]> var_1982_end_mask_0 = const()[name = tensor<string, []>("op_1982_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 1500, 1, 64]> var_1982_cast_fp16 = slice_by_index(begin = var_1982_begin_0, end = var_1982_end_0, end_mask = var_1982_end_mask_0, x = transpose_0)[name = tensor<string, []>("op_1982_cast_fp16")];
            tensor<int32, [4]> var_1986_begin_0 = const()[name = tensor<string, []>("op_1986_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_1986_end_0 = const()[name = tensor<string, []>("op_1986_end_0"), val = tensor<int32, [4]>([1, 1500, 1, 192])];
            tensor<bool, [4]> var_1986_end_mask_0 = const()[name = tensor<string, []>("op_1986_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 1500, 1, 64]> var_1986_cast_fp16 = slice_by_index(begin = var_1986_begin_0, end = var_1986_end_0, end_mask = var_1986_end_mask_0, x = transpose_0)[name = tensor<string, []>("op_1986_cast_fp16")];
            tensor<int32, [4]> var_1990_begin_0 = const()[name = tensor<string, []>("op_1990_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_1990_end_0 = const()[name = tensor<string, []>("op_1990_end_0"), val = tensor<int32, [4]>([1, 1500, 1, 256])];
            tensor<bool, [4]> var_1990_end_mask_0 = const()[name = tensor<string, []>("op_1990_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 1500, 1, 64]> var_1990_cast_fp16 = slice_by_index(begin = var_1990_begin_0, end = var_1990_end_0, end_mask = var_1990_end_mask_0, x = transpose_0)[name = tensor<string, []>("op_1990_cast_fp16")];
            tensor<int32, [4]> var_1994_begin_0 = const()[name = tensor<string, []>("op_1994_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_1994_end_0 = const()[name = tensor<string, []>("op_1994_end_0"), val = tensor<int32, [4]>([1, 1500, 1, 320])];
            tensor<bool, [4]> var_1994_end_mask_0 = const()[name = tensor<string, []>("op_1994_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 1500, 1, 64]> var_1994_cast_fp16 = slice_by_index(begin = var_1994_begin_0, end = var_1994_end_0, end_mask = var_1994_end_mask_0, x = transpose_0)[name = tensor<string, []>("op_1994_cast_fp16")];
            tensor<int32, [4]> var_1998_begin_0 = const()[name = tensor<string, []>("op_1998_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_1998_end_0 = const()[name = tensor<string, []>("op_1998_end_0"), val = tensor<int32, [4]>([1, 1500, 1, 384])];
            tensor<bool, [4]> var_1998_end_mask_0 = const()[name = tensor<string, []>("op_1998_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 1500, 1, 64]> var_1998_cast_fp16 = slice_by_index(begin = var_1998_begin_0, end = var_1998_end_0, end_mask = var_1998_end_mask_0, x = transpose_0)[name = tensor<string, []>("op_1998_cast_fp16")];
            tensor<int32, [4]> var_2000_begin_0 = const()[name = tensor<string, []>("op_2000_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2000_end_0 = const()[name = tensor<string, []>("op_2000_end_0"), val = tensor<int32, [4]>([1, 64, 1, 1500])];
            tensor<bool, [4]> var_2000_end_mask_0 = const()[name = tensor<string, []>("op_2000_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_2000_cast_fp16 = slice_by_index(begin = var_2000_begin_0, end = var_2000_end_0, end_mask = var_2000_end_mask_0, x = value_cast_fp16)[name = tensor<string, []>("op_2000_cast_fp16")];
            tensor<int32, [4]> var_2004_begin_0 = const()[name = tensor<string, []>("op_2004_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_2004_end_0 = const()[name = tensor<string, []>("op_2004_end_0"), val = tensor<int32, [4]>([1, 128, 1, 1500])];
            tensor<bool, [4]> var_2004_end_mask_0 = const()[name = tensor<string, []>("op_2004_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_2004_cast_fp16 = slice_by_index(begin = var_2004_begin_0, end = var_2004_end_0, end_mask = var_2004_end_mask_0, x = value_cast_fp16)[name = tensor<string, []>("op_2004_cast_fp16")];
            tensor<int32, [4]> var_2008_begin_0 = const()[name = tensor<string, []>("op_2008_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_2008_end_0 = const()[name = tensor<string, []>("op_2008_end_0"), val = tensor<int32, [4]>([1, 192, 1, 1500])];
            tensor<bool, [4]> var_2008_end_mask_0 = const()[name = tensor<string, []>("op_2008_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_2008_cast_fp16 = slice_by_index(begin = var_2008_begin_0, end = var_2008_end_0, end_mask = var_2008_end_mask_0, x = value_cast_fp16)[name = tensor<string, []>("op_2008_cast_fp16")];
            tensor<int32, [4]> var_2012_begin_0 = const()[name = tensor<string, []>("op_2012_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_2012_end_0 = const()[name = tensor<string, []>("op_2012_end_0"), val = tensor<int32, [4]>([1, 256, 1, 1500])];
            tensor<bool, [4]> var_2012_end_mask_0 = const()[name = tensor<string, []>("op_2012_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_2012_cast_fp16 = slice_by_index(begin = var_2012_begin_0, end = var_2012_end_0, end_mask = var_2012_end_mask_0, x = value_cast_fp16)[name = tensor<string, []>("op_2012_cast_fp16")];
            tensor<int32, [4]> var_2016_begin_0 = const()[name = tensor<string, []>("op_2016_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_2016_end_0 = const()[name = tensor<string, []>("op_2016_end_0"), val = tensor<int32, [4]>([1, 320, 1, 1500])];
            tensor<bool, [4]> var_2016_end_mask_0 = const()[name = tensor<string, []>("op_2016_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_2016_cast_fp16 = slice_by_index(begin = var_2016_begin_0, end = var_2016_end_0, end_mask = var_2016_end_mask_0, x = value_cast_fp16)[name = tensor<string, []>("op_2016_cast_fp16")];
            tensor<int32, [4]> var_2020_begin_0 = const()[name = tensor<string, []>("op_2020_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_2020_end_0 = const()[name = tensor<string, []>("op_2020_end_0"), val = tensor<int32, [4]>([1, 384, 1, 1500])];
            tensor<bool, [4]> var_2020_end_mask_0 = const()[name = tensor<string, []>("op_2020_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 64, 1, 1500]> var_2020_cast_fp16 = slice_by_index(begin = var_2020_begin_0, end = var_2020_end_0, end_mask = var_2020_end_mask_0, x = value_cast_fp16)[name = tensor<string, []>("op_2020_cast_fp16")];
            tensor<string, []> var_2024_equation_0 = const()[name = tensor<string, []>("op_2024_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_2024_cast_fp16 = einsum(equation = var_2024_equation_0, values = (var_1978_cast_fp16, var_1812_cast_fp16))[name = tensor<string, []>("op_2024_cast_fp16")];
            tensor<fp16, []> var_2025_to_fp16 = const()[name = tensor<string, []>("op_2025_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_145_cast_fp16 = mul(x = var_2024_cast_fp16, y = var_2025_to_fp16)[name = tensor<string, []>("aw_chunk_145_cast_fp16")];
            tensor<string, []> var_2028_equation_0 = const()[name = tensor<string, []>("op_2028_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_2028_cast_fp16 = einsum(equation = var_2028_equation_0, values = (var_1978_cast_fp16, var_1819_cast_fp16))[name = tensor<string, []>("op_2028_cast_fp16")];
            tensor<fp16, []> var_2029_to_fp16 = const()[name = tensor<string, []>("op_2029_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_147_cast_fp16 = mul(x = var_2028_cast_fp16, y = var_2029_to_fp16)[name = tensor<string, []>("aw_chunk_147_cast_fp16")];
            tensor<string, []> var_2032_equation_0 = const()[name = tensor<string, []>("op_2032_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_2032_cast_fp16 = einsum(equation = var_2032_equation_0, values = (var_1978_cast_fp16, var_1826_cast_fp16))[name = tensor<string, []>("op_2032_cast_fp16")];
            tensor<fp16, []> var_2033_to_fp16 = const()[name = tensor<string, []>("op_2033_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_149_cast_fp16 = mul(x = var_2032_cast_fp16, y = var_2033_to_fp16)[name = tensor<string, []>("aw_chunk_149_cast_fp16")];
            tensor<string, []> var_2036_equation_0 = const()[name = tensor<string, []>("op_2036_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_2036_cast_fp16 = einsum(equation = var_2036_equation_0, values = (var_1978_cast_fp16, var_1833_cast_fp16))[name = tensor<string, []>("op_2036_cast_fp16")];
            tensor<fp16, []> var_2037_to_fp16 = const()[name = tensor<string, []>("op_2037_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_151_cast_fp16 = mul(x = var_2036_cast_fp16, y = var_2037_to_fp16)[name = tensor<string, []>("aw_chunk_151_cast_fp16")];
            tensor<string, []> var_2040_equation_0 = const()[name = tensor<string, []>("op_2040_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_2040_cast_fp16 = einsum(equation = var_2040_equation_0, values = (var_1982_cast_fp16, var_1840_cast_fp16))[name = tensor<string, []>("op_2040_cast_fp16")];
            tensor<fp16, []> var_2041_to_fp16 = const()[name = tensor<string, []>("op_2041_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_153_cast_fp16 = mul(x = var_2040_cast_fp16, y = var_2041_to_fp16)[name = tensor<string, []>("aw_chunk_153_cast_fp16")];
            tensor<string, []> var_2044_equation_0 = const()[name = tensor<string, []>("op_2044_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_2044_cast_fp16 = einsum(equation = var_2044_equation_0, values = (var_1982_cast_fp16, var_1847_cast_fp16))[name = tensor<string, []>("op_2044_cast_fp16")];
            tensor<fp16, []> var_2045_to_fp16 = const()[name = tensor<string, []>("op_2045_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_155_cast_fp16 = mul(x = var_2044_cast_fp16, y = var_2045_to_fp16)[name = tensor<string, []>("aw_chunk_155_cast_fp16")];
            tensor<string, []> var_2048_equation_0 = const()[name = tensor<string, []>("op_2048_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_2048_cast_fp16 = einsum(equation = var_2048_equation_0, values = (var_1982_cast_fp16, var_1854_cast_fp16))[name = tensor<string, []>("op_2048_cast_fp16")];
            tensor<fp16, []> var_2049_to_fp16 = const()[name = tensor<string, []>("op_2049_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_157_cast_fp16 = mul(x = var_2048_cast_fp16, y = var_2049_to_fp16)[name = tensor<string, []>("aw_chunk_157_cast_fp16")];
            tensor<string, []> var_2052_equation_0 = const()[name = tensor<string, []>("op_2052_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_2052_cast_fp16 = einsum(equation = var_2052_equation_0, values = (var_1982_cast_fp16, var_1861_cast_fp16))[name = tensor<string, []>("op_2052_cast_fp16")];
            tensor<fp16, []> var_2053_to_fp16 = const()[name = tensor<string, []>("op_2053_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_159_cast_fp16 = mul(x = var_2052_cast_fp16, y = var_2053_to_fp16)[name = tensor<string, []>("aw_chunk_159_cast_fp16")];
            tensor<string, []> var_2056_equation_0 = const()[name = tensor<string, []>("op_2056_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_2056_cast_fp16 = einsum(equation = var_2056_equation_0, values = (var_1986_cast_fp16, var_1868_cast_fp16))[name = tensor<string, []>("op_2056_cast_fp16")];
            tensor<fp16, []> var_2057_to_fp16 = const()[name = tensor<string, []>("op_2057_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_161_cast_fp16 = mul(x = var_2056_cast_fp16, y = var_2057_to_fp16)[name = tensor<string, []>("aw_chunk_161_cast_fp16")];
            tensor<string, []> var_2060_equation_0 = const()[name = tensor<string, []>("op_2060_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_2060_cast_fp16 = einsum(equation = var_2060_equation_0, values = (var_1986_cast_fp16, var_1875_cast_fp16))[name = tensor<string, []>("op_2060_cast_fp16")];
            tensor<fp16, []> var_2061_to_fp16 = const()[name = tensor<string, []>("op_2061_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_163_cast_fp16 = mul(x = var_2060_cast_fp16, y = var_2061_to_fp16)[name = tensor<string, []>("aw_chunk_163_cast_fp16")];
            tensor<string, []> var_2064_equation_0 = const()[name = tensor<string, []>("op_2064_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_2064_cast_fp16 = einsum(equation = var_2064_equation_0, values = (var_1986_cast_fp16, var_1882_cast_fp16))[name = tensor<string, []>("op_2064_cast_fp16")];
            tensor<fp16, []> var_2065_to_fp16 = const()[name = tensor<string, []>("op_2065_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_165_cast_fp16 = mul(x = var_2064_cast_fp16, y = var_2065_to_fp16)[name = tensor<string, []>("aw_chunk_165_cast_fp16")];
            tensor<string, []> var_2068_equation_0 = const()[name = tensor<string, []>("op_2068_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_2068_cast_fp16 = einsum(equation = var_2068_equation_0, values = (var_1986_cast_fp16, var_1889_cast_fp16))[name = tensor<string, []>("op_2068_cast_fp16")];
            tensor<fp16, []> var_2069_to_fp16 = const()[name = tensor<string, []>("op_2069_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_167_cast_fp16 = mul(x = var_2068_cast_fp16, y = var_2069_to_fp16)[name = tensor<string, []>("aw_chunk_167_cast_fp16")];
            tensor<string, []> var_2072_equation_0 = const()[name = tensor<string, []>("op_2072_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_2072_cast_fp16 = einsum(equation = var_2072_equation_0, values = (var_1990_cast_fp16, var_1896_cast_fp16))[name = tensor<string, []>("op_2072_cast_fp16")];
            tensor<fp16, []> var_2073_to_fp16 = const()[name = tensor<string, []>("op_2073_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_169_cast_fp16 = mul(x = var_2072_cast_fp16, y = var_2073_to_fp16)[name = tensor<string, []>("aw_chunk_169_cast_fp16")];
            tensor<string, []> var_2076_equation_0 = const()[name = tensor<string, []>("op_2076_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_2076_cast_fp16 = einsum(equation = var_2076_equation_0, values = (var_1990_cast_fp16, var_1903_cast_fp16))[name = tensor<string, []>("op_2076_cast_fp16")];
            tensor<fp16, []> var_2077_to_fp16 = const()[name = tensor<string, []>("op_2077_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_171_cast_fp16 = mul(x = var_2076_cast_fp16, y = var_2077_to_fp16)[name = tensor<string, []>("aw_chunk_171_cast_fp16")];
            tensor<string, []> var_2080_equation_0 = const()[name = tensor<string, []>("op_2080_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_2080_cast_fp16 = einsum(equation = var_2080_equation_0, values = (var_1990_cast_fp16, var_1910_cast_fp16))[name = tensor<string, []>("op_2080_cast_fp16")];
            tensor<fp16, []> var_2081_to_fp16 = const()[name = tensor<string, []>("op_2081_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_173_cast_fp16 = mul(x = var_2080_cast_fp16, y = var_2081_to_fp16)[name = tensor<string, []>("aw_chunk_173_cast_fp16")];
            tensor<string, []> var_2084_equation_0 = const()[name = tensor<string, []>("op_2084_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_2084_cast_fp16 = einsum(equation = var_2084_equation_0, values = (var_1990_cast_fp16, var_1917_cast_fp16))[name = tensor<string, []>("op_2084_cast_fp16")];
            tensor<fp16, []> var_2085_to_fp16 = const()[name = tensor<string, []>("op_2085_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_175_cast_fp16 = mul(x = var_2084_cast_fp16, y = var_2085_to_fp16)[name = tensor<string, []>("aw_chunk_175_cast_fp16")];
            tensor<string, []> var_2088_equation_0 = const()[name = tensor<string, []>("op_2088_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_2088_cast_fp16 = einsum(equation = var_2088_equation_0, values = (var_1994_cast_fp16, var_1924_cast_fp16))[name = tensor<string, []>("op_2088_cast_fp16")];
            tensor<fp16, []> var_2089_to_fp16 = const()[name = tensor<string, []>("op_2089_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_177_cast_fp16 = mul(x = var_2088_cast_fp16, y = var_2089_to_fp16)[name = tensor<string, []>("aw_chunk_177_cast_fp16")];
            tensor<string, []> var_2092_equation_0 = const()[name = tensor<string, []>("op_2092_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_2092_cast_fp16 = einsum(equation = var_2092_equation_0, values = (var_1994_cast_fp16, var_1931_cast_fp16))[name = tensor<string, []>("op_2092_cast_fp16")];
            tensor<fp16, []> var_2093_to_fp16 = const()[name = tensor<string, []>("op_2093_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_179_cast_fp16 = mul(x = var_2092_cast_fp16, y = var_2093_to_fp16)[name = tensor<string, []>("aw_chunk_179_cast_fp16")];
            tensor<string, []> var_2096_equation_0 = const()[name = tensor<string, []>("op_2096_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_2096_cast_fp16 = einsum(equation = var_2096_equation_0, values = (var_1994_cast_fp16, var_1938_cast_fp16))[name = tensor<string, []>("op_2096_cast_fp16")];
            tensor<fp16, []> var_2097_to_fp16 = const()[name = tensor<string, []>("op_2097_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_181_cast_fp16 = mul(x = var_2096_cast_fp16, y = var_2097_to_fp16)[name = tensor<string, []>("aw_chunk_181_cast_fp16")];
            tensor<string, []> var_2100_equation_0 = const()[name = tensor<string, []>("op_2100_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_2100_cast_fp16 = einsum(equation = var_2100_equation_0, values = (var_1994_cast_fp16, var_1945_cast_fp16))[name = tensor<string, []>("op_2100_cast_fp16")];
            tensor<fp16, []> var_2101_to_fp16 = const()[name = tensor<string, []>("op_2101_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_183_cast_fp16 = mul(x = var_2100_cast_fp16, y = var_2101_to_fp16)[name = tensor<string, []>("aw_chunk_183_cast_fp16")];
            tensor<string, []> var_2104_equation_0 = const()[name = tensor<string, []>("op_2104_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_2104_cast_fp16 = einsum(equation = var_2104_equation_0, values = (var_1998_cast_fp16, var_1952_cast_fp16))[name = tensor<string, []>("op_2104_cast_fp16")];
            tensor<fp16, []> var_2105_to_fp16 = const()[name = tensor<string, []>("op_2105_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_185_cast_fp16 = mul(x = var_2104_cast_fp16, y = var_2105_to_fp16)[name = tensor<string, []>("aw_chunk_185_cast_fp16")];
            tensor<string, []> var_2108_equation_0 = const()[name = tensor<string, []>("op_2108_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_2108_cast_fp16 = einsum(equation = var_2108_equation_0, values = (var_1998_cast_fp16, var_1959_cast_fp16))[name = tensor<string, []>("op_2108_cast_fp16")];
            tensor<fp16, []> var_2109_to_fp16 = const()[name = tensor<string, []>("op_2109_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_187_cast_fp16 = mul(x = var_2108_cast_fp16, y = var_2109_to_fp16)[name = tensor<string, []>("aw_chunk_187_cast_fp16")];
            tensor<string, []> var_2112_equation_0 = const()[name = tensor<string, []>("op_2112_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_2112_cast_fp16 = einsum(equation = var_2112_equation_0, values = (var_1998_cast_fp16, var_1966_cast_fp16))[name = tensor<string, []>("op_2112_cast_fp16")];
            tensor<fp16, []> var_2113_to_fp16 = const()[name = tensor<string, []>("op_2113_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_189_cast_fp16 = mul(x = var_2112_cast_fp16, y = var_2113_to_fp16)[name = tensor<string, []>("aw_chunk_189_cast_fp16")];
            tensor<string, []> var_2116_equation_0 = const()[name = tensor<string, []>("op_2116_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 375]> var_2116_cast_fp16 = einsum(equation = var_2116_equation_0, values = (var_1998_cast_fp16, var_1973_cast_fp16))[name = tensor<string, []>("op_2116_cast_fp16")];
            tensor<fp16, []> var_2117_to_fp16 = const()[name = tensor<string, []>("op_2117_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [1, 1500, 1, 375]> aw_chunk_cast_fp16 = mul(x = var_2116_cast_fp16, y = var_2117_to_fp16)[name = tensor<string, []>("aw_chunk_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_2119_cast_fp16 = softmax(axis = var_1728, x = aw_chunk_145_cast_fp16)[name = tensor<string, []>("op_2119_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_2120_cast_fp16 = softmax(axis = var_1728, x = aw_chunk_147_cast_fp16)[name = tensor<string, []>("op_2120_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_2121_cast_fp16 = softmax(axis = var_1728, x = aw_chunk_149_cast_fp16)[name = tensor<string, []>("op_2121_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_2122_cast_fp16 = softmax(axis = var_1728, x = aw_chunk_151_cast_fp16)[name = tensor<string, []>("op_2122_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_2123_cast_fp16 = softmax(axis = var_1728, x = aw_chunk_153_cast_fp16)[name = tensor<string, []>("op_2123_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_2124_cast_fp16 = softmax(axis = var_1728, x = aw_chunk_155_cast_fp16)[name = tensor<string, []>("op_2124_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_2125_cast_fp16 = softmax(axis = var_1728, x = aw_chunk_157_cast_fp16)[name = tensor<string, []>("op_2125_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_2126_cast_fp16 = softmax(axis = var_1728, x = aw_chunk_159_cast_fp16)[name = tensor<string, []>("op_2126_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_2127_cast_fp16 = softmax(axis = var_1728, x = aw_chunk_161_cast_fp16)[name = tensor<string, []>("op_2127_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_2128_cast_fp16 = softmax(axis = var_1728, x = aw_chunk_163_cast_fp16)[name = tensor<string, []>("op_2128_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_2129_cast_fp16 = softmax(axis = var_1728, x = aw_chunk_165_cast_fp16)[name = tensor<string, []>("op_2129_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_2130_cast_fp16 = softmax(axis = var_1728, x = aw_chunk_167_cast_fp16)[name = tensor<string, []>("op_2130_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_2131_cast_fp16 = softmax(axis = var_1728, x = aw_chunk_169_cast_fp16)[name = tensor<string, []>("op_2131_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_2132_cast_fp16 = softmax(axis = var_1728, x = aw_chunk_171_cast_fp16)[name = tensor<string, []>("op_2132_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_2133_cast_fp16 = softmax(axis = var_1728, x = aw_chunk_173_cast_fp16)[name = tensor<string, []>("op_2133_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_2134_cast_fp16 = softmax(axis = var_1728, x = aw_chunk_175_cast_fp16)[name = tensor<string, []>("op_2134_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_2135_cast_fp16 = softmax(axis = var_1728, x = aw_chunk_177_cast_fp16)[name = tensor<string, []>("op_2135_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_2136_cast_fp16 = softmax(axis = var_1728, x = aw_chunk_179_cast_fp16)[name = tensor<string, []>("op_2136_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_2137_cast_fp16 = softmax(axis = var_1728, x = aw_chunk_181_cast_fp16)[name = tensor<string, []>("op_2137_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_2138_cast_fp16 = softmax(axis = var_1728, x = aw_chunk_183_cast_fp16)[name = tensor<string, []>("op_2138_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_2139_cast_fp16 = softmax(axis = var_1728, x = aw_chunk_185_cast_fp16)[name = tensor<string, []>("op_2139_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_2140_cast_fp16 = softmax(axis = var_1728, x = aw_chunk_187_cast_fp16)[name = tensor<string, []>("op_2140_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_2141_cast_fp16 = softmax(axis = var_1728, x = aw_chunk_189_cast_fp16)[name = tensor<string, []>("op_2141_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 375]> var_2142_cast_fp16 = softmax(axis = var_1728, x = aw_chunk_cast_fp16)[name = tensor<string, []>("op_2142_cast_fp16")];
            tensor<string, []> var_2144_equation_0 = const()[name = tensor<string, []>("op_2144_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_2144_cast_fp16 = einsum(equation = var_2144_equation_0, values = (var_2000_cast_fp16, var_2119_cast_fp16))[name = tensor<string, []>("op_2144_cast_fp16")];
            tensor<string, []> var_2146_equation_0 = const()[name = tensor<string, []>("op_2146_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_2146_cast_fp16 = einsum(equation = var_2146_equation_0, values = (var_2000_cast_fp16, var_2120_cast_fp16))[name = tensor<string, []>("op_2146_cast_fp16")];
            tensor<string, []> var_2148_equation_0 = const()[name = tensor<string, []>("op_2148_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_2148_cast_fp16 = einsum(equation = var_2148_equation_0, values = (var_2000_cast_fp16, var_2121_cast_fp16))[name = tensor<string, []>("op_2148_cast_fp16")];
            tensor<string, []> var_2150_equation_0 = const()[name = tensor<string, []>("op_2150_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_2150_cast_fp16 = einsum(equation = var_2150_equation_0, values = (var_2000_cast_fp16, var_2122_cast_fp16))[name = tensor<string, []>("op_2150_cast_fp16")];
            tensor<string, []> var_2152_equation_0 = const()[name = tensor<string, []>("op_2152_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_2152_cast_fp16 = einsum(equation = var_2152_equation_0, values = (var_2004_cast_fp16, var_2123_cast_fp16))[name = tensor<string, []>("op_2152_cast_fp16")];
            tensor<string, []> var_2154_equation_0 = const()[name = tensor<string, []>("op_2154_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_2154_cast_fp16 = einsum(equation = var_2154_equation_0, values = (var_2004_cast_fp16, var_2124_cast_fp16))[name = tensor<string, []>("op_2154_cast_fp16")];
            tensor<string, []> var_2156_equation_0 = const()[name = tensor<string, []>("op_2156_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_2156_cast_fp16 = einsum(equation = var_2156_equation_0, values = (var_2004_cast_fp16, var_2125_cast_fp16))[name = tensor<string, []>("op_2156_cast_fp16")];
            tensor<string, []> var_2158_equation_0 = const()[name = tensor<string, []>("op_2158_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_2158_cast_fp16 = einsum(equation = var_2158_equation_0, values = (var_2004_cast_fp16, var_2126_cast_fp16))[name = tensor<string, []>("op_2158_cast_fp16")];
            tensor<string, []> var_2160_equation_0 = const()[name = tensor<string, []>("op_2160_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_2160_cast_fp16 = einsum(equation = var_2160_equation_0, values = (var_2008_cast_fp16, var_2127_cast_fp16))[name = tensor<string, []>("op_2160_cast_fp16")];
            tensor<string, []> var_2162_equation_0 = const()[name = tensor<string, []>("op_2162_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_2162_cast_fp16 = einsum(equation = var_2162_equation_0, values = (var_2008_cast_fp16, var_2128_cast_fp16))[name = tensor<string, []>("op_2162_cast_fp16")];
            tensor<string, []> var_2164_equation_0 = const()[name = tensor<string, []>("op_2164_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_2164_cast_fp16 = einsum(equation = var_2164_equation_0, values = (var_2008_cast_fp16, var_2129_cast_fp16))[name = tensor<string, []>("op_2164_cast_fp16")];
            tensor<string, []> var_2166_equation_0 = const()[name = tensor<string, []>("op_2166_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_2166_cast_fp16 = einsum(equation = var_2166_equation_0, values = (var_2008_cast_fp16, var_2130_cast_fp16))[name = tensor<string, []>("op_2166_cast_fp16")];
            tensor<string, []> var_2168_equation_0 = const()[name = tensor<string, []>("op_2168_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_2168_cast_fp16 = einsum(equation = var_2168_equation_0, values = (var_2012_cast_fp16, var_2131_cast_fp16))[name = tensor<string, []>("op_2168_cast_fp16")];
            tensor<string, []> var_2170_equation_0 = const()[name = tensor<string, []>("op_2170_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_2170_cast_fp16 = einsum(equation = var_2170_equation_0, values = (var_2012_cast_fp16, var_2132_cast_fp16))[name = tensor<string, []>("op_2170_cast_fp16")];
            tensor<string, []> var_2172_equation_0 = const()[name = tensor<string, []>("op_2172_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_2172_cast_fp16 = einsum(equation = var_2172_equation_0, values = (var_2012_cast_fp16, var_2133_cast_fp16))[name = tensor<string, []>("op_2172_cast_fp16")];
            tensor<string, []> var_2174_equation_0 = const()[name = tensor<string, []>("op_2174_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_2174_cast_fp16 = einsum(equation = var_2174_equation_0, values = (var_2012_cast_fp16, var_2134_cast_fp16))[name = tensor<string, []>("op_2174_cast_fp16")];
            tensor<string, []> var_2176_equation_0 = const()[name = tensor<string, []>("op_2176_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_2176_cast_fp16 = einsum(equation = var_2176_equation_0, values = (var_2016_cast_fp16, var_2135_cast_fp16))[name = tensor<string, []>("op_2176_cast_fp16")];
            tensor<string, []> var_2178_equation_0 = const()[name = tensor<string, []>("op_2178_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_2178_cast_fp16 = einsum(equation = var_2178_equation_0, values = (var_2016_cast_fp16, var_2136_cast_fp16))[name = tensor<string, []>("op_2178_cast_fp16")];
            tensor<string, []> var_2180_equation_0 = const()[name = tensor<string, []>("op_2180_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_2180_cast_fp16 = einsum(equation = var_2180_equation_0, values = (var_2016_cast_fp16, var_2137_cast_fp16))[name = tensor<string, []>("op_2180_cast_fp16")];
            tensor<string, []> var_2182_equation_0 = const()[name = tensor<string, []>("op_2182_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_2182_cast_fp16 = einsum(equation = var_2182_equation_0, values = (var_2016_cast_fp16, var_2138_cast_fp16))[name = tensor<string, []>("op_2182_cast_fp16")];
            tensor<string, []> var_2184_equation_0 = const()[name = tensor<string, []>("op_2184_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_2184_cast_fp16 = einsum(equation = var_2184_equation_0, values = (var_2020_cast_fp16, var_2139_cast_fp16))[name = tensor<string, []>("op_2184_cast_fp16")];
            tensor<string, []> var_2186_equation_0 = const()[name = tensor<string, []>("op_2186_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_2186_cast_fp16 = einsum(equation = var_2186_equation_0, values = (var_2020_cast_fp16, var_2140_cast_fp16))[name = tensor<string, []>("op_2186_cast_fp16")];
            tensor<string, []> var_2188_equation_0 = const()[name = tensor<string, []>("op_2188_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_2188_cast_fp16 = einsum(equation = var_2188_equation_0, values = (var_2020_cast_fp16, var_2141_cast_fp16))[name = tensor<string, []>("op_2188_cast_fp16")];
            tensor<string, []> var_2190_equation_0 = const()[name = tensor<string, []>("op_2190_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 375]> var_2190_cast_fp16 = einsum(equation = var_2190_equation_0, values = (var_2020_cast_fp16, var_2142_cast_fp16))[name = tensor<string, []>("op_2190_cast_fp16")];
            tensor<bool, []> var_2192_interleave_0 = const()[name = tensor<string, []>("op_2192_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 1500]> var_2192_cast_fp16 = concat(axis = var_1717, interleave = var_2192_interleave_0, values = (var_2144_cast_fp16, var_2146_cast_fp16, var_2148_cast_fp16, var_2150_cast_fp16))[name = tensor<string, []>("op_2192_cast_fp16")];
            tensor<bool, []> var_2194_interleave_0 = const()[name = tensor<string, []>("op_2194_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 1500]> var_2194_cast_fp16 = concat(axis = var_1717, interleave = var_2194_interleave_0, values = (var_2152_cast_fp16, var_2154_cast_fp16, var_2156_cast_fp16, var_2158_cast_fp16))[name = tensor<string, []>("op_2194_cast_fp16")];
            tensor<bool, []> var_2196_interleave_0 = const()[name = tensor<string, []>("op_2196_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 1500]> var_2196_cast_fp16 = concat(axis = var_1717, interleave = var_2196_interleave_0, values = (var_2160_cast_fp16, var_2162_cast_fp16, var_2164_cast_fp16, var_2166_cast_fp16))[name = tensor<string, []>("op_2196_cast_fp16")];
            tensor<bool, []> var_2198_interleave_0 = const()[name = tensor<string, []>("op_2198_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 1500]> var_2198_cast_fp16 = concat(axis = var_1717, interleave = var_2198_interleave_0, values = (var_2168_cast_fp16, var_2170_cast_fp16, var_2172_cast_fp16, var_2174_cast_fp16))[name = tensor<string, []>("op_2198_cast_fp16")];
            tensor<bool, []> var_2200_interleave_0 = const()[name = tensor<string, []>("op_2200_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 1500]> var_2200_cast_fp16 = concat(axis = var_1717, interleave = var_2200_interleave_0, values = (var_2176_cast_fp16, var_2178_cast_fp16, var_2180_cast_fp16, var_2182_cast_fp16))[name = tensor<string, []>("op_2200_cast_fp16")];
            tensor<bool, []> var_2202_interleave_0 = const()[name = tensor<string, []>("op_2202_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 1500]> var_2202_cast_fp16 = concat(axis = var_1717, interleave = var_2202_interleave_0, values = (var_2184_cast_fp16, var_2186_cast_fp16, var_2188_cast_fp16, var_2190_cast_fp16))[name = tensor<string, []>("op_2202_cast_fp16")];
            tensor<bool, []> input_25_interleave_0 = const()[name = tensor<string, []>("input_25_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 1, 1500]> input_25_cast_fp16 = concat(axis = var_1728, interleave = input_25_interleave_0, values = (var_2192_cast_fp16, var_2194_cast_fp16, var_2196_cast_fp16, var_2198_cast_fp16, var_2200_cast_fp16, var_2202_cast_fp16))[name = tensor<string, []>("input_25_cast_fp16")];
            tensor<int32, [2]> var_2207 = const()[name = tensor<string, []>("op_2207"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2209 = const()[name = tensor<string, []>("op_2209"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> obj_pad_type_0 = const()[name = tensor<string, []>("obj_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> obj_pad_0 = const()[name = tensor<string, []>("obj_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 384, 1, 1]> layers_3_self_attn_o_proj_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_o_proj_weight_to_fp16"), val = tensor<fp16, [384, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13760256)))];
            tensor<fp16, [384]> layers_3_self_attn_o_proj_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_self_attn_o_proj_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14055232)))];
            tensor<fp16, [1, 384, 1, 1500]> obj_cast_fp16 = conv(bias = layers_3_self_attn_o_proj_bias_to_fp16, dilations = var_2209, groups = var_1728, pad = obj_pad_0, pad_type = obj_pad_type_0, strides = var_2207, weight = layers_3_self_attn_o_proj_weight_to_fp16, x = input_25_cast_fp16)[name = tensor<string, []>("obj_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> inputs_15_cast_fp16 = add(x = inputs_13_cast_fp16, y = obj_cast_fp16)[name = tensor<string, []>("inputs_15_cast_fp16")];
            tensor<int32, [1]> var_2215 = const()[name = tensor<string, []>("op_2215"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1500]> channels_mean_15_cast_fp16 = reduce_mean(axes = var_2215, keep_dims = var_1729, x = inputs_15_cast_fp16)[name = tensor<string, []>("channels_mean_15_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> zero_mean_15_cast_fp16 = sub(x = inputs_15_cast_fp16, y = channels_mean_15_cast_fp16)[name = tensor<string, []>("zero_mean_15_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> zero_mean_sq_15_cast_fp16 = mul(x = zero_mean_15_cast_fp16, y = zero_mean_15_cast_fp16)[name = tensor<string, []>("zero_mean_sq_15_cast_fp16")];
            tensor<int32, [1]> var_2219 = const()[name = tensor<string, []>("op_2219"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1500]> var_2220_cast_fp16 = reduce_mean(axes = var_2219, keep_dims = var_1729, x = zero_mean_sq_15_cast_fp16)[name = tensor<string, []>("op_2220_cast_fp16")];
            tensor<fp16, []> var_2221_to_fp16 = const()[name = tensor<string, []>("op_2221_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1500]> var_2222_cast_fp16 = add(x = var_2220_cast_fp16, y = var_2221_to_fp16)[name = tensor<string, []>("op_2222_cast_fp16")];
            tensor<fp16, []> denom_15_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_15_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1500]> denom_15_cast_fp16 = rsqrt(epsilon = denom_15_epsilon_0_to_fp16, x = var_2222_cast_fp16)[name = tensor<string, []>("denom_15_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> out_15_cast_fp16 = mul(x = zero_mean_15_cast_fp16, y = denom_15_cast_fp16)[name = tensor<string, []>("out_15_cast_fp16")];
            tensor<fp16, [384]> input_27_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_27_gamma_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14056064)))];
            tensor<fp16, [384]> input_27_beta_0_to_fp16 = const()[name = tensor<string, []>("input_27_beta_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14056896)))];
            tensor<fp16, []> input_27_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_27_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 384, 1, 1500]> input_27_cast_fp16 = batch_norm(beta = input_27_beta_0_to_fp16, epsilon = input_27_epsilon_0_to_fp16, gamma = input_27_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_15_cast_fp16)[name = tensor<string, []>("input_27_cast_fp16")];
            tensor<int32, [2]> var_2233 = const()[name = tensor<string, []>("op_2233"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2235 = const()[name = tensor<string, []>("op_2235"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_29_pad_type_0 = const()[name = tensor<string, []>("input_29_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_29_pad_0 = const()[name = tensor<string, []>("input_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 384, 1, 1]> layers_3_fc1_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_fc1_weight_to_fp16"), val = tensor<fp16, [1536, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14057728)))];
            tensor<fp16, [1536]> layers_3_fc1_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_fc1_bias_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(15237440)))];
            tensor<fp16, [1, 1536, 1, 1500]> input_29_cast_fp16 = conv(bias = layers_3_fc1_bias_to_fp16, dilations = var_2235, groups = var_1728, pad = input_29_pad_0, pad_type = input_29_pad_type_0, strides = var_2233, weight = layers_3_fc1_weight_to_fp16, x = input_27_cast_fp16)[name = tensor<string, []>("input_29_cast_fp16")];
            tensor<string, []> input_mode_0 = const()[name = tensor<string, []>("input_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 1536, 1, 1500]> input_cast_fp16 = gelu(mode = input_mode_0, x = input_29_cast_fp16)[name = tensor<string, []>("input_cast_fp16")];
            tensor<int32, [2]> var_2241 = const()[name = tensor<string, []>("op_2241"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2243 = const()[name = tensor<string, []>("op_2243"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_pad_type_0 = const()[name = tensor<string, []>("hidden_states_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_pad_0 = const()[name = tensor<string, []>("hidden_states_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [384, 1536, 1, 1]> layers_3_fc2_weight_to_fp16 = const()[name = tensor<string, []>("layers_3_fc2_weight_to_fp16"), val = tensor<fp16, [384, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(15240576)))];
            tensor<fp16, [384]> layers_3_fc2_bias_to_fp16 = const()[name = tensor<string, []>("layers_3_fc2_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16420288)))];
            tensor<fp16, [1, 384, 1, 1500]> hidden_states_cast_fp16 = conv(bias = layers_3_fc2_bias_to_fp16, dilations = var_2243, groups = var_1728, pad = hidden_states_pad_0, pad_type = hidden_states_pad_type_0, strides = var_2241, weight = layers_3_fc2_weight_to_fp16, x = input_cast_fp16)[name = tensor<string, []>("hidden_states_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> inputs_cast_fp16 = add(x = inputs_15_cast_fp16, y = hidden_states_cast_fp16)[name = tensor<string, []>("inputs_cast_fp16")];
            tensor<bool, []> var_2249 = const()[name = tensor<string, []>("op_2249"), val = tensor<bool, []>(true)];
            tensor<int32, [1]> var_2253 = const()[name = tensor<string, []>("op_2253"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1500]> channels_mean_cast_fp16 = reduce_mean(axes = var_2253, keep_dims = var_2249, x = inputs_cast_fp16)[name = tensor<string, []>("channels_mean_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> zero_mean_cast_fp16 = sub(x = inputs_cast_fp16, y = channels_mean_cast_fp16)[name = tensor<string, []>("zero_mean_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> zero_mean_sq_cast_fp16 = mul(x = zero_mean_cast_fp16, y = zero_mean_cast_fp16)[name = tensor<string, []>("zero_mean_sq_cast_fp16")];
            tensor<int32, [1]> var_2257 = const()[name = tensor<string, []>("op_2257"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 1500]> var_2258_cast_fp16 = reduce_mean(axes = var_2257, keep_dims = var_2249, x = zero_mean_sq_cast_fp16)[name = tensor<string, []>("op_2258_cast_fp16")];
            tensor<fp16, []> var_2259_to_fp16 = const()[name = tensor<string, []>("op_2259_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1, 1, 1500]> var_2260_cast_fp16 = add(x = var_2258_cast_fp16, y = var_2259_to_fp16)[name = tensor<string, []>("op_2260_cast_fp16")];
            tensor<fp16, []> denom_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [1, 1, 1, 1500]> denom_cast_fp16 = rsqrt(epsilon = denom_epsilon_0_to_fp16, x = var_2260_cast_fp16)[name = tensor<string, []>("denom_cast_fp16")];
            tensor<fp16, [1, 384, 1, 1500]> out_cast_fp16 = mul(x = zero_mean_cast_fp16, y = denom_cast_fp16)[name = tensor<string, []>("out_cast_fp16")];
            tensor<fp16, [384]> encoder_output_embeds_type_fp32_gamma_0_to_fp16 = const()[name = tensor<string, []>("encoder_output_embeds_type_fp32_gamma_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16421120)))];
            tensor<fp16, [384]> encoder_output_embeds_type_fp32_beta_0_to_fp16 = const()[name = tensor<string, []>("encoder_output_embeds_type_fp32_beta_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16421952)))];
            tensor<fp16, []> encoder_output_embeds_type_fp32_epsilon_0_to_fp16 = const()[name = tensor<string, []>("encoder_output_embeds_type_fp32_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 384, 1, 1500]> encoder_output_embeds = batch_norm(beta = encoder_output_embeds_type_fp32_beta_0_to_fp16, epsilon = encoder_output_embeds_type_fp32_epsilon_0_to_fp16, gamma = encoder_output_embeds_type_fp32_gamma_0_to_fp16, mean = obj_1_mean_0_to_fp16, variance = obj_1_variance_0_to_fp16, x = out_cast_fp16)[name = tensor<string, []>("encoder_output_embeds_type_fp32_cast_fp16")];
        } -> (encoder_output_embeds);
}